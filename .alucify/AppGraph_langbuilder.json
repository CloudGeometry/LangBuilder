{
  "metadata": {
    "name": "LangBuilder Application Graph",
    "version": "2.0",
    "description": "Complete architecture knowledge graph for LangBuilder application with interface, logic, and schema layers",
    "generated": "2025-10-22",
    "node_types": [
      "interface",
      "logic",
      "schema"
    ],
    "edge_types": [
      "composition",
      "navigation",
      "dependency",
      "event",
      "manages",
      "views",
      "relationship"
    ],
    "statistics": {
      "nodes": {
        "total": 571,
        "by_type": {
          "interface": 63,
          "schema": 9,
          "logic": 499
        }
      },
      "edges": {
        "total": 9255,
        "by_type": {
          "composition": 19,
          "navigation": 20,
          "dependency": 9007,
          "event": 73,
          "manages": 6,
          "views": 120,
          "relationship": 10
        }
      },
      "graph_density": 16.21
    }
  },
  "nodes": [
    {
      "id": "ni0001",
      "type": "interface",
      "name": "AdminPage",
      "description": "Interface page: AdminPage",
      "route": "",
      "path": "src/frontend/src/pages/AdminPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "AdminPage",
        "path": "src/frontend/src/pages/AdminPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useContext",
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "lodash",
              "items": [
                "cloneDeep"
              ]
            },
            {
              "source": "@/components/common/paginatorComponent",
              "items": [
                "PaginatorComponent"
              ]
            },
            {
              "source": "@/controllers/API/queries/auth",
              "items": [
                "useAddUser",
                "useDeleteUsers",
                "useGetUsers",
                "useUpdateUser",
                ""
              ]
            },
            {
              "source": "@/customization/components/custom-loader",
              "items": [
                "CustomLoader"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/common/shadTooltipComponent",
              "items": [
                "ShadTooltip"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/checkbox",
              "items": [
                "CheckBoxDiv"
              ]
            },
            {
              "source": "../../components/ui/input",
              "items": [
                "Input"
              ]
            },
            {
              "source": "../../components/ui/table",
              "items": [
                "Table",
                "TableBody",
                "TableCell",
                "TableHead",
                "TableHeader",
                "TableRow",
                ""
              ]
            },
            {
              "source": "../../constants/alerts_constants",
              "items": [
                "USER_ADD_ERROR_ALERT",
                "USER_ADD_SUCCESS_ALERT",
                "USER_DEL_ERROR_ALERT",
                "USER_DEL_SUCCESS_ALERT",
                "USER_EDIT_ERROR_ALERT",
                "USER_EDIT_SUCCESS_ALERT",
                ""
              ]
            },
            {
              "source": "../../constants/constants",
              "items": [
                "ADMIN_HEADER_DESCRIPTION",
                "ADMIN_HEADER_TITLE",
                "PAGINATION_PAGE",
                "PAGINATION_ROWS_COUNT",
                "PAGINATION_SIZE",
                ""
              ]
            },
            {
              "source": "../../contexts/authContext",
              "items": [
                "AuthContext"
              ]
            },
            {
              "source": "../../modals/confirmationModal",
              "items": [
                "ConfirmationModal"
              ]
            },
            {
              "source": "../../modals/userManagementModal",
              "items": [
                "UserManagementModal"
              ]
            },
            {
              "source": "../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "inputValue": {
            "type": "any",
            "defaultValue": "\"\""
          },
          "size": {
            "type": "any",
            "defaultValue": "PAGINATION_SIZE"
          },
          "index": {
            "type": "any",
            "defaultValue": "PAGINATION_PAGE"
          },
          "totalRowsCount": {
            "type": "any",
            "defaultValue": "0"
          },
          "filterUserList": {
            "type": "any",
            "defaultValue": "userList.current"
          }
        },
        "refs": {
          "userList": {
            "type": "any",
            "initialValue": "[]"
          }
        },
        "effects": [
          {
            "dependencies": [],
            "description": "Effect with 0 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useAlertStore",
          "useAddUser",
          "useUpdateUser",
          "useDeleteUsers",
          "useGetUsers"
        ],
        "eventHandlers": {
          "handleChangePagination": {
            "type": "function_declaration",
            "async": false
          },
          "handleFilterUsers": {
            "type": "function_declaration",
            "async": false
          },
          "handleDeleteUser": {
            "type": "function_declaration",
            "async": false
          },
          "handleEditUser": {
            "type": "function_declaration",
            "async": false
          },
          "handleDisableUser": {
            "type": "function_declaration",
            "async": false
          },
          "handleSuperUserEdit": {
            "type": "function_declaration",
            "async": false
          },
          "handleNewUser": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": null,
          "conditionalRendering": [],
          "loops": [
            {
              "type": "map",
              "array": "filterUserList",
              "component": "TableRow"
            }
          ],
          "components": [
            "ConfirmationModal",
            "IconComponent",
            "TableHead",
            "CustomLoader",
            "ShadTooltip",
            "TableHeader",
            "TableCell",
            "UserManagementModal",
            "PaginatorComponent",
            "Input",
            "TableBody",
            "Button",
            "Table",
            "CheckBoxDiv",
            "TableRow"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "AdminPage",
        "file_path": "src/frontend/src/pages/AdminPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "admin-page-panel flex h-full flex-col pb-8"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "main-page-nav-arrangement"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "main-page-nav-title"
              },
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "w-6"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "admin-page-description-text"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full justify-between px-4"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-96 items-center gap-4"
              },
              "category": "html"
            },
            {
              "type": "Input",
              "attributes": {
                "placeholder": "Search Username",
                "value": "inputValue"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "cursor-pointer"
              },
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "w-6 text-foreground"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "w-6 text-foreground"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "UserManagementModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full items-center justify-center"
              },
              "category": "html"
            },
            {
              "type": "CustomLoader",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "m-4 flex items-center justify-between text-sm"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": ""
              },
              "category": "html"
            },
            {
              "type": "Table",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "TableHeader",
              "attributes": {
                "className": "isPending ?"
              },
              "category": "component"
            },
            {
              "type": "TableRow",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "TableHead",
              "attributes": {
                "className": "h-10"
              },
              "category": "component"
            },
            {
              "type": "TableHead",
              "attributes": {
                "className": "h-10"
              },
              "category": "component"
            },
            {
              "type": "TableHead",
              "attributes": {
                "className": "h-10"
              },
              "category": "component"
            },
            {
              "type": "TableHead",
              "attributes": {
                "className": "h-10"
              },
              "category": "component"
            },
            {
              "type": "TableHead",
              "attributes": {
                "className": "h-10"
              },
              "category": "component"
            },
            {
              "type": "TableHead",
              "attributes": {
                "className": "h-10"
              },
              "category": "component"
            },
            {
              "type": "TableHead",
              "attributes": {
                "className": "h-10 w-[100px] text-right"
              },
              "category": "component"
            },
            {
              "type": "TableBody",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "TableRow",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "TableCell",
              "attributes": {
                "className": "truncate py-2 font-medium"
              },
              "category": "component"
            },
            {
              "type": "ShadTooltip",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "cursor-default"
              },
              "category": "html"
            },
            {
              "type": "TableCell",
              "attributes": {
                "className": "truncate py-2"
              },
              "category": "component"
            },
            {
              "type": "ShadTooltip",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "cursor-default"
              },
              "category": "html"
            },
            {
              "type": "TableCell",
              "attributes": {
                "className": "relative left-1 truncate py-2 text-align-last-left"
              },
              "category": "component"
            },
            {
              "type": "ConfirmationModal",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "Input",
            "TableHeader",
            "TableBody",
            "TableRow",
            "TableHead",
            "TableCell",
            "Table",
            "CustomLoader",
            "ShadTooltip",
            "UserManagementModal",
            "IconComponent",
            "ConfirmationModal",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "table",
              "description": "Data table display"
            },
            {
              "type": "list",
              "description": "Dynamic list rendering with map"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Input",
            "Table",
            "TableHeader",
            "TableBody",
            "TableRow",
            "TableCell",
            "TableHead"
          ],
          "custom": [
            "IconComponent",
            "UserManagementModal",
            "CustomLoader",
            "ShadTooltip",
            "ConfirmationModal",
            "CheckBoxDiv",
            "PaginatorComponent"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "w-[100px]",
            "py-2",
            "gap-4",
            "m-4",
            "truncate",
            "cursor-default",
            "flex-col",
            "w-full",
            "h-10",
            "?",
            "left-1",
            "justify-center",
            "ml-2",
            "text-foreground",
            "pb-8",
            "admin-page-description-text",
            "justify-between",
            "items-center",
            "w-4",
            "w-96",
            "w-6",
            "h-4",
            "w-fit",
            "admin-page-panel",
            "cursor-pointer",
            "font-medium",
            "flex",
            "isPending",
            "text-align-last-left",
            "px-4",
            "h-full",
            "text-sm",
            "relative",
            "main-page-nav-arrangement",
            "main-page-nav-title",
            "text-right"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "placeholder": "Search Username",
                "value": "inputValue"
              },
              "type": "text"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "table",
            "columns": [
              "Id",
              "Username",
              "Active",
              "Superuser",
              "Created At",
              "Updated At"
            ],
            "has_pagination": true
          },
          {
            "type": "dynamic_list",
            "arrays": [
              "filterUserList"
            ],
            "description": "Dynamic rendering of 1 lists"
          }
        ],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "AdminPage",
        "file_path": "src/frontend/src/pages/AdminPage/index.tsx",
        "component_type": "page",
        "summary": "Admin page component",
        "jsx_return_statement": "<>\n      {userData && (\n        <div className=\"admin-page-panel flex h-full flex-col pb-8\">\n          <div className=\"main-page-nav-arrangement\">\n            <span className=\"main-page-nav-title\">\n              <IconComponent name=\"Shield\" className=\"w-6\" />\n              {ADMIN_HEADER_TITLE}\n            </span>\n          </div>\n          <span className=\"admin-page-description-text\">\n            {ADMIN_HEADER_DESCRIPTION}\n          </span>\n          <div className=\"flex w-full justify-between px-4\">\n            <div className=\"flex w-96 items-center gap-4\">\n              <Input\n                placeholder=\"Search Username\"\n                value={inputValue}\n                onChange={(e) => handleFilterUsers(e.target.value)}\n              />\n              {inputValue.length > 0 ? (\n                <div\n                  className=\"cursor-pointer\"\n                  onClick={() => {\n                    setInputValue(\"\");\n                    setFilterUserList(userList.current);\n                  }}\n                >\n                  <IconComponent name=\"X\" className=\"w-6 text-foreground\" />\n                </div>\n              ) : (\n                <div>\n                  <IconComponent\n                    name=\"Search\"\n                    className=\"w-6 text-foreground\"\n                  />\n                </div>\n              )}\n            </div>\n            <div>\n              <UserManagementModal\n                title=\"New User\"\n                titleHeader={\"Add a new user\"}\n                cancelText=\"Cancel\"\n                confirmationText=\"Save\"\n                icon={\"UserPlus2\"}\n                onConfirm={(index, user) => {\n                  handleNewUser(user);\n                }}\n                asChild\n              >\n                <Button variant=\"primary\">New User</Button>\n              </UserManagementModal>\n            </div>\n          </div>\n          {isPending || isIdle ? (\n            <div className=\"flex h-full w-full items-center justify-center\">\n              <CustomLoader remSize={12} />\n            </div>\n          ) : userList.current.length === 0 && !isIdle ? (\n            <>\n              <div className=\"m-4 flex items-center justify-between text-sm\">\n                No users registered.\n              </div>\n            </>\n          ) : (\n            <>\n              <div\n                className={\n                  \"m-4 h-fit overflow-x-hidden overflow-y-scroll rounded-md border-2 bg-background custom-scroll\" +\n                  (isPending ? \" border-0\" : \"\")\n                }\n              >\n                <Table className={\"table-fixed outline-1\"}>\n                  <TableHeader\n                    className={\n                      isPending ? \"hidden\" : \"table-fixed bg-muted outline-1\"\n                    }\n                  >\n                    <TableRow>\n                      <TableHead className=\"h-10\">Id</TableHead>\n                      <TableHead className=\"h-10\">Username</TableHead>\n                      <TableHead className=\"h-10\">Active</TableHead>\n                      <TableHead className=\"h-10\">Superuser</TableHead>\n                      <TableHead className=\"h-10\">Created At</TableHead>\n                      <TableHead className=\"h-10\">Updated At</TableHead>\n                      <TableHead className=\"h-10 w-[100px] text-right\"></TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  {!isPending && (\n                    <TableBody>\n                      {filterUserList.map((user: UserInputType, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"truncate py-2 font-medium\">\n                            <ShadTooltip content={user.id}>\n                              <span className=\"cursor-default\">{user.id}</span>\n                            </ShadTooltip>\n                          </TableCell>\n                          <TableCell className=\"truncate py-2\">\n                            <ShadTooltip content={user.username}>\n                              <span className=\"cursor-default\">\n                                {user.username}\n                              </span>\n                            </ShadTooltip>\n                          </TableCell>\n                          <TableCell className=\"relative left-1 truncate py-2 text-align-last-left\">\n                            <ConfirmationModal\n                              size=\"x-small\"\n                              title=\"Edit\"\n                              titleHeader={`${user.username}`}\n                              modalContentTitle=\"Attention!\"\n                              cancelText=\"Cancel\"\n                              confirmationText=\"Confirm\"\n                              icon={\"UserCog2\"}\n                              data={user}\n                              index={index}\n                              onConfirm={(index, user) => {\n                                handleDisableUser(\n                                  user.is_active,\n                                  user.id,\n                                  user,",
        "jsx_simplified": "<>\n      {/* complex expression */}\n            </span>\n          </div>\n          <span className=\"admin-page-description-text\">\n            {ADMIN_HEADER_DESCRIPTION}\n          </span>\n          <div className=\"flex w-full justify-between px-4\">\n            <div className=\"flex w-96 items-center gap-4\">\n              <Input\n                placeholder=\"Search Username\"\n                value={inputValue}\n                onChange={(e) => handleFilterUsers(e.target.value)}\n              />\n              {/* complex expression */}\n                >\n                  <IconComponent name=\"X\" className=\"w-6 text-foreground\" />\n                </div>\n              ) : (\n                <div>\n                  <IconComponent\n                    name=\"Search\"\n                    className=\"w-6 text-foreground\"\n                  />\n                </div>\n              )}\n            </div>\n            <div>\n              <UserManagementModal\n                title=\"New User\"\n                titleHeader={\"Add a new user\"}\n                cancelText=\"Cancel\"\n                confirmationText=\"Save\"\n                icon={\"UserPlus2\"}\n                onConfirm={handleClick}\n                asChild\n              >\n                <Button variant=\"primary\">New User</Button>\n              </UserManagementModal>\n            </div>\n          </div>\n          {/* complex expression */} />\n            </div>\n          ) : userList.current.length === 0 && !isIdle ? (\n            <>\n              <div className=\"m-4 flex items-center justify-between text-sm\">\n                No users registered.\n              </div>\n            </>\n          ) : (\n            <>\n              <div\n                className={/* complex expression */}\n              >\n                <Table className={\"table-fixed outline-1\"}>\n                  <TableHeader\n                    className={\n                      isPending ? \"hidden\" : \"table-fixed bg-muted outline-1\"\n                    }\n                  >\n                    <TableRow>\n                      <TableHead className=\"h-10\">Id</TableHead>\n                      <TableHead className=\"h-10\">Username</TableHead>\n                      <TableHead className=\"h-10\">Active</TableHead>\n                      <TableHead className=\"h-10\">Superuser</TableHead>\n                      <TableHead className=\"h-10\">Created At</TableHead>\n                      <TableHead className=\"h-10\">Updated At</TableHead>\n                      <TableHead className=\"h-10 w-[100px] text-right\"></TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  {/* complex expression */}>\n                          <TableCell className=\"truncate py-2 font-medium\">\n                            <ShadTooltip content={user.id}>\n                              <span className=\"cursor-default\">{user.id}</span>\n                            </ShadTooltip>\n                          </TableCell>\n                          <TableCell className=\"truncate py-2\">\n                            <ShadTooltip content={user.username}>\n                              <span className=\"cursor-default\">\n                                {user.username}\n                              </span>\n                            </ShadTooltip>\n                          </TableCell>\n                          <TableCell className=\"relative left-1 truncate py-2 text-align-last-left\">\n                            <ConfirmationModal\n                              size=\"x-small\"\n                              title=\"Edit\"\n                              titleHeader={`${user.username}`}\n                              modalContentTitle=\"Attention!\"\n                              cancelText=\"Cancel\"\n                              confirmationText=\"Confirm\"\n                              icon={\"UserCog2\"}\n                              data={user}\n                              index={index}\n                              onConfirm={(index, user) => {\n                                handleDisableUser(\n                                  user.is_active,\n                                  user.id,\n                                  user,",
        "imports": [
          {
            "source": "lodash",
            "items": [
              "cloneDeep"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useContext",
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/paginatorComponent",
            "items": [
              "PaginatorComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/controllers/API/queries/auth",
            "items": [
              "useAddUser",
              "useDeleteUsers",
              "useGetUsers",
              "useUpdateUser",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-loader",
            "items": [
              "CustomLoader"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/shadTooltipComponent",
            "items": [
              "ShadTooltip"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/checkbox",
            "items": [
              "CheckBoxDiv"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/input",
            "items": [
              "Input"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/table",
            "items": [
              "Table",
              "TableBody",
              "TableCell",
              "TableHead",
              "TableHeader",
              "TableRow",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../constants/alerts_constants",
            "items": [
              "USER_ADD_ERROR_ALERT",
              "USER_ADD_SUCCESS_ALERT",
              "USER_DEL_ERROR_ALERT",
              "USER_DEL_SUCCESS_ALERT",
              "USER_EDIT_ERROR_ALERT",
              "USER_EDIT_SUCCESS_ALERT",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../constants/constants",
            "items": [
              "ADMIN_HEADER_DESCRIPTION",
              "ADMIN_HEADER_TITLE",
              "PAGINATION_PAGE",
              "PAGINATION_ROWS_COUNT",
              "PAGINATION_SIZE",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../contexts/authContext",
            "items": [
              "AuthContext"
            ],
            "type": "named"
          },
          {
            "source": "../../modals/confirmationModal",
            "items": [
              "ConfirmationModal"
            ],
            "type": "default"
          },
          {
            "source": "../../modals/userManagementModal",
            "items": [
              "UserManagementModal"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "ConfirmationModal",
          "CustomLoader",
          "IconComponent",
          "Input",
          "ShadTooltip",
          "Table",
          "TableBody",
          "TableCell",
          "TableHead",
          "TableHeader",
          "TableRow",
          "UserManagementModal"
        ],
        "tailwind_classes_used": [
          "?",
          "admin-page-description-text",
          "admin-page-panel",
          "cursor-default",
          "cursor-pointer",
          "flex",
          "flex-col",
          "font-medium",
          "gap-4",
          "h-10",
          "h-full",
          "isPending",
          "items-center",
          "justify-between",
          "justify-center",
          "left-1",
          "m-4",
          "main-page-nav-arrangement",
          "main-page-nav-title",
          "pb-8",
          "px-4",
          "py-2",
          "relative",
          "text-align-last-left",
          "text-foreground",
          "text-right",
          "text-sm",
          "truncate",
          "w-6",
          "w-96",
          "w-[100px]",
          "w-full"
        ],
        "state_props_referenced": [
          "ADMIN_HEADER_DESCRIPTION",
          "ADMIN_HEADER_TITLE",
          "index",
          "inputValue",
          "user"
        ],
        "file_size_lines": 503,
        "jsx_size_chars": 5110
      }
    },
    {
      "id": "ni0002",
      "type": "interface",
      "name": "ApiKeysPage",
      "description": "Interface page: ApiKeysPage",
      "route": "api-keys",
      "path": "src/frontend/src/pages/SettingsPage/pages/ApiKeysPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "ApiKeysPage",
        "path": "src/frontend/src/pages/SettingsPage/pages/ApiKeysPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useContext",
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/constants/alerts_constants",
              "items": [
                "DEL_KEY_ERROR_ALERT",
                "DEL_KEY_ERROR_ALERT_PLURAL",
                "DEL_KEY_SUCCESS_ALERT",
                "DEL_KEY_SUCCESS_ALERT_PLURAL",
                ""
              ]
            },
            {
              "source": "@/controllers/API/queries/api-keys",
              "items": [
                "type IApiKeysDataArray",
                "useDeleteApiKey",
                "useGetApiKeysQuery",
                ""
              ]
            }
          ],
          "local": [
            {
              "source": "../../../../components/core/parameterRenderComponent/components/tableComponent",
              "items": [
                "TableComponent"
              ]
            },
            {
              "source": "../../../../contexts/authContext",
              "items": [
                "AuthContext"
              ]
            },
            {
              "source": "../../../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "./components/ApiKeyHeader",
              "items": [
                "ApiKeyHeaderComponent"
              ]
            },
            {
              "source": "./helpers/column-defs",
              "items": [
                "getColumnDefs"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "selectedRows": {
            "type": "string[]",
            "defaultValue": "[]"
          },
          "userId": {
            "type": "any",
            "defaultValue": "\"\""
          },
          "keysList": {
            "type": "IApiKeysDataArray[]",
            "defaultValue": "[]"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "userData"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useGetApiKeysQuery",
          "useDeleteApiKey",
          "useAlertStore"
        ],
        "eventHandlers": {
          "handleDeleteApi": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "ApiKeyHeaderComponent",
            "TableComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "ApiKeysPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/ApiKeysPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col justify-between gap-6"
              },
              "category": "html"
            },
            {
              "type": "ApiKeyHeaderComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col justify-between"
              },
              "category": "html"
            },
            {
              "type": "TableComponent",
              "attributes": {
                "onDelete": "handleDeleteApi"
              },
              "category": "component"
            }
          ],
          "components": [
            "ApiKeyHeaderComponent",
            "TableComponent"
          ],
          "ui_patterns": [
            {
              "type": "table",
              "description": "Data table display"
            },
            {
              "type": "list",
              "description": "Dynamic list rendering with map"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "IApiKeysDataArray",
            "ApiKeyHeaderComponent",
            "TableComponent"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "gap-6",
            "w-full",
            "flex-col",
            "flex",
            "h-full",
            "justify-between"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "table",
            "columns": [],
            "has_pagination": true
          }
        ],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "ApiKeysPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/ApiKeysPage/index.tsx",
        "component_type": "page",
        "summary": "ApiKeys page component",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col justify-between gap-6\">\n      <ApiKeyHeaderComponent\n        selectedRows={selectedRows}\n        fetchApiKeys={getApiKeysQuery}\n        userId={userId}\n      />\n\n      <div className=\"flex h-full w-full flex-col justify-between\">\n        <TableComponent\n          key={\"apiKeys\"}\n          onDelete={handleDeleteApi}\n          overlayNoRowsTemplate=\"No data available\"\n          onSelectionChanged={(event: SelectionChangedEvent) => {\n            setSelectedRows(event.api.getSelectedRows().map((row) => row.id));\n          }}\n          rowSelection=\"multiple\"\n          suppressRowClickSelection={true}\n          pagination={true}\n          columnDefs={columnDefs}\n          rowData={keysList}\n        />\n      </div>\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col justify-between gap-6\">\n      <ApiKeyHeaderComponent\n        selectedRows={selectedRows}\n        fetchApiKeys={getApiKeysQuery}\n        userId={userId}\n      />\n\n      <div className=\"flex h-full w-full flex-col justify-between\">\n        <TableComponent\n          key={\"apiKeys\"}\n          onDelete={handleDeleteApi}\n          overlayNoRowsTemplate=\"No data available\"\n          onSelectionChanged={handleClick}\n          rowSelection=\"multiple\"\n          suppressRowClickSelection={true}\n          pagination={true}\n          columnDefs={columnDefs}\n          rowData={keysList}\n        />\n      </div>\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useContext",
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/constants/alerts_constants",
            "items": [
              "DEL_KEY_ERROR_ALERT",
              "DEL_KEY_ERROR_ALERT_PLURAL",
              "DEL_KEY_SUCCESS_ALERT",
              "DEL_KEY_SUCCESS_ALERT_PLURAL",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/api-keys",
            "items": [
              "type IApiKeysDataArray",
              "useDeleteApiKey",
              "useGetApiKeysQuery",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../../../components/core/parameterRenderComponent/components/tableComponent",
            "items": [
              "TableComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../../../contexts/authContext",
            "items": [
              "AuthContext"
            ],
            "type": "named"
          },
          {
            "source": "../../../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "./components/ApiKeyHeader",
            "items": [
              "ApiKeyHeaderComponent"
            ],
            "type": "default"
          },
          {
            "source": "./helpers/column-defs",
            "items": [
              "getColumnDefs"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "ApiKeyHeaderComponent",
          "TableComponent"
        ],
        "tailwind_classes_used": [
          "flex",
          "flex-col",
          "gap-6",
          "h-full",
          "justify-between",
          "w-full"
        ],
        "state_props_referenced": [
          "columnDefs",
          "getApiKeysQuery",
          "handleDeleteApi",
          "keysList",
          "selectedRows",
          "true",
          "userId"
        ],
        "file_size_lines": 109,
        "jsx_size_chars": 773
      }
    },
    {
      "id": "ni0003",
      "type": "interface",
      "name": "AppAuthenticatedPage",
      "description": "Interface page: AppAuthenticatedPage",
      "route": "",
      "path": "src/frontend/src/pages/AppAuthenticatedPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "AppAuthenticatedPage",
        "path": "src/frontend/src/pages/AppAuthenticatedPage/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "Outlet"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-post-auth",
              "items": [
                "useCustomPostAuth"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "Outlet",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Outlet"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "AppAuthenticatedPage",
        "file_path": "src/frontend/src/pages/AppAuthenticatedPage/index.tsx",
        "jsx_structure": {
          "elements": [],
          "components": [],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "Outlet"
          ],
          "html": []
        },
        "styling": {
          "tailwind_classes": [],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "AppAuthenticatedPage",
        "file_path": "src/frontend/src/pages/AppAuthenticatedPage/index.tsx",
        "component_type": "page",
        "summary": "AppAuthenticated page component",
        "jsx_return_statement": "// JSX return statement not found",
        "jsx_simplified": "// JSX return statement not found",
        "imports": [
          {
            "source": "react-router-dom",
            "items": [
              "Outlet"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-post-auth",
            "items": [
              "useCustomPostAuth"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [],
        "tailwind_classes_used": [],
        "state_props_referenced": [],
        "file_size_lines": 8,
        "jsx_size_chars": 33
      }
    },
    {
      "id": "ni0004",
      "type": "interface",
      "name": "AppInitPage",
      "description": "Interface page: AppInitPage",
      "route": "",
      "path": "src/frontend/src/pages/AppInitPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "AppInitPage",
        "path": "src/frontend/src/pages/AppInitPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect"
              ]
            }
          ],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "Outlet"
              ]
            },
            {
              "source": "@/controllers/API/queries/auth",
              "items": [
                "useGetAutoLogin"
              ]
            },
            {
              "source": "@/controllers/API/queries/config/use-get-config",
              "items": [
                "useGetConfig"
              ]
            },
            {
              "source": "@/controllers/API/queries/flows/use-get-basic-examples",
              "items": [
                "useGetBasicExamplesQuery"
              ]
            },
            {
              "source": "@/controllers/API/queries/folders/use-get-folders",
              "items": [
                "useGetFoldersQuery"
              ]
            },
            {
              "source": "@/controllers/API/queries/store",
              "items": [
                "useGetTagsQuery"
              ]
            },
            {
              "source": "@/controllers/API/queries/variables",
              "items": [
                "useGetGlobalVariables"
              ]
            },
            {
              "source": "@/controllers/API/queries/version",
              "items": [
                "useGetVersionQuery"
              ]
            },
            {
              "source": "@/customization/components/custom-loading-page",
              "items": [
                "CustomLoadingPage"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-primary-loading",
              "items": [
                "useCustomPrimaryLoading"
              ]
            },
            {
              "source": "@/stores/darkStore",
              "items": [
                "useDarkStore"
              ]
            },
            {
              "source": "@/stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../LoadingPage",
              "items": [
                "LoadingPage"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "isFetched",
              "isConfigFetched"
            ],
            "description": "Effect with 2 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useGetAutoLogin",
          "useCustomPrimaryLoading",
          "useGetBasicExamplesQuery",
          "useFlowsManagerStore",
          "useGetConfig",
          "useDarkStore"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": null,
          "conditionalRendering": [
            {
              "condition": "isFetched && isExamplesFetched",
              "component": "Outlet"
            }
          ],
          "loops": [],
          "components": [
            "CustomLoadingPage",
            "Outlet",
            "LoadingPage"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "AppInitPage",
        "file_path": "src/frontend/src/pages/AppInitPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "LoadingPage",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "CustomLoadingPage",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Outlet",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "CustomLoadingPage",
            "Outlet",
            "LoadingPage"
          ],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "LoadingPage",
            "CustomLoadingPage",
            "Outlet"
          ],
          "html": []
        },
        "styling": {
          "tailwind_classes": [],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "AppInitPage",
        "file_path": "src/frontend/src/pages/AppInitPage/index.tsx",
        "component_type": "page",
        "summary": "need parent component with width and height",
        "jsx_return_statement": "//need parent component with width and height\n    <>\n      {isLoaded ? (\n        (isLoading || !isFetched || !isExamplesFetched) && (\n          <LoadingPage overlay />\n        )\n      ) : (\n        <CustomLoadingPage />\n      )}\n      {isFetched && isExamplesFetched && <Outlet />}\n    </>",
        "jsx_simplified": "//need parent component with width and height\n    <>\n      {/* complex expression */}\n      {isFetched && isExamplesFetched && <Outlet />}\n    </>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "Outlet"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/auth",
            "items": [
              "useGetAutoLogin"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/config/use-get-config",
            "items": [
              "useGetConfig"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/flows/use-get-basic-examples",
            "items": [
              "useGetBasicExamplesQuery"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/folders/use-get-folders",
            "items": [
              "useGetFoldersQuery"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/store",
            "items": [
              "useGetTagsQuery"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/variables",
            "items": [
              "useGetGlobalVariables"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/version",
            "items": [
              "useGetVersionQuery"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-loading-page",
            "items": [
              "CustomLoadingPage"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-primary-loading",
            "items": [
              "useCustomPrimaryLoading"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/darkStore",
            "items": [
              "useDarkStore"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "../LoadingPage",
            "items": [
              "LoadingPage"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "CustomLoadingPage",
          "LoadingPage",
          "Outlet"
        ],
        "tailwind_classes_used": [],
        "state_props_referenced": [],
        "file_size_lines": 59,
        "jsx_size_chars": 289
      }
    },
    {
      "id": "ni0005",
      "type": "interface",
      "name": "AppWrapperPage",
      "description": "Interface page: AppWrapperPage",
      "route": "",
      "path": "src/frontend/src/pages/AppWrapperPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "AppWrapperPage",
        "path": "src/frontend/src/pages/AppWrapperPage/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "react-error-boundary",
              "items": [
                "ErrorBoundary"
              ]
            },
            {
              "source": "react-router-dom",
              "items": [
                "Outlet"
              ]
            },
            {
              "source": "@/alerts/displayArea",
              "items": [
                "AlertDisplayArea"
              ]
            },
            {
              "source": "@/components/common/crashErrorComponent",
              "items": [
                "CrashErrorComponent"
              ]
            }
          ],
          "local": [
            {
              "source": "./components/GenericErrorComponent",
              "items": [
                "GenericErrorComponent"
              ]
            },
            {
              "source": "./hooks/use-health-check",
              "items": [
                "useHealthCheck"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useHealthCheck"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "GenericErrorComponent",
            "ErrorBoundary",
            "Outlet",
            "AlertDisplayArea"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "AppWrapperPage",
        "file_path": "src/frontend/src/pages/AppWrapperPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col"
              },
              "category": "html"
            },
            {
              "type": "ErrorBoundary",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "GenericErrorComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Outlet",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "app-div"
              },
              "category": "html"
            },
            {
              "type": "AlertDisplayArea",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "ErrorBoundary",
            "GenericErrorComponent",
            "AlertDisplayArea",
            "Outlet"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "ErrorBoundary",
            "GenericErrorComponent",
            "Outlet",
            "AlertDisplayArea"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "w-full",
            "flex-col",
            "flex",
            "h-full",
            "app-div"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "AppWrapperPage",
        "file_path": "src/frontend/src/pages/AppWrapperPage/index.tsx",
        "component_type": "page",
        "summary": "any reset function",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col\">\n      <ErrorBoundary\n        onReset={() => {\n          // any reset function\n        }}\n        FallbackComponent={CrashErrorComponent}\n      >\n        <>\n          <GenericErrorComponent\n            healthCheckTimeout={healthCheckTimeout}\n            fetching={fetchingHealth}\n            retry={refetch}\n          />\n          <Outlet />\n        </>\n      </ErrorBoundary>\n      <div className=\"app-div\">\n        <AlertDisplayArea />\n      </div>\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col\">\n      <ErrorBoundary\n        onReset={handleClick}\n        FallbackComponent={CrashErrorComponent}\n      >\n        <>\n          <GenericErrorComponent\n            healthCheckTimeout={healthCheckTimeout}\n            fetching={fetchingHealth}\n            retry={refetch}\n          />\n          <Outlet />\n        </>\n      </ErrorBoundary>\n      <div className=\"app-div\">\n        <AlertDisplayArea />\n      </div>\n    </div>",
        "imports": [
          {
            "source": "react-error-boundary",
            "items": [
              "ErrorBoundary"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "Outlet"
            ],
            "type": "named"
          },
          {
            "source": "@/alerts/displayArea",
            "items": [
              "AlertDisplayArea"
            ],
            "type": "default"
          },
          {
            "source": "@/components/common/crashErrorComponent",
            "items": [
              "CrashErrorComponent"
            ],
            "type": "default"
          },
          {
            "source": "./components/GenericErrorComponent",
            "items": [
              "GenericErrorComponent"
            ],
            "type": "named"
          },
          {
            "source": "./hooks/use-health-check",
            "items": [
              "useHealthCheck"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "AlertDisplayArea",
          "ErrorBoundary",
          "GenericErrorComponent",
          "Outlet"
        ],
        "tailwind_classes_used": [
          "app-div",
          "flex",
          "flex-col",
          "h-full",
          "w-full"
        ],
        "state_props_referenced": [
          "CrashErrorComponent",
          "fetchingHealth",
          "healthCheckTimeout",
          "refetch"
        ],
        "file_size_lines": 33,
        "jsx_size_chars": 506
      }
    },
    {
      "id": "ni0006",
      "type": "interface",
      "name": "CollectionPage",
      "description": "Interface page: CollectionPage",
      "route": "",
      "path": "src/frontend/src/pages/MainPage/pages/main-page.tsx",
      "uidl_definition_conceptual": {
        "name": "CollectionPage",
        "path": "src/frontend/src/pages/MainPage/pages/main-page.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@tanstack/react-query",
              "items": [
                "useQueryClient"
              ]
            },
            {
              "source": "react-router-dom",
              "items": [
                "Outlet"
              ]
            },
            {
              "source": "@/components/core/folderSidebarComponent/components/sideBarFolderButtons",
              "items": [
                "SideBarFoldersButtonsComponent"
              ]
            },
            {
              "source": "@/components/ui/sidebar",
              "items": [
                "SidebarProvider"
              ]
            },
            {
              "source": "@/controllers/API/queries/folders",
              "items": [
                "useDeleteFolders"
              ]
            },
            {
              "source": "@/customization/components/custom-empty-page",
              "items": [
                "CustomEmptyPageCommunity"
              ]
            },
            {
              "source": "@/customization/components/custom-loader",
              "items": [
                "CustomLoader"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-navigate",
              "items": [
                "useCustomNavigate"
              ]
            },
            {
              "source": "@/stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "@/stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "@/stores/foldersStore",
              "items": [
                "useFolderStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../components/modalsComponent",
              "items": [
                "ModalsComponent"
              ]
            },
            {
              "source": "./empty-page",
              "items": [
                "EmptyPageCommunity"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "openModal": {
            "type": "any",
            "defaultValue": "false"
          },
          "openDeleteFolderModal": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [],
            "description": "Effect with 0 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useFolderStore",
          "useAlertStore",
          "useDeleteFolders",
          "useCustomNavigate",
          "useFlowsManagerStore",
          "useQueryClient"
        ],
        "eventHandlers": {
          "handleDeleteFolder": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "SidebarProvider",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "CustomEmptyPageCommunity",
            "CustomLoader",
            "ModalsComponent",
            "Outlet",
            "SidebarProvider",
            "SideBarFoldersButtonsComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "CollectionPage",
        "file_path": "src/frontend/src/pages/MainPage/pages/main-page.tsx",
        "jsx_structure": {
          "elements": [],
          "components": [],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "SidebarProvider",
            "SideBarFoldersButtonsComponent",
            "Outlet",
            "CustomEmptyPageCommunity",
            "CustomLoader",
            "ModalsComponent"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "overflow-hidden`",
            "w-full",
            "flex-col",
            "flex",
            "justify-center",
            "h-full",
            "`relative",
            "overflow-hidden",
            "mx-auto",
            "items-center"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "CollectionPage",
        "file_path": "src/frontend/src/pages/MainPage/pages/main-page.tsx",
        "component_type": "page",
        "summary": "Collection page component",
        "jsx_return_statement": ") => queryClient.removeQueries({ queryKey: [\"useGetFolder\"] });\n  }, []);\n\n  const { mutate } = useDeleteFolders();\n\n  const handleDeleteFolder = () => {\n    mutate(\n      {\n        folder_id: folderToEdit?.id!,\n      },\n      {\n        onSuccess: () => {\n          setSuccessData({\n            title: \"Project deleted successfully.\",\n          });\n          navigate(\"/all\");\n        },\n        onError: (err) => {\n          console.error(err);\n          setErrorData({\n            title: \"Error deleting project.\",\n          });\n        },\n      },",
        "jsx_simplified": ") => queryClient.removeQueries({ queryKey: [\"useGetFolder\"] });\n  }, []);\n\n  const { mutate } = useDeleteFolders();\n\n  const handleDeleteFolder = () => {\n    mutate(\n      {\n        folder_id: folderToEdit?.id!,\n      },\n      {/* complex expression */});\n          navigate(\"/all\");\n        },\n        onError: (err) => {/* complex expression */});\n        },\n      },",
        "imports": [
          {
            "source": "@tanstack/react-query",
            "items": [
              "useQueryClient"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "Outlet"
            ],
            "type": "named"
          },
          {
            "source": "@/components/core/folderSidebarComponent/components/sideBarFolderButtons",
            "items": [
              "SideBarFoldersButtonsComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/sidebar",
            "items": [
              "SidebarProvider"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/folders",
            "items": [
              "useDeleteFolders"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-empty-page",
            "items": [
              "CustomEmptyPageCommunity"
            ],
            "type": "default"
          },
          {
            "source": "@/customization/components/custom-loader",
            "items": [
              "CustomLoader"
            ],
            "type": "default"
          },
          {
            "source": "@/customization/hooks/use-custom-navigate",
            "items": [
              "useCustomNavigate"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/foldersStore",
            "items": [
              "useFolderStore"
            ],
            "type": "named"
          },
          {
            "source": "../components/modalsComponent",
            "items": [
              "ModalsComponent"
            ],
            "type": "default"
          },
          {
            "source": "./empty-page",
            "items": [
              "EmptyPageCommunity"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [],
        "tailwind_classes_used": [],
        "state_props_referenced": [],
        "file_size_lines": 102,
        "jsx_size_chars": 550
      }
    },
    {
      "id": "ni0007",
      "type": "interface",
      "name": "DashboardWrapperPage",
      "description": "Interface page: DashboardWrapperPage",
      "route": "",
      "path": "src/frontend/src/pages/DashboardWrapperPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "DashboardWrapperPage",
        "path": "src/frontend/src/pages/DashboardWrapperPage/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "Outlet"
              ]
            },
            {
              "source": "@/components/core/appHeaderComponent",
              "items": [
                "AppHeader"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-theme",
              "items": [
                "useTheme"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "AppHeader",
            "Outlet"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "DashboardWrapperPage",
        "file_path": "src/frontend/src/pages/DashboardWrapperPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-screen w-full flex-col overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "AppHeader",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full flex-1 flex-row overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "Outlet",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "Outlet",
            "AppHeader"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "AppHeader",
            "Outlet"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "w-full",
            "flex-col",
            "flex",
            "overflow-hidden",
            "flex-1",
            "flex-row",
            "h-screen"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "DashboardWrapperPage",
        "file_path": "src/frontend/src/pages/DashboardWrapperPage/index.tsx",
        "component_type": "page",
        "summary": "DashboardWrapper page component",
        "jsx_return_statement": "<div className=\"flex h-screen w-full flex-col overflow-hidden\">\n      <AppHeader />\n      <div className=\"flex w-full flex-1 flex-row overflow-hidden\">\n        <Outlet />\n      </div>\n    </div>",
        "jsx_simplified": "<div className=\"flex h-screen w-full flex-col overflow-hidden\">\n      <AppHeader />\n      <div className=\"flex w-full flex-1 flex-row overflow-hidden\">\n        <Outlet />\n      </div>\n    </div>",
        "imports": [
          {
            "source": "react-router-dom",
            "items": [
              "Outlet"
            ],
            "type": "named"
          },
          {
            "source": "@/components/core/appHeaderComponent",
            "items": [
              "AppHeader"
            ],
            "type": "default"
          },
          {
            "source": "@/customization/hooks/use-custom-theme",
            "items": [
              "useTheme"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "AppHeader",
          "Outlet"
        ],
        "tailwind_classes_used": [
          "flex",
          "flex-1",
          "flex-col",
          "flex-row",
          "h-screen",
          "overflow-hidden",
          "w-full"
        ],
        "state_props_referenced": [],
        "file_size_lines": 16,
        "jsx_size_chars": 194
      }
    },
    {
      "id": "ni0008",
      "type": "interface",
      "name": "DeleteAccountPage",
      "description": "Interface page: DeleteAccountPage",
      "route": "delete",
      "path": "src/frontend/src/pages/DeleteAccountPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "DeleteAccountPage",
        "path": "src/frontend/src/pages/DeleteAccountPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/assets/LangbuilderLogo.svg?react",
              "items": [
                "LangbuilderLogo"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/input",
              "items": [
                "Input"
              ]
            },
            {
              "source": "../../modals/baseModal",
              "items": [
                "BaseModal"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "showConfirmation": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {
          "handleDeleteAccount": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "BaseModal",
            "Input",
            "LangbuilderLogo"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "DeleteAccountPage",
        "file_path": "src/frontend/src/pages/DeleteAccountPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col items-center justify-center bg-muted"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-72 flex-col items-center justify-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "LangbuilderLogo",
              "attributes": {
                "className": "mb-4 h-10 w-10 scale-[1.5]"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "mb-4 text-center text-2xl font-semibold text-primary"
              },
              "category": "html"
            },
            {
              "type": "Input",
              "attributes": {
                "className": "bg-background",
                "placeholder": "Confirm password"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "h",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "w-full hover:bg-status-red"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col justify-end"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "w-full hover:bg-status-red"
              },
              "category": "component"
            }
          ],
          "components": [
            "BaseModal",
            "Input",
            "LangbuilderLogo",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Input"
          ],
          "custom": [
            "LangbuilderLogo",
            "BaseModal"
          ],
          "html": [
            "div",
            "span",
            "h3"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "text-2xl",
            "bg-background",
            "w-full",
            "flex-col",
            "h-10",
            "gap-2",
            "justify-center",
            "text-center",
            "items-center",
            "scale-[1.5]",
            "hover:bg-status-red",
            "bg-muted",
            "text-primary",
            "flex",
            "h-full",
            "mb-4",
            "w-72",
            "justify-end",
            "w-10",
            "font-semibold"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "w-full hover:bg-status-red"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "w-full hover:bg-status-red"
              },
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "className": "bg-background",
                "placeholder": "Confirm password"
              },
              "type": "text"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "DeleteAccountPage",
        "file_path": "src/frontend/src/pages/DeleteAccountPage/index.tsx",
        "component_type": "page",
        "summary": "Implement your account deletion logic here",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col items-center justify-center bg-muted\">\n      <div className=\"flex w-72 flex-col items-center justify-center gap-2\">\n        <LangbuilderLogo\n          title=\"Langbuilder logo\"\n          className=\"mb-4 h-10 w-10 scale-[1.5]\"\n        />\n        <span className=\"mb-4 text-center text-2xl font-semibold text-primary\">\n          Delete your account\n        </span>\n        <Input className=\"bg-background\" placeholder=\"Confirm password\" />\n\n        <BaseModal\n          open={showConfirmation}\n          setOpen={setShowConfirmation}\n          size=\"x-small\"\n        >\n          <BaseModal.Header description=\"This action is irreversible and will permanently erase all your data and information associated with the account. \">\n            <h3>Are you sure ?</h3>\n          </BaseModal.Header>\n          <BaseModal.Trigger>\n            <Button\n              variant=\"default\"\n              className=\"w-full hover:bg-status-red\"\n              onClick={() => setShowConfirmation(true)}\n            >\n              Delete account\n            </Button>\n          </BaseModal.Trigger>\n          <BaseModal.Content>\n            <div className=\"flex h-full w-full flex-col justify-end\">\n              <Button\n                variant=\"default\"\n                className=\"w-full hover:bg-status-red\"\n                onClick={() => handleDeleteAccount()}\n              >\n                Delete account\n              </Button>\n            </div>\n          </BaseModal.Content>\n        </BaseModal>\n      </div>\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col items-center justify-center bg-muted\">\n      <div className=\"flex w-72 flex-col items-center justify-center gap-2\">\n        <LangbuilderLogo\n          title=\"Langbuilder logo\"\n          className=\"mb-4 h-10 w-10 scale-[1.5]\"\n        />\n        <span className=\"mb-4 text-center text-2xl font-semibold text-primary\">\n          Delete your account\n        </span>\n        <Input className=\"bg-background\" placeholder=\"Confirm password\" />\n\n        <BaseModal\n          open={showConfirmation}\n          setOpen={setShowConfirmation}\n          size=\"x-small\"\n        >\n          <BaseModal.Header description=\"This action is irreversible and will permanently erase all your data and information associated with the account. \">\n            <h3>Are you sure ?</h3>\n          </BaseModal.Header>\n          <BaseModal.Trigger>\n            <Button\n              variant=\"default\"\n              className=\"w-full hover:bg-status-red\"\n              onClick={() => setShowConfirmation(true)}\n            >\n              Delete account\n            </Button>\n          </BaseModal.Trigger>\n          <BaseModal.Content>\n            <div className=\"flex h-full w-full flex-col justify-end\">\n              <Button\n                variant=\"default\"\n                className=\"w-full hover:bg-status-red\"\n                onClick={() => handleDeleteAccount()}\n              >\n                Delete account\n              </Button>\n            </div>\n          </BaseModal.Content>\n        </BaseModal>\n      </div>\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/assets/LangbuilderLogo.svg?react",
            "items": [
              "LangbuilderLogo"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/input",
            "items": [
              "Input"
            ],
            "type": "named"
          },
          {
            "source": "../../modals/baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "Button",
          "Input",
          "LangbuilderLogo"
        ],
        "tailwind_classes_used": [
          "bg-background",
          "bg-muted",
          "flex",
          "flex-col",
          "font-semibold",
          "gap-2",
          "h-10",
          "h-full",
          "hover:bg-status-red",
          "items-center",
          "justify-center",
          "justify-end",
          "mb-4",
          "scale-[1.5]",
          "text-2xl",
          "text-center",
          "text-primary",
          "w-10",
          "w-72",
          "w-full"
        ],
        "state_props_referenced": [
          "setShowConfirmation",
          "showConfirmation"
        ],
        "file_size_lines": 62,
        "jsx_size_chars": 1551
      }
    },
    {
      "id": "ni0009",
      "type": "interface",
      "name": "FlowPage",
      "description": "Interface page: FlowPage",
      "route": "folder/:folderId/",
      "path": "src/frontend/src/pages/FlowPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "FlowPage",
        "path": "src/frontend/src/pages/FlowPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "useBlocker",
                "useParams"
              ]
            },
            {
              "source": "@/components/ui/sidebar",
              "items": [
                "SidebarProvider"
              ]
            },
            {
              "source": "@/controllers/API/queries/flows/use-get-flow",
              "items": [
                "useGetFlow"
              ]
            },
            {
              "source": "@/controllers/API/queries/flows/use-get-types",
              "items": [
                "useGetTypes"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-navigate",
              "items": [
                "useCustomNavigate"
              ]
            },
            {
              "source": "@/hooks/flows/use-save-flow",
              "items": [
                "useSaveFlow"
              ]
            },
            {
              "source": "@/hooks/use-mobile",
              "items": [
                "useIsMobile"
              ]
            },
            {
              "source": "@/modals/saveChangesModal",
              "items": [
                "SaveChangesModal"
              ]
            },
            {
              "source": "@/stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "@/stores/typesStore",
              "items": [
                "useTypesStore"
              ]
            },
            {
              "source": "@/utils/reactflowUtils",
              "items": [
                "customStringify"
              ]
            }
          ],
          "local": [
            {
              "source": "../../stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "../../stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "./components/flowSidebarComponent",
              "items": [
                "FlowSidebarComponent"
              ]
            },
            {
              "source": "./components/PageComponent",
              "items": [
                "Page"
              ]
            }
          ]
        },
        "propDefinitions": {
          "view": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "isLoading": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "id"
            ],
            "description": "Effect with 1 dependencies"
          },
          {
            "dependencies": [
              "blocker.state",
              "isBuilding"
            ],
            "description": "Effect with 2 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useIsMobile",
          "useAlertStore",
          "useGetFlow",
          "useSaveFlow",
          "useFlowStore",
          "useCustomNavigate",
          "useParams",
          "useFlowsManagerStore",
          "useBlocker",
          "useTypesStore"
        ],
        "eventHandlers": {
          "handleSave": {
            "type": "arrow_function",
            "async": false
          },
          "handleExit": {
            "type": "arrow_function",
            "async": false
          },
          "handleBeforeUnload": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": null,
          "conditionalRendering": [
            {
              "condition": "!view",
              "component": "FlowSidebarComponent"
            }
          ],
          "loops": [],
          "components": [
            "SidebarProvider",
            "Page",
            "SaveChangesModal",
            "FlowSidebarComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "FlowPage",
        "file_path": "src/frontend/src/pages/FlowPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flow-page-positioning"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "SidebarProvider",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "FlowSidebarComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "main",
              "attributes": {
                "className": "flex w-full overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "h-full w-full"
              },
              "category": "html"
            },
            {
              "type": "Page",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SaveChangesModal",
              "attributes": {
                "onSave": "handleSave"
              },
              "category": "component"
            }
          ],
          "components": [
            "SaveChangesModal",
            "FlowSidebarComponent",
            "Page",
            "SidebarProvider"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "SidebarProvider",
            "FlowSidebarComponent",
            "Page",
            "SaveChangesModal"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "w-full",
            "flow-page-positioning",
            "flex",
            "h-full",
            "overflow-hidden"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "FlowPage",
        "file_path": "src/frontend/src/pages/FlowPage/index.tsx",
        "component_type": "page",
        "summary": "Do nothing, let the blocker handle it",
        "jsx_return_statement": ") => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [changesNotSaved, isBuilding]);\n\n  // Set flow tab id\n  useEffect(() => {\n    const awaitgetTypes = async () => {\n      if (flows && currentFlowId === \"\" && Object.keys(types).length > 0) {\n        const isAnExistingFlow = flows.find((flow) => flow.id === id);\n\n        if (!isAnExistingFlow) {\n          navigate(\"/all\");\n          return;\n        }\n\n        const isAnExistingFlowId = isAnExistingFlow.id;\n\n        await getFlowToAddToCanvas(isAnExistingFlowId);\n      }\n    };\n    awaitgetTypes();\n  }, [id, flows, currentFlowId, types]);\n\n  useEffect(() => {\n    setOnFlowPage(true);\n\n    return () => {\n      setOnFlowPage(false);\n      console.warn(\"unmounting\");\n\n      setCurrentFlow(undefined);\n    };\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      blocker.state === \"blocked\" &&\n      autoSaving &&\n      changesNotSaved &&\n      !isBuilding\n    ) {\n      handleSave();\n    }\n  }, [blocker.state, isBuilding]);\n\n  useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      if (isBuilding) {\n        stopBuilding();\n      } else if (!changesNotSaved) {\n        blocker.proceed && blocker.proceed();\n      }\n    }\n  }, [blocker.state, isBuilding]);\n\n  const getFlowToAddToCanvas = async (id: string) => {\n    const flow = await getFlow({ id: id });\n    setCurrentFlow(flow);\n  };\n\n  const isMobile = useIsMobile();\n\n  return (\n    <>\n      <div className=\"flow-page-positioning\">\n        {currentFlow && (\n          <div className=\"flex h-full overflow-hidden\">\n            <SidebarProvider width=\"17.5rem\" defaultOpen={!isMobile}>\n              {!view && <FlowSidebarComponent isLoading={isLoading} />}\n              <main className=\"flex w-full overflow-hidden\">\n                <div className=\"h-full w-full\">\n                  <Page setIsLoading={setIsLoading} />\n                </div>\n              </main>\n            </SidebarProvider>\n          </div>\n        )}\n      </div>\n      {blocker.state === \"blocked\" && (\n        <>\n          {!isBuilding && currentSavedFlow && (\n            <SaveChangesModal\n              onSave={handleSave}\n              onCancel={() => blocker.reset?.()}\n              onProceed={handleExit}\n              flowName={currentSavedFlow.name}\n              lastSaved={\n                updatedAt\n                  ? new Date(updatedAt).toLocaleString(\"en-US\", {\n                      hour: \"numeric\",\n                      minute: \"numeric\",\n                      second: \"numeric\",\n                      month: \"numeric\",\n                      day: \"numeric\",\n                    })\n                  : undefined\n              }\n              autoSave={autoSaving}\n            />\n          )}\n        </>\n      )}\n    </>",
        "jsx_simplified": ") => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [changesNotSaved, isBuilding]);\n\n  // Set flow tab id\n  useEffect(() => {/* complex expression */}\n\n        const isAnExistingFlowId = isAnExistingFlow.id;\n\n        await getFlowToAddToCanvas(isAnExistingFlowId);\n      }\n    };\n    awaitgetTypes();\n  }, [id, flows, currentFlowId, types]);\n\n  useEffect(() => {/* complex expression */};\n  }, [id]);\n\n  useEffect(() => {/* complex expression */}\n  }, [blocker.state, isBuilding]);\n\n  useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      if (isBuilding) {\n        stopBuilding();\n      } else if (!changesNotSaved) {\n        blocker.proceed && blocker.proceed();\n      }\n    }\n  }, [blocker.state, isBuilding]);\n\n  const getFlowToAddToCanvas = async (id: string) => {\n    const flow = await getFlow({ id: id });\n    setCurrentFlow(flow);\n  };\n\n  const isMobile = useIsMobile();\n\n  return (\n    <>\n      <div className=\"flow-page-positioning\">\n        {/* complex expression */}>\n              {!view && <FlowSidebarComponent isLoading={isLoading} />}\n              <main className=\"flex w-full overflow-hidden\">\n                <div className=\"h-full w-full\">\n                  <Page setIsLoading={setIsLoading} />\n                </div>\n              </main>\n            </SidebarProvider>\n          </div>\n        )}\n      </div>\n      {/* complex expression */}\n              onCancel={() => blocker.reset?.()}\n              onProceed={handleExit}\n              flowName={currentSavedFlow.name}\n              lastSaved={/* complex expression */})\n                  : undefined\n              }\n              autoSave={autoSaving}\n            />\n          )}\n        </>\n      )}\n    </>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "useBlocker",
              "useParams"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/sidebar",
            "items": [
              "SidebarProvider"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/flows/use-get-flow",
            "items": [
              "useGetFlow"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/flows/use-get-types",
            "items": [
              "useGetTypes"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-navigate",
            "items": [
              "useCustomNavigate"
            ],
            "type": "named"
          },
          {
            "source": "@/hooks/flows/use-save-flow",
            "items": [
              "useSaveFlow"
            ],
            "type": "default"
          },
          {
            "source": "@/hooks/use-mobile",
            "items": [
              "useIsMobile"
            ],
            "type": "named"
          },
          {
            "source": "@/modals/saveChangesModal",
            "items": [
              "SaveChangesModal"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/typesStore",
            "items": [
              "useTypesStore"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/reactflowUtils",
            "items": [
              "customStringify"
            ],
            "type": "named"
          },
          {
            "source": "../../stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "./components/flowSidebarComponent",
            "items": [
              "FlowSidebarComponent"
            ],
            "type": "named"
          },
          {
            "source": "./components/PageComponent",
            "items": [
              "Page"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "FlowSidebarComponent",
          "Page",
          "SaveChangesModal",
          "SidebarProvider"
        ],
        "tailwind_classes_used": [
          "flex",
          "flow-page-positioning",
          "h-full",
          "overflow-hidden",
          "w-full"
        ],
        "state_props_referenced": [
          "autoSaving",
          "handleExit",
          "handleSave",
          "isLoading",
          "setIsLoading"
        ],
        "file_size_lines": 200,
        "jsx_size_chars": 2761
      }
    },
    {
      "id": "ni0010",
      "type": "interface",
      "name": "GeneralPage",
      "description": "Interface page: GeneralPage",
      "route": "",
      "path": "src/frontend/src/pages/SettingsPage/pages/GeneralPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "GeneralPage",
        "path": "src/frontend/src/pages/SettingsPage/pages/GeneralPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useContext",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "lodash",
              "items": [
                "cloneDeep"
              ]
            },
            {
              "source": "react-router-dom",
              "items": [
                "useParams"
              ]
            },
            {
              "source": "@/constants/alerts_constants",
              "items": [
                "EDIT_PASSWORD_ALERT_LIST",
                "EDIT_PASSWORD_ERROR_ALERT",
                "SAVE_ERROR_ALERT",
                "SAVE_SUCCESS_ALERT",
                ""
              ]
            },
            {
              "source": "@/controllers/API/queries/api-keys",
              "items": [
                "usePostAddApiKey"
              ]
            },
            {
              "source": "@/controllers/API/queries/auth",
              "items": [
                "useResetPassword",
                "useUpdateUser",
                ""
              ]
            },
            {
              "source": "@/controllers/API/queries/files",
              "items": [
                "useGetProfilePicturesQuery"
              ]
            },
            {
              "source": "@/customization/components/custom-terms-links",
              "items": [
                "CustomTermsLinks"
              ]
            },
            {
              "source": "@/customization/feature-flags",
              "items": [
                "ENABLE_PROFILE_ICONS"
              ]
            },
            {
              "source": "@/stores/authStore",
              "items": [
                "useAuthStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../../../../constants/constants",
              "items": [
                "CONTROL_PATCH_USER_STATE"
              ]
            },
            {
              "source": "../../../../contexts/authContext",
              "items": [
                "AuthContext"
              ]
            },
            {
              "source": "../../../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "../../../../stores/storeStore",
              "items": [
                "useStoreStore"
              ]
            },
            {
              "source": "../hooks/use-scroll-to-element",
              "items": [
                "useScrollToElement"
              ]
            },
            {
              "source": "./components/GeneralPageHeader",
              "items": [
                "GeneralPageHeaderComponent"
              ]
            },
            {
              "source": "./components/PasswordForm",
              "items": [
                "PasswordFormComponent"
              ]
            },
            {
              "source": "./components/ProfilePictureForm",
              "items": [
                "ProfilePictureFormComponent"
              ]
            }
          ]
        },
        "propDefinitions": {
          "target": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "inputState": {
            "type": "patchUserInputStateType",
            "defaultValue": "CONTROL_PATCH_USER_STATE,"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useAlertStore",
          "useStoreStore",
          "useParams",
          "useUpdateUser",
          "usePostAddApiKey",
          "useGetProfilePicturesQuery",
          "useResetPassword",
          "useAuthStore"
        ],
        "eventHandlers": {
          "handlePatchPassword": {
            "type": "arrow_function",
            "async": false
          },
          "handlePatchProfilePicture": {
            "type": "arrow_function",
            "async": false
          },
          "handleInput": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "GeneralPageHeaderComponent",
            "CustomTermsLinks",
            "ProfilePictureFormComponent",
            "PasswordFormComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "GeneralPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/GeneralPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col gap-6 overflow-x-hidden"
              },
              "category": "html"
            },
            {
              "type": "GeneralPageHeaderComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full flex-col gap-6"
              },
              "category": "html"
            },
            {
              "type": "ProfilePictureFormComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "PasswordFormComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "CustomTermsLinks",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "ProfilePictureFormComponent",
            "PasswordFormComponent",
            "GeneralPageHeaderComponent",
            "CustomTermsLinks"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "GeneralPageHeaderComponent",
            "ProfilePictureFormComponent",
            "PasswordFormComponent",
            "CustomTermsLinks"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "gap-6",
            "w-full",
            "flex-col",
            "flex",
            "h-full",
            "overflow-x-hidden"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "GeneralPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/GeneralPage/index.tsx",
        "component_type": "page",
        "summary": "General page component",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col gap-6 overflow-x-hidden\">\n      <GeneralPageHeaderComponent />\n\n      <div className=\"flex w-full flex-col gap-6\">\n        {ENABLE_PROFILE_ICONS && (\n          <ProfilePictureFormComponent\n            profilePicture={profilePicture}\n            handleInput={handleInput}\n            handlePatchProfilePicture={handlePatchProfilePicture}\n            handleGetProfilePictures={handleGetProfilePictures}\n            userData={userData}\n          />\n        )}\n\n        {!autoLogin && (\n          <PasswordFormComponent\n            password={password}\n            cnfPassword={cnfPassword}\n            handleInput={handleInput}\n            handlePatchPassword={handlePatchPassword}\n          />\n        )}\n      </div>\n\n      <CustomTermsLinks />\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col gap-6 overflow-x-hidden\">\n      <GeneralPageHeaderComponent />\n\n      <div className=\"flex w-full flex-col gap-6\">\n        {/* complex expression */}\n            handleInput={handleInput}\n            handlePatchProfilePicture={handlePatchProfilePicture}\n            handleGetProfilePictures={handleGetProfilePictures}\n            userData={userData}\n          />\n        )}\n\n        {!autoLogin && (\n          <PasswordFormComponent\n            password={password}\n            cnfPassword={cnfPassword}\n            handleInput={handleInput}\n            handlePatchPassword={handlePatchPassword}\n          />\n        )}\n      </div>\n\n      <CustomTermsLinks />\n    </div>",
        "imports": [
          {
            "source": "lodash",
            "items": [
              "cloneDeep"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useContext",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "useParams"
            ],
            "type": "named"
          },
          {
            "source": "@/constants/alerts_constants",
            "items": [
              "EDIT_PASSWORD_ALERT_LIST",
              "EDIT_PASSWORD_ERROR_ALERT",
              "SAVE_ERROR_ALERT",
              "SAVE_SUCCESS_ALERT",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/api-keys",
            "items": [
              "usePostAddApiKey"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/auth",
            "items": [
              "useResetPassword",
              "useUpdateUser",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/files",
            "items": [
              "useGetProfilePicturesQuery"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-terms-links",
            "items": [
              "CustomTermsLinks"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/feature-flags",
            "items": [
              "ENABLE_PROFILE_ICONS"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/authStore",
            "items": [
              "useAuthStore"
            ],
            "type": "default"
          },
          {
            "source": "../../../../constants/constants",
            "items": [
              "CONTROL_PATCH_USER_STATE"
            ],
            "type": "named"
          },
          {
            "source": "../../../../contexts/authContext",
            "items": [
              "AuthContext"
            ],
            "type": "named"
          },
          {
            "source": "../../../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../../../stores/storeStore",
            "items": [
              "useStoreStore"
            ],
            "type": "named"
          },
          {
            "source": "../hooks/use-scroll-to-element",
            "items": [
              "useScrollToElement"
            ],
            "type": "default"
          },
          {
            "source": "./components/GeneralPageHeader",
            "items": [
              "GeneralPageHeaderComponent"
            ],
            "type": "default"
          },
          {
            "source": "./components/PasswordForm",
            "items": [
              "PasswordFormComponent"
            ],
            "type": "default"
          },
          {
            "source": "./components/ProfilePictureForm",
            "items": [
              "ProfilePictureFormComponent"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "CustomTermsLinks",
          "GeneralPageHeaderComponent",
          "PasswordFormComponent",
          "ProfilePictureFormComponent"
        ],
        "tailwind_classes_used": [
          "flex",
          "flex-col",
          "gap-6",
          "h-full",
          "overflow-x-hidden",
          "w-full"
        ],
        "state_props_referenced": [
          "cnfPassword",
          "handleGetProfilePictures",
          "handleInput",
          "handlePatchPassword",
          "handlePatchProfilePicture",
          "password",
          "profilePicture",
          "userData"
        ],
        "file_size_lines": 170,
        "jsx_size_chars": 797
      }
    },
    {
      "id": "ni0011",
      "type": "interface",
      "name": "GlobalVariablesPage",
      "description": "Interface page: GlobalVariablesPage",
      "route": "global-variables",
      "path": "src/frontend/src/pages/SettingsPage/pages/GlobalVariablesPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "GlobalVariablesPage",
        "path": "src/frontend/src/pages/SettingsPage/pages/GlobalVariablesPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/components/core/dropdownComponent",
              "items": [
                "Dropdown"
              ]
            },
            {
              "source": "@/components/core/GlobalVariableModal/GlobalVariableModal",
              "items": [
                "GlobalVariableModal"
              ]
            },
            {
              "source": "@/components/core/parameterRenderComponent/components/tableComponent",
              "items": [
                "TableComponent"
              ]
            },
            {
              "source": "@/controllers/API/queries/variables",
              "items": [
                "useDeleteGlobalVariables",
                "useGetGlobalVariables",
                ""
              ]
            }
          ],
          "local": [
            {
              "source": "../../../../components/ui/badge",
              "items": [
                "Badge"
              ]
            },
            {
              "source": "../../../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            }
          ]
        },
        "propDefinitions": {
          "options": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          },
          "onValueChange": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "openModal": {
            "type": "any",
            "defaultValue": "false"
          },
          "selectedRows": {
            "type": "string[]",
            "defaultValue": "[]"
          }
        },
        "refs": {
          "initialData": {
            "type": "GlobalVariable | undefined",
            "initialValue": "undefined"
          }
        },
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useGetGlobalVariables",
          "useDeleteGlobalVariables",
          "useAlertStore"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "Dropdown",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "GlobalVariable",
            "IconComponent",
            "Badge",
            "ForwardedIconComponent",
            "GlobalVariableModal",
            "Dropdown",
            "TableComponent",
            "Button"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "GlobalVariablesPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/GlobalVariablesPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "Dropdown",
              "attributes": {
                "onSelect": "onValueChange",
                "value": "value"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "-mt-1.5 w-full"
              },
              "category": "html"
            }
          ],
          "components": [
            "Dropdown"
          ],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Badge"
          ],
          "custom": [
            "GlobalVariable",
            "Dropdown",
            "ForwardedIconComponent",
            "GlobalVariableModal",
            "IconComponent",
            "TableComponent"
          ],
          "html": [
            "div",
            "p",
            "h2"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "text-muted-foreground",
            "-mt-1.5",
            "flex-shrink-0",
            "w-full",
            "flex-col",
            "gap-2",
            "ml-2",
            "w-5",
            "justify-between",
            "items-center",
            "w-4",
            "font-normal",
            "items-start",
            "text-lg",
            "tracking-tight",
            "gap-6",
            "text-primary",
            "flex",
            "text-sm",
            "h-full",
            "h-5",
            "font-semibold"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "table",
            "columns": [],
            "has_pagination": true
          },
          {
            "type": "dynamic_list",
            "arrays": [
              "selectedRows"
            ],
            "description": "Dynamic rendering of 1 lists"
          }
        ],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "GlobalVariablesPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/GlobalVariablesPage/index.tsx",
        "component_type": "page",
        "summary": "Column Definitions: Defines the columns to be displayed.",
        "jsx_return_statement": "<Dropdown options={options} value={value} onSelect={onValueChange}>\n        <div className=\"-mt-1.5 w-full\"></div>\n      </Dropdown>",
        "jsx_simplified": "<Dropdown options={options} value={value} onSelect={onValueChange}>\n        <div className=\"-mt-1.5 w-full\"></div>\n      </Dropdown>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/components/core/dropdownComponent",
            "items": [
              "Dropdown"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/GlobalVariableModal/GlobalVariableModal",
            "items": [
              "GlobalVariableModal"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/parameterRenderComponent/components/tableComponent",
            "items": [
              "TableComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/controllers/API/queries/variables",
            "items": [
              "useDeleteGlobalVariables",
              "useGetGlobalVariables",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../../../components/ui/badge",
            "items": [
              "Badge"
            ],
            "type": "named"
          },
          {
            "source": "../../../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Dropdown"
        ],
        "tailwind_classes_used": [
          "-mt-1.5",
          "w-full"
        ],
        "state_props_referenced": [
          "options",
          "value"
        ],
        "file_size_lines": 155,
        "jsx_size_chars": 132
      }
    },
    {
      "id": "ni0012",
      "type": "interface",
      "name": "LoginPage",
      "description": "Interface page: LoginPage",
      "route": "",
      "path": "src/frontend/src/pages/LoginPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "LoginPage",
        "path": "src/frontend/src/pages/LoginPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useContext",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/assets/LangbuilderLogo.svg?react",
              "items": [
                "LangbuilderLogo"
              ]
            },
            {
              "source": "@/controllers/API/queries/auth",
              "items": [
                "useLoginUser"
              ]
            },
            {
              "source": "@/customization/components/custom-link",
              "items": [
                "CustomLink"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/core/parameterRenderComponent/components/inputComponent",
              "items": [
                "InputComponent"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/input",
              "items": [
                "Input"
              ]
            },
            {
              "source": "../../constants/alerts_constants",
              "items": [
                "SIGNIN_ERROR_ALERT"
              ]
            },
            {
              "source": "../../constants/constants",
              "items": [
                "CONTROL_LOGIN_STATE"
              ]
            },
            {
              "source": "../../contexts/authContext",
              "items": [
                "AuthContext"
              ]
            },
            {
              "source": "../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            }
          ]
        },
        "propDefinitions": {
          "target": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "inputState": {
            "type": "loginInputStateType",
            "defaultValue": "CONTROL_LOGIN_STATE"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useAlertStore",
          "useLoginUser"
        ],
        "eventHandlers": {
          "handleInput": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "Form.Root",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "CustomLink",
            "InputComponent",
            "Input",
            "Button",
            "LangbuilderLogo"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "LoginPage",
        "file_path": "src/frontend/src/pages/LoginPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col items-center justify-center bg-muted"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-72 flex-col items-center justify-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "LangbuilderLogo",
              "attributes": {
                "className": "mb-4 h-10 w-10 scale-[1.5]"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "mb-6 text-2xl font-semibold text-primary"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "mb-3 w-full"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "font-medium text-destructive"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Input",
              "attributes": {
                "onChange": "({ target: { value",
                "type": "username"
              },
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "mb-3 w-full"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "font-medium text-destructive"
              },
              "category": "html"
            },
            {
              "type": "InputComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "w-full"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "mr-3 mt-6 w-full",
                "type": "submit"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "w-full"
              },
              "category": "html"
            },
            {
              "type": "CustomLink",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "w-full",
                "type": "button"
              },
              "category": "component"
            },
            {
              "type": "b",
              "attributes": {},
              "category": "html"
            }
          ],
          "components": [
            "Form",
            "Input",
            "InputComponent",
            "CustomLink",
            "LangbuilderLogo",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "form",
              "description": "Form with inputs and submit handling"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Input"
          ],
          "custom": [
            "Form",
            "LangbuilderLogo",
            "InputComponent",
            "CustomLink"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "field-invalid",
            "text-2xl",
            "data-[invalid]:label-invalid",
            "h-screen",
            "mb-6",
            "w-full",
            "flex-col",
            "h-10",
            "gap-2",
            "justify-center",
            "items-center",
            "scale-[1.5]",
            "mt-6",
            "bg-muted",
            "text-primary",
            "flex",
            "font-medium",
            "h-full",
            "mb-4",
            "text-destructive",
            "mr-3",
            "w-72",
            "w-10",
            "font-semibold",
            "mb-3"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "mr-3 mt-6 w-full",
                "type": "submit"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "w-full",
                "type": "button"
              },
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "onChange": "({ target: { value",
                "type": "username"
              },
              "type": "username"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "LoginPage",
        "file_path": "src/frontend/src/pages/LoginPage/index.tsx",
        "component_type": "page",
        "summary": "Login page component",
        "jsx_return_statement": "<Form.Root\n      onSubmit={(event) => {\n        if (password === \"\") {\n          event.preventDefault();\n          return;\n        }\n        signIn();\n        const _data = Object.fromEntries(new FormData(event.currentTarget));\n        event.preventDefault();\n      }}\n      className=\"h-screen w-full\"\n    >\n      <div className=\"flex h-full w-full flex-col items-center justify-center bg-muted\">\n        <div className=\"flex w-72 flex-col items-center justify-center gap-2\">\n          <LangbuilderLogo\n            title=\"Langbuilder logo\"\n            className=\"mb-4 h-10 w-10 scale-[1.5]\"\n          />\n          <span className=\"mb-6 text-2xl font-semibold text-primary\">\n            Sign in to Langbuilder\n          </span>\n          <div className=\"mb-3 w-full\">\n            <Form.Field name=\"username\">\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Username <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n\n              <Form.Control asChild>\n                <Input\n                  type=\"username\"\n                  onChange={({ target: { value } }) => {\n                    handleInput({ target: { name: \"username\", value } });\n                  }}\n                  value={username}\n                  className=\"w-full\"\n                  required\n                  placeholder=\"Username\"\n                />\n              </Form.Control>\n\n              <Form.Message match=\"valueMissing\" className=\"field-invalid\">\n                Please enter your username\n              </Form.Message>\n            </Form.Field>\n          </div>\n          <div className=\"mb-3 w-full\">\n            <Form.Field name=\"password\">\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Password <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n\n              <InputComponent\n                onChange={(value) => {\n                  handleInput({ target: { name: \"password\", value } });\n                }}\n                value={password}\n                isForm\n                password={true}\n                required\n                placeholder=\"Password\"\n                className=\"w-full\"\n              />\n\n              <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                Please enter your password\n              </Form.Message>\n            </Form.Field>\n          </div>\n          <div className=\"w-full\">\n            <Form.Submit asChild>\n              <Button className=\"mr-3 mt-6 w-full\" type=\"submit\">\n                Sign in\n              </Button>\n            </Form.Submit>\n          </div>\n          <div className=\"w-full\">\n            <CustomLink to=\"/signup\">\n              <Button className=\"w-full\" variant=\"outline\" type=\"button\">\n                Don't have an account?&nbsp;<b>Sign Up</b>\n              </Button>\n            </CustomLink>\n          </div>\n        </div>\n      </div>\n    </Form.Root>",
        "jsx_simplified": "<Form.Root\n      onSubmit={/* complex expression */}\n        signIn();\n        const _data = Object.fromEntries(new FormData(event.currentTarget));\n        event.preventDefault();\n      }}\n      className=\"h-screen w-full\"\n    >\n      <div className=\"flex h-full w-full flex-col items-center justify-center bg-muted\">\n        <div className=\"flex w-72 flex-col items-center justify-center gap-2\">\n          <LangbuilderLogo\n            title=\"Langbuilder logo\"\n            className=\"mb-4 h-10 w-10 scale-[1.5]\"\n          />\n          <span className=\"mb-6 text-2xl font-semibold text-primary\">\n            Sign in to Langbuilder\n          </span>\n          <div className=\"mb-3 w-full\">\n            <Form.Field name=\"username\">\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Username <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n\n              <Form.Control asChild>\n                <Input\n                  type=\"username\"\n                  onChange={({ target: { value } }) => {\n                    handleInput({ target: { name: \"username\", value } });\n                  }}\n                  value={username}\n                  className=\"w-full\"\n                  required\n                  placeholder=\"Username\"\n                />\n              </Form.Control>\n\n              <Form.Message match=\"valueMissing\" className=\"field-invalid\">\n                Please enter your username\n              </Form.Message>\n            </Form.Field>\n          </div>\n          <div className=\"mb-3 w-full\">\n            <Form.Field name=\"password\">\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Password <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n\n              <InputComponent\n                onChange={(value) => {\n                  handleInput({ target: { name: \"password\", value } });\n                }}\n                value={password}\n                isForm\n                password={true}\n                required\n                placeholder=\"Password\"\n                className=\"w-full\"\n              />\n\n              <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                Please enter your password\n              </Form.Message>\n            </Form.Field>\n          </div>\n          <div className=\"w-full\">\n            <Form.Submit asChild>\n              <Button className=\"mr-3 mt-6 w-full\" type=\"submit\">\n                Sign in\n              </Button>\n            </Form.Submit>\n          </div>\n          <div className=\"w-full\">\n            <CustomLink to=\"/signup\">\n              <Button className=\"w-full\" variant=\"outline\" type=\"button\">\n                Don't have an account?&nbsp;<b>Sign Up</b>\n              </Button>\n            </CustomLink>\n          </div>\n        </div>\n      </div>\n    </Form.Root>",
        "imports": [
          {
            "source": "@radix-ui/react-form",
            "items": [
              "* as Form"
            ],
            "type": "namespace"
          },
          {
            "source": "react",
            "items": [
              "useContext",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/assets/LangbuilderLogo.svg?react",
            "items": [
              "LangbuilderLogo"
            ],
            "type": "default"
          },
          {
            "source": "@/controllers/API/queries/auth",
            "items": [
              "useLoginUser"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-link",
            "items": [
              "CustomLink"
            ],
            "type": "named"
          },
          {
            "source": "../../components/core/parameterRenderComponent/components/inputComponent",
            "items": [
              "InputComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/input",
            "items": [
              "Input"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/alerts_constants",
            "items": [
              "SIGNIN_ERROR_ALERT"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/constants",
            "items": [
              "CONTROL_LOGIN_STATE"
            ],
            "type": "named"
          },
          {
            "source": "../../contexts/authContext",
            "items": [
              "AuthContext"
            ],
            "type": "named"
          },
          {
            "source": "../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "CustomLink",
          "Form",
          "Input",
          "InputComponent",
          "LangbuilderLogo"
        ],
        "tailwind_classes_used": [
          "bg-muted",
          "data-[invalid]:label-invalid",
          "field-invalid",
          "flex",
          "flex-col",
          "font-medium",
          "font-semibold",
          "gap-2",
          "h-10",
          "h-full",
          "h-screen",
          "items-center",
          "justify-center",
          "mb-3",
          "mb-4",
          "mb-6",
          "mr-3",
          "mt-6",
          "scale-[1.5]",
          "text-2xl",
          "text-destructive",
          "text-primary",
          "w-10",
          "w-72",
          "w-full"
        ],
        "state_props_referenced": [
          "password",
          "true",
          "username"
        ],
        "file_size_lines": 141,
        "jsx_size_chars": 2975
      }
    },
    {
      "id": "ni0013",
      "type": "interface",
      "name": "LoginAdminPage",
      "description": "Interface page: LoginPage",
      "route": "",
      "path": "src/frontend/src/pages/AdminPage/LoginPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "LoginAdminPage",
        "path": "src/frontend/src/pages/AdminPage/LoginPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useContext",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/assets/LangbuilderLogo.svg?react",
              "items": [
                "LangbuilderLogo"
              ]
            },
            {
              "source": "@/controllers/API/queries/auth",
              "items": [
                "useLoginUser"
              ]
            }
          ],
          "local": [
            {
              "source": "../../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../../components/ui/input",
              "items": [
                "Input"
              ]
            },
            {
              "source": "../../../constants/alerts_constants",
              "items": [
                "SIGNIN_ERROR_ALERT"
              ]
            },
            {
              "source": "../../../constants/constants",
              "items": [
                "CONTROL_LOGIN_STATE"
              ]
            },
            {
              "source": "../../../contexts/authContext",
              "items": [
                "AuthContext"
              ]
            },
            {
              "source": "../../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            }
          ]
        },
        "propDefinitions": {
          "target": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "inputState": {
            "type": "loginInputStateType",
            "defaultValue": "CONTROL_LOGIN_STATE"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useAlertStore",
          "useLoginUser"
        ],
        "eventHandlers": {
          "handleInput": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "Input",
            "LangbuilderLogo"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "LoginAdminPage",
        "file_path": "src/frontend/src/pages/AdminPage/LoginPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col items-center justify-center bg-muted"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-72 flex-col items-center justify-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "LangbuilderLogo",
              "attributes": {
                "className": "h-10 w-10 scale-[1.5]"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "mb-6 text-2xl font-semibold text-primary"
              },
              "category": "html"
            },
            {
              "type": "Input",
              "attributes": {
                "onChange": "({ target: { value"
              },
              "category": "component"
            },
            {
              "type": "Input",
              "attributes": {
                "onChange": "({ target: { value",
                "type": "password"
              },
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "Input",
            "LangbuilderLogo",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Input"
          ],
          "custom": [
            "LangbuilderLogo"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "w-full",
            "flex-col",
            "mb-6",
            "text-2xl",
            "h-10",
            "gap-2",
            "flex",
            "text-primary",
            "justify-center",
            "bg-background",
            "h-full",
            "bg-muted",
            "w-72",
            "w-10",
            "font-semibold",
            "items-center",
            "scale-[1.5]"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "onChange": "({ target: { value"
              },
              "type": "text"
            },
            {
              "attributes": {
                "onChange": "({ target: { value",
                "type": "password"
              },
              "type": "password"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "LoginAdminPage",
        "file_path": "src/frontend/src/pages/AdminPage/LoginPage/index.tsx",
        "component_type": "page",
        "summary": "LoginAdmin page component",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col items-center justify-center bg-muted\">\n      <div className=\"flex w-72 flex-col items-center justify-center gap-2\">\n        <LangbuilderLogo title=\"Langbuilder logo\" className=\"h-10 w-10 scale-[1.5]\" />\n        <span className=\"mb-6 text-2xl font-semibold text-primary\">Admin</span>\n        <Input\n          onChange={({ target: { value } }) => {\n            handleInput({ target: { name: \"username\", value } });\n          }}\n          className=\"bg-background\"\n          placeholder=\"Username\"\n        />\n        <Input\n          type=\"password\"\n          onChange={({ target: { value } }) => {\n            handleInput({ target: { name: \"password\", value } });\n          }}\n          className=\"bg-background\"\n          placeholder=\"Password\"\n        />\n        <Button\n          onClick={() => {\n            signIn();\n          }}\n          variant=\"default\"\n          className=\"w-full\"\n        >\n          Login\n        </Button>\n      </div>\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col items-center justify-center bg-muted\">\n      <div className=\"flex w-72 flex-col items-center justify-center gap-2\">\n        <LangbuilderLogo title=\"Langbuilder logo\" className=\"h-10 w-10 scale-[1.5]\" />\n        <span className=\"mb-6 text-2xl font-semibold text-primary\">Admin</span>\n        <Input\n          onChange={({ target: { value } }) => {\n            handleInput({ target: { name: \"username\", value } });\n          }}\n          className=\"bg-background\"\n          placeholder=\"Username\"\n        />\n        <Input\n          type=\"password\"\n          onChange={({ target: { value } }) => {\n            handleInput({ target: { name: \"password\", value } });\n          }}\n          className=\"bg-background\"\n          placeholder=\"Password\"\n        />\n        <Button\n          onClick={handleClick}\n          variant=\"default\"\n          className=\"w-full\"\n        >\n          Login\n        </Button>\n      </div>\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useContext",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/assets/LangbuilderLogo.svg?react",
            "items": [
              "LangbuilderLogo"
            ],
            "type": "default"
          },
          {
            "source": "@/controllers/API/queries/auth",
            "items": [
              "useLoginUser"
            ],
            "type": "named"
          },
          {
            "source": "../../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../../components/ui/input",
            "items": [
              "Input"
            ],
            "type": "named"
          },
          {
            "source": "../../../constants/alerts_constants",
            "items": [
              "SIGNIN_ERROR_ALERT"
            ],
            "type": "named"
          },
          {
            "source": "../../../constants/constants",
            "items": [
              "CONTROL_LOGIN_STATE"
            ],
            "type": "named"
          },
          {
            "source": "../../../contexts/authContext",
            "items": [
              "AuthContext"
            ],
            "type": "named"
          },
          {
            "source": "../../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "Input",
          "LangbuilderLogo"
        ],
        "tailwind_classes_used": [
          "bg-background",
          "bg-muted",
          "flex",
          "flex-col",
          "font-semibold",
          "gap-2",
          "h-10",
          "h-full",
          "items-center",
          "justify-center",
          "mb-6",
          "scale-[1.5]",
          "text-2xl",
          "text-primary",
          "w-10",
          "w-72",
          "w-full"
        ],
        "state_props_referenced": [],
        "file_size_lines": 82,
        "jsx_size_chars": 1001
      }
    },
    {
      "id": "ni0014",
      "type": "interface",
      "name": "MCPServersPage",
      "description": "Interface page: MCPServersPage",
      "route": "mcp-servers",
      "path": "src/frontend/src/pages/SettingsPage/pages/MCPServersPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "MCPServersPage",
        "path": "src/frontend/src/pages/SettingsPage/pages/MCPServersPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/common/shadTooltipComponent",
              "items": [
                "ShadTooltip"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/components/ui/dropdown-menu",
              "items": [
                "DropdownMenu",
                "DropdownMenuContent",
                "DropdownMenuItem",
                "DropdownMenuTrigger",
                ""
              ]
            },
            {
              "source": "@/components/ui/loading",
              "items": [
                "Loading"
              ]
            },
            {
              "source": "@/controllers/API/queries/mcp/use-delete-mcp-server",
              "items": [
                "useDeleteMCPServer"
              ]
            },
            {
              "source": "@/controllers/API/queries/mcp/use-get-mcp-server",
              "items": [
                "useGetMCPServer"
              ]
            },
            {
              "source": "@/controllers/API/queries/mcp/use-get-mcp-servers",
              "items": [
                "useGetMCPServers"
              ]
            },
            {
              "source": "@/modals/addMcpServerModal",
              "items": [
                "AddMcpServerModal"
              ]
            },
            {
              "source": "@/modals/deleteConfirmationModal",
              "items": [
                "DeleteConfirmationModal"
              ]
            },
            {
              "source": "@/stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "addOpen": {
            "type": "any",
            "defaultValue": "false"
          },
          "editOpen": {
            "type": "any",
            "defaultValue": "false"
          },
          "editInitialData": {
            "type": "any",
            "defaultValue": "null"
          },
          "deleteModalOpen": {
            "type": "any",
            "defaultValue": "false"
          },
          "serverToDelete": {
            "type": "MCPServerInfoType | null",
            "defaultValue": "null"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useGetMCPServer",
          "useDeleteMCPServer",
          "useGetMCPServers",
          "useAlertStore"
        ],
        "eventHandlers": {
          "handleEdit": {
            "type": "arrow_function",
            "async": true
          },
          "handleDelete": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [
            {
              "type": "map",
              "array": "servers",
              "component": "div"
            }
          ],
          "components": [
            "DeleteConfirmationModal",
            "MCPServerInfoType",
            "AddMcpServerModal",
            "ForwardedIconComponent",
            "ShadTooltip",
            "DropdownMenuContent",
            "Loading",
            "DropdownMenuItem",
            "Button",
            "DropdownMenuTrigger",
            "DropdownMenu"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "MCPServersPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/MCPServersPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col gap-6"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full items-start justify-between gap-6"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col"
              },
              "category": "html"
            },
            {
              "type": "h",
              "attributes": {
                "className": "flex items-center text-lg font-semibold tracking-tight"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "ml-2 h-5 w-5 text-primary"
              },
              "category": "component"
            },
            {
              "type": "p",
              "attributes": {
                "className": "text-sm text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-shrink-0 items-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "w-4"
              },
              "category": "component"
            },
            {
              "type": "AddMcpServerModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "w-full pt-8 text-center text-sm text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "text-sm font-medium text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-1"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center justify-between rounded-lg px-3 py-2 shadow-sm transition-colors hover:bg-accent"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-sm font-medium"
              },
              "category": "html"
            },
            {
              "type": "ShadTooltip",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            },
            {
              "type": "DropdownMenu",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "DropdownMenuTrigger",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "text-muted-foreground hover:bg-accent"
              },
              "category": "component"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-5 w-5"
              },
              "category": "component"
            },
            {
              "type": "DropdownMenuContent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "DropdownMenuItem",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "mr-2 h-4 w-4"
              },
              "category": "component"
            },
            {
              "type": "DropdownMenuItem",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "mr-2 h-4 w-4"
              },
              "category": "component"
            },
            {
              "type": "AddMcpServerModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "DeleteConfirmationModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full items-center justify-center"
              },
              "category": "html"
            },
            {
              "type": "Loading",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "DropdownMenuTrigger",
            "Loading",
            "AddMcpServerModal",
            "ForwardedIconComponent",
            "DropdownMenu",
            "DeleteConfirmationModal",
            "ShadTooltip",
            "DropdownMenuContent",
            "DropdownMenuItem",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "list",
              "description": "Dynamic list rendering with map"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "DropdownMenu"
          ],
          "custom": [
            "MCPServerInfoType",
            "ForwardedIconComponent",
            "AddMcpServerModal",
            "ShadTooltip",
            "DropdownMenuTrigger",
            "DropdownMenuContent",
            "DropdownMenuItem",
            "DeleteConfirmationModal",
            "Loading"
          ],
          "html": [
            "div",
            "span",
            "p",
            "h2"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "py-2",
            "text-muted-foreground",
            "rounded-lg",
            "shadow-sm",
            "pt-8",
            "flex-shrink-0",
            "w-full",
            "flex-col",
            "transition-colors",
            "gap-2",
            "gap-1",
            "justify-center",
            "ml-2",
            "text-center",
            "w-5",
            "justify-between",
            "items-center",
            "w-4",
            "items-start",
            "mr-2",
            "text-lg",
            "tracking-tight",
            "px-3",
            "h-4",
            "gap-6",
            "cn(",
            "text-primary",
            "flex",
            "font-medium",
            "text-sm",
            "h-full",
            "text-destructive",
            "hover:bg-accent",
            "h-5",
            "font-semibold"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            },
            {
              "attributes": {
                "className": "text-muted-foreground hover:bg-accent"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "dynamic_list",
            "arrays": [
              "servers"
            ],
            "description": "Dynamic rendering of 1 lists"
          }
        ],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "MCPServersPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/MCPServersPage/index.tsx",
        "component_type": "page",
        "summary": "MCPServers page component",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col gap-6\">\n      <div className=\"flex w-full items-start justify-between gap-6\">\n        <div className=\"flex flex-col\">\n          <h2 className=\"flex items-center text-lg font-semibold tracking-tight\">\n            MCP Servers\n            <ForwardedIconComponent\n              name=\"Mcp\"\n              className=\"ml-2 h-5 w-5 text-primary\"\n            />\n          </h2>\n          <p className=\"text-sm text-muted-foreground\">\n            Manage MCP Servers for use in your flows.\n          </p>\n        </div>\n        <div className=\"flex flex-shrink-0 items-center gap-2\">\n          <Button\n            variant=\"primary\"\n            onClick={() => setAddOpen(true)}\n            data-testid=\"add-mcp-server-button-page\"\n          >\n            <ForwardedIconComponent name=\"Plus\" className=\"w-4\" />\n            Add MCP Server\n          </Button>\n          <AddMcpServerModal open={addOpen} setOpen={setAddOpen} />\n        </div>\n      </div>\n      <div className=\"flex h-full flex-col gap-2\">\n        {servers ? (\n          <>\n            {servers.length === 0 ? (\n              <div className=\"w-full pt-8 text-center text-sm text-muted-foreground\">\n                No MCP servers added\n              </div>\n            ) : (\n              <div className=\"text-sm font-medium text-muted-foreground\">\n                Added MCP Servers\n              </div>\n            )}\n            <div className=\"flex flex-col gap-1\">\n              {servers.map((server) => (\n                <div\n                  key={server.id}\n                  className=\"flex items-center justify-between rounded-lg px-3 py-2 shadow-sm transition-colors hover:bg-accent\"\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm font-medium\">{server.name}</span>\n                    <ShadTooltip content={server.error}>\n                      <span\n                        className={cn(\n                          \"cursor-default select-none !text-mmd text-muted-foreground\",\n                          server.error && \"text-accent-red-foreground\",\n                        )}\n                      >\n                        {server.toolsCount === null\n                          ? server.error\n                            ? server.error.startsWith(\"Timeout\")\n                              ? \"Timeout\"\n                              : \"Error\"\n                            : \"Loading...\"\n                          : !server.toolsCount\n                            ? \"No tools found\"\n                            : `${server.toolsCount} tool${server.toolsCount === 1 ? \"\" : \"s\"}`}\n                      </span>\n                    </ShadTooltip>\n                  </div>\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"iconSm\"\n                        data-testid={`mcp-server-menu-button-${server.name}`}\n                        className=\"text-muted-foreground hover:bg-accent\"\n                      >\n                        <ForwardedIconComponent\n                          name=\"Ellipsis\"\n                          className=\"h-5 w-5\"\n                        />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\">\n                      <DropdownMenuItem onClick={() => handleEdit(server.name)}>\n                        <ForwardedIconComponent\n                          name=\"SquarePen\"\n                          className=\"mr-2 h-4 w-4\"\n                        />\n                        Edit\n                      </DropdownMenuItem>\n                      <DropdownMenuItem\n                        onClick={() => openDeleteModal(server)}\n                        className=\"text-destructive\"\n                      >\n                        <ForwardedIconComponent\n                          name=\"Trash2\"\n                          className=\"mr-2 h-4 w-4\"\n                        />\n                        Delete\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </div>\n              ))}\n            </div>\n            {editOpen && (\n              <AddMcpServerModal\n                open={editOpen}\n                setOpen={setEditOpen}\n                initialData={editInitialData}\n              />\n            )}\n            <DeleteConfirmationModal\n              open={deleteModalOpen}\n              setOpen={setDeleteModalOpen}\n              onConfirm={() => {\n                if (serverToDelete) handleDelete(serverToDelete);\n                setDeleteModalOpen(false);\n                setServerToDelete(null);\n              }}\n              description={\"MCP Server\"}\n            />\n          </>\n        ) : (\n          <div className=\"flex h-full w-full items-center justify-center\">\n            <Loading />\n          </div>\n        )}\n      </div>\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col gap-6\">\n      <div className=\"flex w-full items-start justify-between gap-6\">\n        <div className=\"flex flex-col\">\n          <h2 className=\"flex items-center text-lg font-semibold tracking-tight\">\n            MCP Servers\n            <ForwardedIconComponent\n              name=\"Mcp\"\n              className=\"ml-2 h-5 w-5 text-primary\"\n            />\n          </h2>\n          <p className=\"text-sm text-muted-foreground\">\n            Manage MCP Servers for use in your flows.\n          </p>\n        </div>\n        <div className=\"flex flex-shrink-0 items-center gap-2\">\n          <Button\n            variant=\"primary\"\n            onClick={() => setAddOpen(true)}\n            data-testid=\"add-mcp-server-button-page\"\n          >\n            <ForwardedIconComponent name=\"Plus\" className=\"w-4\" />\n            Add MCP Server\n          </Button>\n          <AddMcpServerModal open={addOpen} setOpen={setAddOpen} />\n        </div>\n      </div>\n      <div className=\"flex h-full flex-col gap-2\">\n        {/* complex expression */}\n            <div className=\"flex flex-col gap-1\">\n              {servers.map((server) => (\n                <div\n                  key={server.id}\n                  className=\"flex items-center justify-between rounded-lg px-3 py-2 shadow-sm transition-colors hover:bg-accent\"\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm font-medium\">{server.name}</span>\n                    <ShadTooltip content={server.error}>\n                      <span\n                        className={/* complex expression */}\n                      >\n                        {/* complex expression */} tool${server.toolsCount === 1 ? \"\" : \"s\"}`}\n                      </span>\n                    </ShadTooltip>\n                  </div>\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"iconSm\"\n                        data-testid={`mcp-server-menu-button-${server.name}`}\n                        className=\"text-muted-foreground hover:bg-accent\"\n                      >\n                        <ForwardedIconComponent\n                          name=\"Ellipsis\"\n                          className=\"h-5 w-5\"\n                        />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\">\n                      <DropdownMenuItem onClick={() => handleEdit(server.name)}>\n                        <ForwardedIconComponent\n                          name=\"SquarePen\"\n                          className=\"mr-2 h-4 w-4\"\n                        />\n                        Edit\n                      </DropdownMenuItem>\n                      <DropdownMenuItem\n                        onClick={() => openDeleteModal(server)}\n                        className=\"text-destructive\"\n                      >\n                        <ForwardedIconComponent\n                          name=\"Trash2\"\n                          className=\"mr-2 h-4 w-4\"\n                        />\n                        Delete\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </div>\n              ))}\n            </div>\n            {editOpen && (\n              <AddMcpServerModal\n                open={editOpen}\n                setOpen={setEditOpen}\n                initialData={editInitialData}\n              />\n            )}\n            <DeleteConfirmationModal\n              open={deleteModalOpen}\n              setOpen={setDeleteModalOpen}\n              onConfirm={handleClick}\n              description={\"MCP Server\"}\n            />\n          </>\n        ) : (\n          <div className=\"flex h-full w-full items-center justify-center\">\n            <Loading />\n          </div>\n        )}\n      </div>\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/common/shadTooltipComponent",
            "items": [
              "ShadTooltip"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/dropdown-menu",
            "items": [
              "DropdownMenu",
              "DropdownMenuContent",
              "DropdownMenuItem",
              "DropdownMenuTrigger",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/loading",
            "items": [
              "Loading"
            ],
            "type": "default"
          },
          {
            "source": "@/controllers/API/queries/mcp/use-delete-mcp-server",
            "items": [
              "useDeleteMCPServer"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/mcp/use-get-mcp-server",
            "items": [
              "useGetMCPServer"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/mcp/use-get-mcp-servers",
            "items": [
              "useGetMCPServers"
            ],
            "type": "named"
          },
          {
            "source": "@/modals/addMcpServerModal",
            "items": [
              "AddMcpServerModal"
            ],
            "type": "default"
          },
          {
            "source": "@/modals/deleteConfirmationModal",
            "items": [
              "DeleteConfirmationModal"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "AddMcpServerModal",
          "Button",
          "DeleteConfirmationModal",
          "DropdownMenu",
          "DropdownMenuContent",
          "DropdownMenuItem",
          "DropdownMenuTrigger",
          "ForwardedIconComponent",
          "Loading",
          "ShadTooltip"
        ],
        "tailwind_classes_used": [
          "cn(",
          "flex",
          "flex-col",
          "flex-shrink-0",
          "font-medium",
          "font-semibold",
          "gap-1",
          "gap-2",
          "gap-6",
          "h-4",
          "h-5",
          "h-full",
          "hover:bg-accent",
          "items-center",
          "items-start",
          "justify-between",
          "justify-center",
          "ml-2",
          "mr-2",
          "pt-8",
          "px-3",
          "py-2",
          "rounded-lg",
          "shadow-sm",
          "text-center",
          "text-destructive",
          "text-lg",
          "text-muted-foreground",
          "text-primary",
          "text-sm",
          "tracking-tight",
          "transition-colors",
          "w-4",
          "w-5",
          "w-full"
        ],
        "state_props_referenced": [
          "addOpen",
          "deleteModalOpen",
          "editInitialData",
          "editOpen",
          "setAddOpen",
          "setDeleteModalOpen",
          "setEditOpen"
        ],
        "file_size_lines": 188,
        "jsx_size_chars": 5039
      }
    },
    {
      "id": "ni0015",
      "type": "interface",
      "name": "Playground",
      "description": "Interface page: Playground",
      "route": "",
      "path": "src/frontend/src/pages/Playground/index.tsx",
      "uidl_definition_conceptual": {
        "name": "Playground",
        "path": "src/frontend/src/pages/Playground/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect"
              ]
            }
          ],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "useParams"
              ]
            },
            {
              "source": "uuid",
              "items": [
                "v4 as uuid"
              ]
            },
            {
              "source": "@/controllers/API/queries/config/use-get-config",
              "items": [
                "useGetConfig"
              ]
            },
            {
              "source": "@/controllers/API/queries/flows/use-get-flow",
              "items": [
                "useGetFlow"
              ]
            },
            {
              "source": "@/customization/components/custom-new-modal",
              "items": [
                "CustomIOModal"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-navigate",
              "items": [
                "useCustomNavigate"
              ]
            },
            {
              "source": "@/customization/utils/analytics",
              "items": [
                "track"
              ]
            },
            {
              "source": "@/stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "@/stores/utilityStore",
              "items": [
                "useUtilityStore"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "type CookieOptions",
                "getCookie",
                "setCookie"
              ]
            }
          ],
          "local": [
            {
              "source": "../../stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "../../utils/storeUtils",
              "items": [
                "getInputsAndOutputs"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [
          {
            "dependencies": [],
            "description": "Effect with 0 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useGetFlow",
          "useFlowStore",
          "useUtilityStore",
          "useCustomNavigate",
          "useParams",
          "useFlowsManagerStore"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "CustomIOModal"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "Playground",
        "file_path": "src/frontend/src/pages/Playground/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col items-center justify-center align-middle"
              },
              "category": "html"
            },
            {
              "type": "CustomIOModal",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "CustomIOModal"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "CustomIOModal"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "align-middle",
            "w-full",
            "flex-col",
            "flex",
            "justify-center",
            "h-full",
            "items-center"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "Playground",
        "file_path": "src/frontend/src/pages/Playground/index.tsx",
        "component_type": "other",
        "summary": "redirect to the home page",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col items-center justify-center align-middle\">\n      {currentSavedFlow && (\n        <CustomIOModal\n          open={true}\n          setOpen={() => {}}\n          isPlayground\n          playgroundPage\n        >\n          <></>\n        </CustomIOModal>\n      )}\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col items-center justify-center align-middle\">\n      {currentSavedFlow && (\n        <CustomIOModal\n          open={true}\n          setOpen={handleClick}\n          isPlayground\n          playgroundPage\n        >\n          <></>\n        </CustomIOModal>\n      )}\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "useParams"
            ],
            "type": "named"
          },
          {
            "source": "uuid",
            "items": [
              "v4 as uuid"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/config/use-get-config",
            "items": [
              "useGetConfig"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/flows/use-get-flow",
            "items": [
              "useGetFlow"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-new-modal",
            "items": [
              "CustomIOModal"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-navigate",
            "items": [
              "useCustomNavigate"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/utils/analytics",
            "items": [
              "track"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/utilityStore",
            "items": [
              "useUtilityStore"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "type CookieOptions",
              "getCookie",
              "setCookie"
            ],
            "type": "named"
          },
          {
            "source": "../../stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "../../utils/storeUtils",
            "items": [
              "getInputsAndOutputs"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "CustomIOModal"
        ],
        "tailwind_classes_used": [
          "align-middle",
          "flex",
          "flex-col",
          "h-full",
          "items-center",
          "justify-center",
          "w-full"
        ],
        "state_props_referenced": [
          "true"
        ],
        "file_size_lines": 107,
        "jsx_size_chars": 308
      }
    },
    {
      "id": "ni0016",
      "type": "interface",
      "name": "SettingsPage",
      "description": "Interface page: SettingsPage",
      "route": "settings",
      "path": "src/frontend/src/pages/SettingsPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "SettingsPage",
        "path": "src/frontend/src/pages/SettingsPage/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "Outlet",
                "type To"
              ]
            },
            {
              "source": "@/components/core/sidebarComponent",
              "items": [
                "SideBarButtonsComponent"
              ]
            },
            {
              "source": "@/components/ui/sidebar",
              "items": [
                "SidebarProvider"
              ]
            },
            {
              "source": "@/customization/components/custom-store-sidebar",
              "items": [
                "CustomStoreSidebar"
              ]
            },
            {
              "source": "@/customization/feature-flags",
              "items": [
                "ENABLE_DATASTAX_LANGBUILDER",
                "ENABLE_LANGBUILDER_STORE",
                "ENABLE_PROFILE_ICONS",
                ""
              ]
            },
            {
              "source": "@/stores/authStore",
              "items": [
                "useAuthStore"
              ]
            },
            {
              "source": "@/stores/storeStore",
              "items": [
                "useStoreStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "../../components/common/pageLayout",
              "items": [
                "PageLayout"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useStoreStore",
          "useAuthStore"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "PageLayout",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "ForwardedIconComponent",
            "Outlet",
            "PageLayout",
            "SideBarButtonsComponent",
            "SidebarProvider"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "SettingsPage",
        "file_path": "src/frontend/src/pages/SettingsPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "PageLayout",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SidebarProvider",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SideBarButtonsComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "main",
              "attributes": {
                "className": "flex flex-1 overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-1 flex-col overflow-x-hidden pt-1"
              },
              "category": "html"
            },
            {
              "type": "Outlet",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "PageLayout",
            "SideBarButtonsComponent",
            "SidebarProvider",
            "Outlet"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "ForwardedIconComponent",
            "PageLayout",
            "SidebarProvider",
            "SideBarButtonsComponent",
            "Outlet"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "w-4",
            "flex-shrink-0",
            "flex-col",
            "pt-1",
            "flex",
            "overflow-hidden",
            "flex-1",
            "stroke-[1.5]",
            "overflow-x-hidden",
            "justify-start"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "SettingsPage",
        "file_path": "src/frontend/src/pages/SettingsPage/index.tsx",
        "component_type": "page",
        "summary": "Hides the General settings if there is nothing to show",
        "jsx_return_statement": "<PageLayout\n      backTo={-1 as To}\n      title=\"Settings\"\n      description=\"Manage the general settings for Langbuilder.\"\n    >\n      <SidebarProvider width=\"15rem\" defaultOpen={false}>\n        <SideBarButtonsComponent items={sidebarNavItems} />\n        <main className=\"flex flex-1 overflow-hidden\">\n          <div className=\"flex flex-1 flex-col overflow-x-hidden pt-1\">\n            <Outlet />\n          </div>\n        </main>\n      </SidebarProvider>\n    </PageLayout>",
        "jsx_simplified": "<PageLayout\n      backTo={-1 as To}\n      title=\"Settings\"\n      description=\"Manage the general settings for Langbuilder.\"\n    >\n      <SidebarProvider width=\"15rem\" defaultOpen={false}>\n        <SideBarButtonsComponent items={sidebarNavItems} />\n        <main className=\"flex flex-1 overflow-hidden\">\n          <div className=\"flex flex-1 flex-col overflow-x-hidden pt-1\">\n            <Outlet />\n          </div>\n        </main>\n      </SidebarProvider>\n    </PageLayout>",
        "imports": [
          {
            "source": "react-router-dom",
            "items": [
              "Outlet",
              "type To"
            ],
            "type": "named"
          },
          {
            "source": "@/components/core/sidebarComponent",
            "items": [
              "SideBarButtonsComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/sidebar",
            "items": [
              "SidebarProvider"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-store-sidebar",
            "items": [
              "CustomStoreSidebar"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/feature-flags",
            "items": [
              "ENABLE_DATASTAX_LANGBUILDER",
              "ENABLE_LANGBUILDER_STORE",
              "ENABLE_PROFILE_ICONS",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/stores/authStore",
            "items": [
              "useAuthStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/storeStore",
            "items": [
              "useStoreStore"
            ],
            "type": "named"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/pageLayout",
            "items": [
              "PageLayout"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Outlet",
          "PageLayout",
          "SideBarButtonsComponent",
          "SidebarProvider"
        ],
        "tailwind_classes_used": [
          "flex",
          "flex-1",
          "flex-col",
          "overflow-hidden",
          "overflow-x-hidden",
          "pt-1"
        ],
        "state_props_referenced": [
          "false",
          "sidebarNavItems"
        ],
        "file_size_lines": 106,
        "jsx_size_chars": 473
      }
    },
    {
      "id": "ni0017",
      "type": "interface",
      "name": "ShortcutsPage",
      "description": "Interface page: ShortcutsPage",
      "route": "shortcuts",
      "path": "src/frontend/src/pages/SettingsPage/pages/ShortcutsPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "ShortcutsPage",
        "path": "src/frontend/src/pages/SettingsPage/pages/ShortcutsPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/utils/utils",
              "items": [
                "toCamelCase"
              ]
            }
          ],
          "local": [
            {
              "source": "../../../../components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "../../../../components/core/parameterRenderComponent/components/tableComponent",
              "items": [
                "TableComponent"
              ]
            },
            {
              "source": "../../../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../../../constants/constants",
              "items": [
                "defaultShortcuts"
              ]
            },
            {
              "source": "../../../../stores/shortcuts",
              "items": [
                "useShortcutsStore"
              ]
            },
            {
              "source": "./CellRenderWrapper",
              "items": [
                "CellRenderShortcuts"
              ]
            },
            {
              "source": "./EditShortcutButton",
              "items": [
                "EditShortcutButton"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "selectedRows": {
            "type": "string[]",
            "defaultValue": "[]"
          },
          "open": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "shortcuts"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useShortcutsStore"
        ],
        "eventHandlers": {
          "handleRestore": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "EditShortcutButton",
            "ForwardedIconComponent",
            "TableComponent",
            "Button"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "ShortcutsPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/ShortcutsPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col gap-6"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full items-start justify-between gap-6"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full flex-col"
              },
              "category": "html"
            },
            {
              "type": "h",
              "attributes": {
                "className": "flex items-center text-lg font-semibold tracking-tight"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "ml-2 h-5 w-5 text-primary"
              },
              "category": "component"
            },
            {
              "type": "p",
              "attributes": {
                "className": "text-sm text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "align-end flex w-full justify-end"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "justify center flex items-center"
              },
              "category": "html"
            },
            {
              "type": "EditShortcutButton",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "flex gap-2",
                "onClick": "handleRestore"
              },
              "category": "component"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "w-4"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "grid gap-6 pb-8"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "TableComponent",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "EditShortcutButton",
            "TableComponent",
            "ForwardedIconComponent",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "table",
              "description": "Data table display"
            },
            {
              "type": "grid",
              "description": "Grid layout structure"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "ForwardedIconComponent",
            "EditShortcutButton",
            "TableComponent"
          ],
          "html": [
            "div",
            "p",
            "h2"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "text-muted-foreground",
            "w-full",
            "flex-col",
            "justify",
            "gap-2",
            "ml-2",
            "align-end",
            "pb-8",
            "w-5",
            "justify-between",
            "items-center",
            "w-4",
            "items-start",
            "text-lg",
            "tracking-tight",
            "center",
            "gap-6",
            "text-primary",
            "flex",
            "text-sm",
            "h-full",
            "grid",
            "h-5",
            "justify-end",
            "font-semibold"
          ],
          "layout_patterns": [
            "flexbox",
            "grid"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "flex gap-2",
                "onClick": "handleRestore"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "table",
            "columns": [],
            "has_pagination": true
          }
        ],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "ShortcutsPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/ShortcutsPage/index.tsx",
        "component_type": "page",
        "summary": "Column Definitions: Defines the columns to be displayed.",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col gap-6\">\n      <div className=\"flex w-full items-start justify-between gap-6\">\n        <div className=\"flex w-full flex-col\">\n          <h2 className=\"flex items-center text-lg font-semibold tracking-tight\">\n            Shortcuts\n            <ForwardedIconComponent\n              name=\"Keyboard\"\n              className=\"ml-2 h-5 w-5 text-primary\"\n            />\n          </h2>\n          <p className=\"text-sm text-muted-foreground\">\n            Manage Shortcuts for quick access to frequently used actions.\n          </p>\n        </div>\n        <div>\n          <div className=\"align-end flex w-full justify-end\">\n            <div className=\"justify center flex items-center\">\n              {open && (\n                <EditShortcutButton\n                  disable={selectedRows.length === 0}\n                  shortcut={selectedRows}\n                  defaultShortcuts={shortcuts}\n                  open={open}\n                  setOpen={setOpen}\n                  setSelected={setSelectedRows}\n                >\n                  <div style={{ display: \"none\" }} />\n                </EditShortcutButton>\n              )}\n              <Button\n                variant=\"primary\"\n                className=\"flex gap-2\"\n                onClick={handleRestore}\n              >\n                <ForwardedIconComponent name=\"RotateCcw\" className=\"w-4\" />\n                Restore\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"grid gap-6 pb-8\">\n        <div>\n          {colDefs && nodesRowData.length > 0 && (\n            <TableComponent\n              suppressRowClickSelection={true}\n              domLayout=\"autoHeight\"\n              pagination={false}\n              columnDefs={colDefs}\n              rowData={nodesRowData}\n              onCellDoubleClicked={(e) => {\n                setSelectedRows([e.data.name]);\n                setOpen(true);\n              }}\n            />\n          )}\n        </div>\n      </div>\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col gap-6\">\n      <div className=\"flex w-full items-start justify-between gap-6\">\n        <div className=\"flex w-full flex-col\">\n          <h2 className=\"flex items-center text-lg font-semibold tracking-tight\">\n            Shortcuts\n            <ForwardedIconComponent\n              name=\"Keyboard\"\n              className=\"ml-2 h-5 w-5 text-primary\"\n            />\n          </h2>\n          <p className=\"text-sm text-muted-foreground\">\n            Manage Shortcuts for quick access to frequently used actions.\n          </p>\n        </div>\n        <div>\n          <div className=\"align-end flex w-full justify-end\">\n            <div className=\"justify center flex items-center\">\n              {open && (\n                <EditShortcutButton\n                  disable={selectedRows.length === 0}\n                  shortcut={selectedRows}\n                  defaultShortcuts={shortcuts}\n                  open={open}\n                  setOpen={setOpen}\n                  setSelected={setSelectedRows}\n                >\n                  <div style={{ display: \"none\" }} />\n                </EditShortcutButton>\n              )}\n              <Button\n                variant=\"primary\"\n                className=\"flex gap-2\"\n                onClick={handleRestore}\n              >\n                <ForwardedIconComponent name=\"RotateCcw\" className=\"w-4\" />\n                Restore\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"grid gap-6 pb-8\">\n        <div>\n          {/* complex expression */}\n              domLayout=\"autoHeight\"\n              pagination={false}\n              columnDefs={colDefs}\n              rowData={nodesRowData}\n              onCellDoubleClicked={handleClick}\n            />\n          )}\n        </div>\n      </div>\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "toCamelCase"
            ],
            "type": "named"
          },
          {
            "source": "../../../../components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../../../components/core/parameterRenderComponent/components/tableComponent",
            "items": [
              "TableComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../../../constants/constants",
            "items": [
              "defaultShortcuts"
            ],
            "type": "named"
          },
          {
            "source": "../../../../stores/shortcuts",
            "items": [
              "useShortcutsStore"
            ],
            "type": "named"
          },
          {
            "source": "./CellRenderWrapper",
            "items": [
              "CellRenderShortcuts"
            ],
            "type": "default"
          },
          {
            "source": "./EditShortcutButton",
            "items": [
              "EditShortcutButton"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "EditShortcutButton",
          "ForwardedIconComponent",
          "TableComponent"
        ],
        "tailwind_classes_used": [
          "align-end",
          "center",
          "flex",
          "flex-col",
          "font-semibold",
          "gap-2",
          "gap-6",
          "grid",
          "h-5",
          "h-full",
          "items-center",
          "items-start",
          "justify",
          "justify-between",
          "justify-end",
          "ml-2",
          "pb-8",
          "text-lg",
          "text-muted-foreground",
          "text-primary",
          "text-sm",
          "tracking-tight",
          "w-4",
          "w-5",
          "w-full"
        ],
        "state_props_referenced": [
          "colDefs",
          "false",
          "handleRestore",
          "nodesRowData",
          "open",
          "selectedRows",
          "setOpen",
          "setSelectedRows",
          "shortcuts",
          "true"
        ],
        "file_size_lines": 119,
        "jsx_size_chars": 2033
      }
    },
    {
      "id": "ni0018",
      "type": "interface",
      "name": "SignUpPage",
      "description": "Interface page: SignUpPage",
      "route": "",
      "path": "src/frontend/src/pages/SignUpPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "SignUpPage",
        "path": "src/frontend/src/pages/SignUpPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "type FormEvent",
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/assets/LangbuilderLogo.svg?react",
              "items": [
                "LangbuilderLogo"
              ]
            },
            {
              "source": "@/components/core/parameterRenderComponent/components/inputComponent",
              "items": [
                "InputComponent"
              ]
            },
            {
              "source": "@/controllers/API/queries/auth",
              "items": [
                "useAddUser"
              ]
            },
            {
              "source": "@/customization/components/custom-link",
              "items": [
                "CustomLink"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-navigate",
              "items": [
                "useCustomNavigate"
              ]
            },
            {
              "source": "@/customization/utils/analytics",
              "items": [
                "track"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/input",
              "items": [
                "Input"
              ]
            },
            {
              "source": "../../constants/alerts_constants",
              "items": [
                "SIGNUP_ERROR_ALERT"
              ]
            },
            {
              "source": "../../constants/constants",
              "items": [
                "CONTROL_INPUT_STATE",
                "SIGN_UP_SUCCESS",
                ""
              ]
            },
            {
              "source": "../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            }
          ]
        },
        "propDefinitions": {
          "target": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "inputState": {
            "type": "signUpInputStateType",
            "defaultValue": "CONTROL_INPUT_STATE"
          },
          "isDisabled": {
            "type": "boolean",
            "defaultValue": "true"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "password",
              "cnfPassword",
              "username",
              "handleInput"
            ],
            "description": "Effect with 4 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useAddUser",
          "useAlertStore",
          "useCustomNavigate"
        ],
        "eventHandlers": {
          "handleInput": {
            "type": "function_declaration",
            "async": false
          },
          "handleSignup": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "Form.Root",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "CustomLink",
            "InputComponent",
            "Input",
            "HTMLFormElement",
            "Button",
            "LangbuilderLogo"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "SignUpPage",
        "file_path": "src/frontend/src/pages/SignUpPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col items-center justify-center bg-muted"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-72 flex-col items-center justify-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "LangbuilderLogo",
              "attributes": {
                "className": "mb-4 h-10 w-10 scale-[1.5]"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "mb-6 text-2xl font-semibold text-primary"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "mb-3 w-full"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "font-medium text-destructive"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Input",
              "attributes": {
                "onChange": "({ target: { value",
                "type": "username"
              },
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "mb-3 w-full"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "font-medium text-destructive"
              },
              "category": "html"
            },
            {
              "type": "InputComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "w-full"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "font-medium text-destructive"
              },
              "category": "html"
            },
            {
              "type": "InputComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "w-full"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "mr-3 mt-6 w-full",
                "type": "submit",
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "w-full"
              },
              "category": "html"
            },
            {
              "type": "CustomLink",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "w-full"
              },
              "category": "component"
            },
            {
              "type": "b",
              "attributes": {},
              "category": "html"
            }
          ],
          "components": [
            "Form",
            "Input",
            "InputComponent",
            "CustomLink",
            "LangbuilderLogo",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "form",
              "description": "Form with inputs and submit handling"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Input"
          ],
          "custom": [
            "Form",
            "HTMLFormElement",
            "LangbuilderLogo",
            "InputComponent",
            "CustomLink"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "field-invalid",
            "text-2xl",
            "data-[invalid]:label-invalid",
            "h-screen",
            "mb-6",
            "w-full",
            "flex-col",
            "h-10",
            "gap-2",
            "justify-center",
            "items-center",
            "scale-[1.5]",
            "mt-6",
            "bg-muted",
            "text-primary",
            "flex",
            "font-medium",
            "h-full",
            "mb-4",
            "text-destructive",
            "mr-3",
            "w-72",
            "w-10",
            "font-semibold",
            "mb-3"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "mr-3 mt-6 w-full",
                "type": "submit",
                "disabled": true
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "w-full"
              },
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "onChange": "({ target: { value",
                "type": "username"
              },
              "type": "username"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "SignUpPage",
        "file_path": "src/frontend/src/pages/SignUpPage/index.tsx",
        "component_type": "page",
        "summary": "SignUp page component",
        "jsx_return_statement": "<Form.Root\n      onSubmit={(event: FormEvent<HTMLFormElement>) => {\n        if (password === \"\") {\n          event.preventDefault();\n          return;\n        }\n\n        const _data = Object.fromEntries(new FormData(event.currentTarget));\n        event.preventDefault();\n      }}\n      className=\"h-screen w-full\"\n    >\n      <div className=\"flex h-full w-full flex-col items-center justify-center bg-muted\">\n        <div className=\"flex w-72 flex-col items-center justify-center gap-2\">\n          <LangbuilderLogo\n            title=\"Langbuilder logo\"\n            className=\"mb-4 h-10 w-10 scale-[1.5]\"\n          />\n          <span className=\"mb-6 text-2xl font-semibold text-primary\">\n            Sign up for Langbuilder\n          </span>\n          <div className=\"mb-3 w-full\">\n            <Form.Field name=\"username\">\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Username <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n\n              <Form.Control asChild>\n                <Input\n                  type=\"username\"\n                  onChange={({ target: { value } }) => {\n                    handleInput({ target: { name: \"username\", value } });\n                  }}\n                  value={username}\n                  className=\"w-full\"\n                  required\n                  placeholder=\"Username\"\n                />\n              </Form.Control>\n\n              <Form.Message match=\"valueMissing\" className=\"field-invalid\">\n                Please enter your username\n              </Form.Message>\n            </Form.Field>\n          </div>\n          <div className=\"mb-3 w-full\">\n            <Form.Field name=\"password\" serverInvalid={password != cnfPassword}>\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Password <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n              <InputComponent\n                onChange={(value) => {\n                  handleInput({ target: { name: \"password\", value } });\n                }}\n                value={password}\n                isForm\n                password={true}\n                required\n                placeholder=\"Password\"\n                className=\"w-full\"\n              />\n\n              <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                Please enter a password\n              </Form.Message>\n\n              {password != cnfPassword && (\n                <Form.Message className=\"field-invalid\">\n                  Passwords do not match\n                </Form.Message>\n              )}\n            </Form.Field>\n          </div>\n          <div className=\"w-full\">\n            <Form.Field\n              name=\"confirmpassword\"\n              serverInvalid={password != cnfPassword}\n            >\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Confirm your password{\" \"}\n                <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n\n              <InputComponent\n                onChange={(value) => {\n                  handleInput({ target: { name: \"cnfPassword\", value } });\n                }}\n                value={cnfPassword}\n                isForm\n                password={true}\n                required\n                placeholder=\"Confirm your password\"\n                className=\"w-full\"\n              />\n\n              <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                Please confirm your password\n              </Form.Message>\n            </Form.Field>\n          </div>\n          <div className=\"w-full\">\n            <Form.Submit asChild>\n              <Button\n                disabled={isDisabled}\n                type=\"submit\"\n                className=\"mr-3 mt-6 w-full\"\n                onClick={() => {\n                  handleSignup();\n                }}\n              >\n                Sign up\n              </Button>\n            </Form.Submit>\n          </div>\n          <div className=\"w-full\">\n            <CustomLink to=\"/login\">\n              <Button className=\"w-full\" variant=\"outline\">\n                Already have an account?&nbsp;<b>Sign in</b>\n              </Button>\n            </CustomLink>\n          </div>\n        </div>\n      </div>\n    </Form.Root>",
        "jsx_simplified": "<Form.Root\n      onSubmit={/* complex expression */}\n\n        const _data = Object.fromEntries(new FormData(event.currentTarget));\n        event.preventDefault();\n      }}\n      className=\"h-screen w-full\"\n    >\n      <div className=\"flex h-full w-full flex-col items-center justify-center bg-muted\">\n        <div className=\"flex w-72 flex-col items-center justify-center gap-2\">\n          <LangbuilderLogo\n            title=\"Langbuilder logo\"\n            className=\"mb-4 h-10 w-10 scale-[1.5]\"\n          />\n          <span className=\"mb-6 text-2xl font-semibold text-primary\">\n            Sign up for Langbuilder\n          </span>\n          <div className=\"mb-3 w-full\">\n            <Form.Field name=\"username\">\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Username <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n\n              <Form.Control asChild>\n                <Input\n                  type=\"username\"\n                  onChange={({ target: { value } }) => {\n                    handleInput({ target: { name: \"username\", value } });\n                  }}\n                  value={username}\n                  className=\"w-full\"\n                  required\n                  placeholder=\"Username\"\n                />\n              </Form.Control>\n\n              <Form.Message match=\"valueMissing\" className=\"field-invalid\">\n                Please enter your username\n              </Form.Message>\n            </Form.Field>\n          </div>\n          <div className=\"mb-3 w-full\">\n            <Form.Field name=\"password\" serverInvalid={password != cnfPassword}>\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Password <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n              <InputComponent\n                onChange={(value) => {\n                  handleInput({ target: { name: \"password\", value } });\n                }}\n                value={password}\n                isForm\n                password={true}\n                required\n                placeholder=\"Password\"\n                className=\"w-full\"\n              />\n\n              <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                Please enter a password\n              </Form.Message>\n\n              {/* complex expression */}\n            </Form.Field>\n          </div>\n          <div className=\"w-full\">\n            <Form.Field\n              name=\"confirmpassword\"\n              serverInvalid={password != cnfPassword}\n            >\n              <Form.Label className=\"data-[invalid]:label-invalid\">\n                Confirm your password{\" \"}\n                <span className=\"font-medium text-destructive\">*</span>\n              </Form.Label>\n\n              <InputComponent\n                onChange={(value) => {\n                  handleInput({ target: { name: \"cnfPassword\", value } });\n                }}\n                value={cnfPassword}\n                isForm\n                password={true}\n                required\n                placeholder=\"Confirm your password\"\n                className=\"w-full\"\n              />\n\n              <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                Please confirm your password\n              </Form.Message>\n            </Form.Field>\n          </div>\n          <div className=\"w-full\">\n            <Form.Submit asChild>\n              <Button\n                disabled={isDisabled}\n                type=\"submit\"\n                className=\"mr-3 mt-6 w-full\"\n                onClick={handleClick}\n              >\n                Sign up\n              </Button>\n            </Form.Submit>\n          </div>\n          <div className=\"w-full\">\n            <CustomLink to=\"/login\">\n              <Button className=\"w-full\" variant=\"outline\">\n                Already have an account?&nbsp;<b>Sign in</b>\n              </Button>\n            </CustomLink>\n          </div>\n        </div>\n      </div>\n    </Form.Root>",
        "imports": [
          {
            "source": "@radix-ui/react-form",
            "items": [
              "* as Form"
            ],
            "type": "namespace"
          },
          {
            "source": "react",
            "items": [
              "type FormEvent",
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/assets/LangbuilderLogo.svg?react",
            "items": [
              "LangbuilderLogo"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/parameterRenderComponent/components/inputComponent",
            "items": [
              "InputComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/controllers/API/queries/auth",
            "items": [
              "useAddUser"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-link",
            "items": [
              "CustomLink"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-navigate",
            "items": [
              "useCustomNavigate"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/utils/analytics",
            "items": [
              "track"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/input",
            "items": [
              "Input"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/alerts_constants",
            "items": [
              "SIGNUP_ERROR_ALERT"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/constants",
            "items": [
              "CONTROL_INPUT_STATE",
              "SIGN_UP_SUCCESS",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "CustomLink",
          "Form",
          "HTMLFormElement",
          "Input",
          "InputComponent",
          "LangbuilderLogo"
        ],
        "tailwind_classes_used": [
          "bg-muted",
          "data-[invalid]:label-invalid",
          "field-invalid",
          "flex",
          "flex-col",
          "font-medium",
          "font-semibold",
          "gap-2",
          "h-10",
          "h-full",
          "h-screen",
          "items-center",
          "justify-center",
          "mb-3",
          "mb-4",
          "mb-6",
          "mr-3",
          "mt-6",
          "scale-[1.5]",
          "text-2xl",
          "text-destructive",
          "text-primary",
          "w-10",
          "w-72",
          "w-full"
        ],
        "state_props_referenced": [
          "cnfPassword",
          "isDisabled",
          "password",
          "true",
          "username"
        ],
        "file_size_lines": 204,
        "jsx_size_chars": 4327
      }
    },
    {
      "id": "ni0019",
      "type": "interface",
      "name": "StoreApiKeyPage",
      "description": "Interface page: StoreApiKeyPage",
      "route": "",
      "path": "src/frontend/src/pages/SettingsPage/pages/StoreApiKeyPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "StoreApiKeyPage",
        "path": "src/frontend/src/pages/SettingsPage/pages/StoreApiKeyPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useContext",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "useParams"
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/constants/constants",
              "items": [
                "CONTROL_PATCH_USER_STATE"
              ]
            },
            {
              "source": "@/contexts/authContext",
              "items": [
                "AuthContext"
              ]
            },
            {
              "source": "@/controllers/API/queries/api-keys",
              "items": [
                "usePostAddApiKey"
              ]
            },
            {
              "source": "@/stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "@/stores/storeStore",
              "items": [
                "useStoreStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../hooks/use-scroll-to-element",
              "items": [
                "useScrollToElement"
              ]
            },
            {
              "source": "./components/StoreApiKeyForm",
              "items": [
                "StoreApiKeyFormComponent"
              ]
            }
          ]
        },
        "propDefinitions": {
          "target": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "inputState": {
            "type": "any",
            "defaultValue": "CONTROL_PATCH_USER_STATE"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useParams",
          "useStoreStore",
          "useAlertStore",
          "usePostAddApiKey"
        ],
        "eventHandlers": {
          "handleSaveKey": {
            "type": "arrow_function",
            "async": false
          },
          "handleInput": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "ForwardedIconComponent",
            "StoreApiKeyFormComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "StoreApiKeyPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/StoreApiKeyPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col gap-6"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full items-start gap-6"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full flex-col"
              },
              "category": "html"
            },
            {
              "type": "h",
              "attributes": {
                "className": "flex items-center text-lg font-semibold tracking-tight"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "ml-2 h-5 w-5 text-primary"
              },
              "category": "component"
            },
            {
              "type": "p",
              "attributes": {
                "className": "text-sm text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "StoreApiKeyFormComponent",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "StoreApiKeyFormComponent",
            "ForwardedIconComponent"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "ForwardedIconComponent",
            "StoreApiKeyFormComponent"
          ],
          "html": [
            "div",
            "p",
            "h2"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "gap-6",
            "w-full",
            "flex-col",
            "text-primary",
            "flex",
            "ml-2",
            "h-full",
            "items-start",
            "text-lg",
            "tracking-tight",
            "text-sm",
            "text-muted-foreground",
            "h-5",
            "w-5",
            "font-semibold",
            "items-center"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "StoreApiKeyPage",
        "file_path": "src/frontend/src/pages/SettingsPage/pages/StoreApiKeyPage/index.tsx",
        "component_type": "page",
        "summary": "StoreApiKey page component",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col gap-6\">\n      <div className=\"flex w-full items-start gap-6\">\n        <div className=\"flex w-full flex-col\">\n          <h2 className=\"flex items-center text-lg font-semibold tracking-tight\">\n            Langbuilder Store\n            <ForwardedIconComponent\n              name=\"Store\"\n              className=\"ml-2 h-5 w-5 text-primary\"\n            />\n          </h2>\n          <p className=\"text-sm text-muted-foreground\">\n            Manage access to the Langbuilder Store.\n          </p>\n        </div>\n      </div>\n      <StoreApiKeyFormComponent\n        apikey={inputState.apikey}\n        handleInput={handleInput}\n        handleSaveKey={handleSaveKey}\n        loadingApiKey={loadingApiKey}\n        validApiKey={validApiKey}\n        hasApiKey={hasApiKey}\n      />\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col gap-6\">\n      <div className=\"flex w-full items-start gap-6\">\n        <div className=\"flex w-full flex-col\">\n          <h2 className=\"flex items-center text-lg font-semibold tracking-tight\">\n            Langbuilder Store\n            <ForwardedIconComponent\n              name=\"Store\"\n              className=\"ml-2 h-5 w-5 text-primary\"\n            />\n          </h2>\n          <p className=\"text-sm text-muted-foreground\">\n            Manage access to the Langbuilder Store.\n          </p>\n        </div>\n      </div>\n      <StoreApiKeyFormComponent\n        apikey={inputState.apikey}\n        handleInput={handleInput}\n        handleSaveKey={handleSaveKey}\n        loadingApiKey={loadingApiKey}\n        validApiKey={validApiKey}\n        hasApiKey={hasApiKey}\n      />\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useContext",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "useParams"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/constants/constants",
            "items": [
              "CONTROL_PATCH_USER_STATE"
            ],
            "type": "named"
          },
          {
            "source": "@/contexts/authContext",
            "items": [
              "AuthContext"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/api-keys",
            "items": [
              "usePostAddApiKey"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/storeStore",
            "items": [
              "useStoreStore"
            ],
            "type": "named"
          },
          {
            "source": "../hooks/use-scroll-to-element",
            "items": [
              "useScrollToElement"
            ],
            "type": "default"
          },
          {
            "source": "./components/StoreApiKeyForm",
            "items": [
              "StoreApiKeyFormComponent"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "ForwardedIconComponent",
          "StoreApiKeyFormComponent"
        ],
        "tailwind_classes_used": [
          "flex",
          "flex-col",
          "font-semibold",
          "gap-6",
          "h-5",
          "h-full",
          "items-center",
          "items-start",
          "ml-2",
          "text-lg",
          "text-muted-foreground",
          "text-primary",
          "text-sm",
          "tracking-tight",
          "w-5",
          "w-full"
        ],
        "state_props_referenced": [
          "handleInput",
          "handleSaveKey",
          "hasApiKey",
          "loadingApiKey",
          "validApiKey"
        ],
        "file_size_lines": 88,
        "jsx_size_chars": 822
      }
    },
    {
      "id": "ni0020",
      "type": "interface",
      "name": "StorePage",
      "description": "Interface page: StorePage",
      "route": "",
      "path": "src/frontend/src/pages/StorePage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "StorePage",
        "path": "src/frontend/src/pages/StorePage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useContext",
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "lodash",
              "items": [
                "uniqueId"
              ]
            },
            {
              "source": "react-router-dom",
              "items": [
                "useParams"
              ]
            },
            {
              "source": "@/components/common/paginatorComponent",
              "items": [
                "PaginatorComponent"
              ]
            },
            {
              "source": "@/components/common/storeCardComponent",
              "items": [
                "StoreCardComponent"
              ]
            },
            {
              "source": "@/customization/components/custom-link",
              "items": [
                "CustomLink"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-navigate",
              "items": [
                "useCustomNavigate"
              ]
            },
            {
              "source": "@/stores/utilityStore",
              "items": [
                "useUtilityStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/common/pageLayout",
              "items": [
                "PageLayout"
              ]
            },
            {
              "source": "../../components/common/shadTooltipComponent",
              "items": [
                "ShadTooltip"
              ]
            },
            {
              "source": "../../components/common/skeletonCardComponent",
              "items": [
                "SkeletonCardComponent"
              ]
            },
            {
              "source": "../../components/common/tagsSelectorComponent",
              "items": [
                "TagsSelector"
              ]
            },
            {
              "source": "../../components/ui/badge",
              "items": [
                "Badge"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/select",
              "items": [
                "Select",
                "SelectContent",
                "SelectGroup",
                "SelectItem",
                "SelectTrigger",
                "SelectValue",
                ""
              ]
            },
            {
              "source": "../../constants/alerts_constants",
              "items": [
                "APIKEY_ERROR_ALERT",
                "COMPONENTS_ERROR_ALERT",
                "INVALID_API_ERROR_ALERT",
                "NOAPI_ERROR_ALERT",
                ""
              ]
            },
            {
              "source": "../../constants/constants",
              "items": [
                "STORE_DESC",
                "STORE_PAGINATION_PAGE",
                "STORE_PAGINATION_ROWS_COUNT",
                "STORE_PAGINATION_SIZE",
                "STORE_TITLE",
                ""
              ]
            },
            {
              "source": "../../contexts/authContext",
              "items": [
                "AuthContext"
              ]
            },
            {
              "source": "../../controllers/API",
              "items": [
                "getStoreComponents"
              ]
            },
            {
              "source": "../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "../../stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "../../stores/storeStore",
              "items": [
                "useStoreStore"
              ]
            },
            {
              "source": "../../utils/utils",
              "items": [
                "cn"
              ]
            },
            {
              "source": "../MainPage/components/inputSearchComponent",
              "items": [
                "InputSearchComponent"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "loading": {
            "type": "any",
            "defaultValue": "true"
          },
          "filteredCategories": {
            "type": "any[]",
            "defaultValue": "[]"
          },
          "inputText": {
            "type": "string",
            "defaultValue": "\"\""
          },
          "searchData": {
            "type": "storeComponent[]",
            "defaultValue": "[]"
          },
          "totalRowsCount": {
            "type": "any",
            "defaultValue": "0"
          },
          "pageSize": {
            "type": "any",
            "defaultValue": "STORE_PAGINATION_SIZE"
          },
          "pageIndex": {
            "type": "any",
            "defaultValue": "STORE_PAGINATION_PAGE"
          },
          "pageOrder": {
            "type": "any",
            "defaultValue": "\"Popular\""
          },
          "tabActive": {
            "type": "any",
            "defaultValue": "\"All\""
          },
          "searchNow": {
            "type": "any",
            "defaultValue": "\"\""
          },
          "selectFilter": {
            "type": "any",
            "defaultValue": "\"all\""
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "tabActive",
              "pageOrder",
              "pageIndex",
              "pageSize",
              "filteredCategories",
              "selectFilter",
              "validApiKey",
              "hasApiKey",
              "apiKey",
              "searchNow",
              "loadingApiKey",
              "id"
            ],
            "description": "Effect with 12 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useAlertStore",
          "useStoreStore",
          "useUtilityStore",
          "useCustomNavigate",
          "useParams",
          "useFlowsManagerStore"
        ],
        "eventHandlers": {
          "handleGetComponents": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "PageLayout",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "SelectItem",
            "InputSearchComponent",
            "IconComponent",
            "Select",
            "TagsSelector",
            "Badge",
            "CustomLink",
            "SelectTrigger",
            "ShadTooltip",
            "PaginatorComponent",
            "SelectGroup",
            "PageLayout",
            "SkeletonCardComponent",
            "Button",
            "SelectContent",
            "SelectValue",
            "StoreCardComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "StorePage",
        "file_path": "src/frontend/src/pages/StorePage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "PageLayout",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "mr-2 w-4"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col justify-between"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full flex-col gap-4 p-0"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-end gap-4"
              },
              "category": "html"
            },
            {
              "type": "InputSearchComponent",
              "attributes": {
                "value": "inputText"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "ml-4 flex w-full gap-2 border-b border-border"
              },
              "category": "html"
            },
            {
              "type": "button",
              "attributes": {
                "disabled": true
              },
              "category": "html"
            },
            {
              "type": "button",
              "attributes": {
                "disabled": true
              },
              "category": "html"
            },
            {
              "type": "button",
              "attributes": {
                "disabled": true
              },
              "category": "html"
            },
            {
              "type": "ShadTooltip",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "button",
              "attributes": {
                "className": "cursor-not-allowed p-3 text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "Select",
              "attributes": {
                "onValueChange": "setSelectFilter",
                "value": "selectFilter",
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "SelectTrigger",
              "attributes": {
                "className": "mr-4 w-[160px] flex-shrink-0"
              },
              "category": "component"
            },
            {
              "type": "SelectValue",
              "attributes": {
                "placeholder": "Filter Values"
              },
              "category": "component"
            },
            {
              "type": "SelectContent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SelectGroup",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SelectItem",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SelectItem",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "SelectItem",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "TagsSelector",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "Badge",
              "attributes": {
                "className": "gap-2 bg-beta-foreground text-background hover:bg-beta-foreground"
              },
              "category": "component"
            },
            {
              "type": "CustomLink",
              "attributes": {
                "className": "cursor-pointer"
              },
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-4 w-4"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-end justify-between"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "px-0.5 text-sm text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "Select",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "SelectTrigger",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SelectValue",
              "attributes": {
                "placeholder": "Popular"
              },
              "category": "component"
            },
            {
              "type": "SelectContent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SelectItem",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SelectItem",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SelectItem",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "grid w-full gap-4 md:grid-cols-2 lg:grid-cols-3"
              },
              "category": "html"
            },
            {
              "type": "StoreCardComponent",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            }
          ],
          "components": [
            "TagsSelector",
            "Select",
            "StoreCardComponent",
            "SelectContent",
            "Badge",
            "SelectValue",
            "ShadTooltip",
            "SelectGroup",
            "CustomLink",
            "InputSearchComponent",
            "SelectItem",
            "PageLayout",
            "SelectTrigger",
            "IconComponent"
          ],
          "ui_patterns": [
            {
              "type": "list",
              "description": "Dynamic list rendering with map"
            },
            {
              "type": "grid",
              "description": "Grid layout structure"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "card",
              "description": "Card-based layout"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            },
            {
              "type": "button_group",
              "description": "Multiple buttons for actions"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Select",
            "SelectTrigger",
            "SelectValue",
            "SelectContent",
            "SelectItem",
            "Badge"
          ],
          "custom": [
            "PageLayout",
            "IconComponent",
            "InputSearchComponent",
            "ShadTooltip",
            "SelectGroup",
            "TagsSelector",
            "CustomLink",
            "StoreCardComponent",
            "SkeletonCardComponent",
            "PaginatorComponent"
          ],
          "html": [
            "div",
            "span",
            "button"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "lg:grid-cols-3",
            "border-b",
            "===",
            "text-muted-foreground",
            "gap-4",
            "(tabActive",
            "w-[160px]",
            "w-full",
            "flex-col",
            "flex-shrink-0",
            "px-0.5",
            "gap-2",
            "justify-center",
            "text-center",
            "justify-between",
            "hover:bg-beta-foreground",
            "items-center",
            "py-6",
            "ml-4",
            "w-4",
            "items-end",
            "border-border",
            "p-0",
            "mr-2",
            "mt-6",
            "h-4",
            "text-background",
            "cursor-pointer",
            "flex",
            "md:grid-cols-2",
            "text-sm",
            "h-full",
            "relative",
            "grid",
            "mr-4",
            "bg-beta-foreground",
            "p-3",
            "cursor-not-allowed"
          ],
          "layout_patterns": [
            "flexbox",
            "grid"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "disabled": true
              },
              "type": "button"
            },
            {
              "attributes": {
                "disabled": true
              },
              "type": "button"
            },
            {
              "attributes": {
                "disabled": true
              },
              "type": "button"
            },
            {
              "attributes": {
                "disabled": true
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "cursor-not-allowed p-3 text-muted-foreground"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "dynamic_list",
            "arrays": [
              "searchData"
            ],
            "description": "Dynamic rendering of 1 lists"
          }
        ],
        "primary_layout": "grid"
      },
      "ui_uidl_complete": {
        "component_name": "StorePage",
        "file_path": "src/frontend/src/pages/StorePage/index.tsx",
        "component_type": "page",
        "summary": "Store page component",
        "jsx_return_statement": "<PageLayout\n      betaIcon\n      title={STORE_TITLE}\n      description={STORE_DESC}\n      button={\n        <Button\n          data-testid=\"api-key-button-store\"\n          disabled={loading}\n          className={cn(\n            `${!validApiKey ? \"animate-pulse border-error\" : \"\"}`,\n            loading ? \"cursor-not-allowed\" : \"\",\n          )}\n          variant=\"primary\"\n          onClick={() => {\n            navigate(\"/settings/general/api\");\n          }}\n        >\n          <IconComponent name=\"Key\" className=\"mr-2 w-4\" />\n          API Key\n        </Button>\n      }\n    >\n      <div className=\"flex h-full w-full flex-col justify-between\">\n        <div className=\"flex w-full flex-col gap-4 p-0\">\n          <div className=\"flex items-end gap-4\">\n            <InputSearchComponent\n              loading={loading}\n              divClasses=\"relative h-12 w-[40%]\"\n              value={inputText}\n              onChange={(e) => setInputText(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                  setSearchNow(uniqueId());\n                }\n              }}\n              onClick={() => {\n                setSearchNow(uniqueId());\n              }}\n            />\n            <div className=\"ml-4 flex w-full gap-2 border-b border-border\">\n              <button\n                data-testid=\"all-button-store\"\n                disabled={loading}\n                onClick={() => {\n                  setTabActive(\"All\");\n                }}\n                className={\n                  (tabActive === \"All\"\n                    ? \"border-b-2 border-primary p-3\"\n                    : \"border-b-2 border-transparent p-3 text-muted-foreground hover:text-primary\") +\n                  (loading ? \" cursor-not-allowed\" : \"\")\n                }\n              >\n                All\n              </button>\n              <button\n                data-testid=\"flows-button-store\"\n                disabled={loading}\n                onClick={() => {\n                  resetPagination();\n                  setTabActive(\"Flows\");\n                }}\n                className={\n                  (tabActive === \"Flows\"\n                    ? \"border-b-2 border-primary p-3\"\n                    : \"border-b-2 border-transparent p-3 text-muted-foreground hover:text-primary\") +\n                  (loading ? \" cursor-not-allowed\" : \"\")\n                }\n              >\n                Flows\n              </button>\n              <button\n                data-testid=\"components-button-store\"\n                disabled={loading}\n                onClick={() => {\n                  resetPagination();\n                  setTabActive(\"Components\");\n                }}\n                className={\n                  (tabActive === \"Components\"\n                    ? \"border-b-2 border-primary p-3\"\n                    : \"border-b-2 border-transparent p-3 text-muted-foreground hover:text-primary\") +\n                  (loading ? \" cursor-not-allowed\" : \"\")\n                }\n              >\n                Components\n              </button>\n              <ShadTooltip content=\"Coming Soon\">\n                <button className=\"cursor-not-allowed p-3 text-muted-foreground\">\n                  Bundles\n                </button>\n              </ShadTooltip>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <Select\n              disabled={loading}\n              onValueChange={setSelectFilter}\n              value={selectFilter}\n            >\n              <SelectTrigger className=\"mr-4 w-[160px] flex-shrink-0\">\n                <SelectValue placeholder=\"Filter Values\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectGroup>\n                  <SelectItem value=\"all\">All</SelectItem>\n                  <SelectItem\n                    disabled={!hasApiKey || !validApiKey}\n                    value=\"createdbyme\"\n                  >\n                    Created By Me\n                  </SelectItem>\n                  <SelectItem\n                    disabled={!hasApiKey || !validApiKey}\n                    value=\"likedbyme\"\n                  >\n                    Liked By Me\n                  </SelectItem>\n                </SelectGroup>\n              </SelectContent>\n            </Select>\n            {id === undefined ? (\n              <TagsSelector\n                tags={tags ?? []}\n                loadingTags={false}\n                disabled={loading}\n                selectedTags={filteredCategories}\n                setSelectedTags={setFilterCategories}\n              />\n            ) : (\n              <Badge\n                key=\"id\"\n                variant=\"outline\"\n                size=\"sq\"\n                className=\"gap-2 bg-beta-foreground text-background hover:bg-beta-foreground\"\n              >\n                <CustomLink to={\"/store\"} className=\"cursor-pointer\">\n                  <IconComponent name=\"X\" className=\"h-4 w-4\" />\n                </CustomLink>\n                {id}\n              </Badge>\n            )}\n          </div>\n          <div className=\"flex items-end justify-between\">\n            <span className=\"px-0.5 text-sm text-muted-foreground\">\n              {(!loading || searchData.length !== 0) && (\n                <>\n                  {totalRowsCount} {totalRowsCount !== 1 ? \"results\" : \"result\"}\n                </>\n              )}\n            </span>\n\n            <Select\n              disabled={loading}\n              onValueChange={(e) => {\n                setPageOrder(e);\n              }}\n            >\n              <SelectTrigger data-testid=\"select-order-store\">\n                <SelectValue placeholder=\"Popular\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"Popular\">Popular</SelectItem>\n                {/* <SelectItem value=\"Recent\">Most Recent</SelectItem> */}\n                <SelectItem value=\"Alphabetical\">Alphabetical</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"grid w-full gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {!loading || searchData.length !== 0 ? (\n              searchData.map((item) => {\n                return (\n                  <>\n                    <StoreCardComponent\n                      key={item.id}\n                      data={item}\n                      authorized={validApiKey}\n                      disabled={loading}\n                    />\n                  </>",
        "jsx_simplified": "<PageLayout\n      betaIcon\n      title={STORE_TITLE}\n      description={STORE_DESC}\n      button={\n        <Button\n          data-testid=\"api-key-button-store\"\n          disabled={loading}\n          className={cn(\n            `${!validApiKey ? \"animate-pulse border-error\" : \"\"}`,\n            loading ? \"cursor-not-allowed\" : \"\",\n          )}\n          variant=\"primary\"\n          onClick={handleClick}\n        >\n          <IconComponent name=\"Key\" className=\"mr-2 w-4\" />\n          API Key\n        </Button>\n      }\n    >\n      <div className=\"flex h-full w-full flex-col justify-between\">\n        <div className=\"flex w-full flex-col gap-4 p-0\">\n          <div className=\"flex items-end gap-4\">\n            <InputSearchComponent\n              loading={loading}\n              divClasses=\"relative h-12 w-[40%]\"\n              value={inputText}\n              onChange={(e) => setInputText(e.target.value)}\n              onKeyDown={/* complex expression */}\n              }}\n              onClick={handleClick}\n            />\n            <div className=\"ml-4 flex w-full gap-2 border-b border-border\">\n              <button\n                data-testid=\"all-button-store\"\n                disabled={loading}\n                onClick={handleClick}\n                className={/* complex expression */}\n              >\n                All\n              </button>\n              <button\n                data-testid=\"flows-button-store\"\n                disabled={loading}\n                onClick={handleClick}\n                className={/* complex expression */}\n              >\n                Flows\n              </button>\n              <button\n                data-testid=\"components-button-store\"\n                disabled={loading}\n                onClick={handleClick}\n                className={/* complex expression */}\n              >\n                Components\n              </button>\n              <ShadTooltip content=\"Coming Soon\">\n                <button className=\"cursor-not-allowed p-3 text-muted-foreground\">\n                  Bundles\n                </button>\n              </ShadTooltip>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <Select\n              disabled={loading}\n              onValueChange={setSelectFilter}\n              value={selectFilter}\n            >\n              <SelectTrigger className=\"mr-4 w-[160px] flex-shrink-0\">\n                <SelectValue placeholder=\"Filter Values\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectGroup>\n                  <SelectItem value=\"all\">All</SelectItem>\n                  <SelectItem\n                    disabled={!hasApiKey || !validApiKey}\n                    value=\"createdbyme\"\n                  >\n                    Created By Me\n                  </SelectItem>\n                  <SelectItem\n                    disabled={!hasApiKey || !validApiKey}\n                    value=\"likedbyme\"\n                  >\n                    Liked By Me\n                  </SelectItem>\n                </SelectGroup>\n              </SelectContent>\n            </Select>\n            {id === undefined ? (\n              <TagsSelector\n                tags={tags ?? []}\n                loadingTags={false}\n                disabled={loading}\n                selectedTags={filteredCategories}\n                setSelectedTags={setFilterCategories}\n              />\n            ) : (\n              <Badge\n                key=\"id\"\n                variant=\"outline\"\n                size=\"sq\"\n                className=\"gap-2 bg-beta-foreground text-background hover:bg-beta-foreground\"\n              >\n                <CustomLink to={\"/store\"} className=\"cursor-pointer\">\n                  <IconComponent name=\"X\" className=\"h-4 w-4\" />\n                </CustomLink>\n                {id}\n              </Badge>\n            )}\n          </div>\n          <div className=\"flex items-end justify-between\">\n            <span className=\"px-0.5 text-sm text-muted-foreground\">\n              {(!loading || searchData.length !== 0) && (\n                <>\n                  {totalRowsCount} {totalRowsCount !== 1 ? \"results\" : \"result\"}\n                </>\n              )}\n            </span>\n\n            <Select\n              disabled={loading}\n              onValueChange={handleClick}\n            >\n              <SelectTrigger data-testid=\"select-order-store\">\n                <SelectValue placeholder=\"Popular\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"Popular\">Popular</SelectItem>\n                {/* <SelectItem value=\"Recent\">Most Recent</SelectItem> */}\n                <SelectItem value=\"Alphabetical\">Alphabetical</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"grid w-full gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {/* complex expression */}\n                      data={item}\n                      authorized={validApiKey}\n  ",
        "imports": [
          {
            "source": "lodash",
            "items": [
              "uniqueId"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useContext",
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "useParams"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/paginatorComponent",
            "items": [
              "PaginatorComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/common/storeCardComponent",
            "items": [
              "StoreCardComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/customization/components/custom-link",
            "items": [
              "CustomLink"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-navigate",
            "items": [
              "useCustomNavigate"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/utilityStore",
            "items": [
              "useUtilityStore"
            ],
            "type": "named"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/pageLayout",
            "items": [
              "PageLayout"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/shadTooltipComponent",
            "items": [
              "ShadTooltip"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/skeletonCardComponent",
            "items": [
              "SkeletonCardComponent"
            ],
            "type": "named"
          },
          {
            "source": "../../components/common/tagsSelectorComponent",
            "items": [
              "TagsSelector"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/badge",
            "items": [
              "Badge"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/select",
            "items": [
              "Select",
              "SelectContent",
              "SelectGroup",
              "SelectItem",
              "SelectTrigger",
              "SelectValue",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../constants/alerts_constants",
            "items": [
              "APIKEY_ERROR_ALERT",
              "COMPONENTS_ERROR_ALERT",
              "INVALID_API_ERROR_ALERT",
              "NOAPI_ERROR_ALERT",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../constants/constants",
            "items": [
              "STORE_DESC",
              "STORE_PAGINATION_PAGE",
              "STORE_PAGINATION_ROWS_COUNT",
              "STORE_PAGINATION_SIZE",
              "STORE_TITLE",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../contexts/authContext",
            "items": [
              "AuthContext"
            ],
            "type": "named"
          },
          {
            "source": "../../controllers/API",
            "items": [
              "getStoreComponents"
            ],
            "type": "named"
          },
          {
            "source": "../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/storeStore",
            "items": [
              "useStoreStore"
            ],
            "type": "named"
          },
          {
            "source": "../../utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          },
          {
            "source": "../MainPage/components/inputSearchComponent",
            "items": [
              "InputSearchComponent"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Badge",
          "Button",
          "CustomLink",
          "IconComponent",
          "InputSearchComponent",
          "PageLayout",
          "Select",
          "SelectContent",
          "SelectGroup",
          "SelectItem",
          "SelectTrigger",
          "SelectValue",
          "ShadTooltip",
          "StoreCardComponent",
          "TagsSelector"
        ],
        "tailwind_classes_used": [
          "(tabActive",
          "===",
          "bg-beta-foreground",
          "border-b",
          "border-border",
          "cursor-not-allowed",
          "cursor-pointer",
          "flex",
          "flex-col",
          "flex-shrink-0",
          "gap-2",
          "gap-4",
          "grid",
          "h-4",
          "h-full",
          "hover:bg-beta-foreground",
          "items-center",
          "items-end",
          "justify-between",
          "lg:grid-cols-3",
          "md:grid-cols-2",
          "ml-4",
          "mr-2",
          "mr-4",
          "p-0",
          "p-3",
          "px-0.5",
          "text-background",
          "text-muted-foreground",
          "text-sm",
          "w-4",
          "w-[160px]",
          "w-full"
        ],
        "state_props_referenced": [
          "STORE_DESC",
          "STORE_TITLE",
          "false",
          "filteredCategories",
          "id",
          "inputText",
          "item",
          "loading",
          "selectFilter",
          "setFilterCategories",
          "setSelectFilter",
          "totalRowsCount",
          "validApiKey"
        ],
        "file_size_lines": 399,
        "jsx_size_chars": 6487
      }
    },
    {
      "id": "ni0021",
      "type": "interface",
      "name": "ViewPage",
      "description": "Interface page: ViewPage",
      "route": "view",
      "path": "src/frontend/src/pages/ViewPage/index.tsx",
      "uidl_definition_conceptual": {
        "name": "ViewPage",
        "path": "src/frontend/src/pages/ViewPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect"
              ]
            }
          ],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "useParams"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-navigate",
              "items": [
                "useCustomNavigate"
              ]
            }
          ],
          "local": [
            {
              "source": "../../stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "../FlowPage/components/PageComponent",
              "items": [
                "Page"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useParams",
          "useFlowsManagerStore",
          "useCustomNavigate"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Page"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "ViewPage",
        "file_path": "src/frontend/src/pages/ViewPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flow-page-positioning"
              },
              "category": "html"
            },
            {
              "type": "Page",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "Page"
          ],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "Page"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "flow-page-positioning"
          ],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "ViewPage",
        "file_path": "src/frontend/src/pages/ViewPage/index.tsx",
        "component_type": "page",
        "summary": "Set flow tab id",
        "jsx_return_statement": "<div className=\"flow-page-positioning\">\n      <Page view />\n    </div>",
        "jsx_simplified": "<div className=\"flow-page-positioning\">\n      <Page view />\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "useParams"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-navigate",
            "items": [
              "useCustomNavigate"
            ],
            "type": "named"
          },
          {
            "source": "../../stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "../FlowPage/components/PageComponent",
            "items": [
              "Page"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Page"
        ],
        "tailwind_classes_used": [
          "flow-page-positioning"
        ],
        "state_props_referenced": [],
        "file_size_lines": 38,
        "jsx_size_chars": 70
      }
    },
    {
      "id": "ni0022",
      "type": "interface",
      "name": "CustomRoutesStorePages",
      "path": "frontend/src/customization/utils/custom-routes-store-pages.tsx",
      "category": "page",
      "description": "interface node: CustomRoutesStorePages (Page component)",
      "uidl_definition_conceptual": {
        "name": "CustomRoutesStorePages",
        "path": "frontend/src/customization/utils/custom-routes-store-pages.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "Route"
              ]
            },
            {
              "source": "@/components/authorization/storeGuard",
              "items": [
                "StoreGuard"
              ]
            },
            {
              "source": "@/pages/SettingsPage/pages/StoreApiKeyPage",
              "items": [
                "StoreApiKeyPage"
              ]
            },
            {
              "source": "@/pages/StorePage",
              "items": [
                "StorePage"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": null,
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Route",
            "StoreGuard",
            "StorePage"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "CustomRoutesStorePages",
        "file_path": "frontend/src/customization/utils/custom-routes-store-pages.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "Route",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "StorePage",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Route",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "StorePage",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "Route",
            "StorePage"
          ],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "Route",
            "StoreGuard",
            "StorePage"
          ],
          "html": []
        },
        "styling": {
          "tailwind_classes": [],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "CustomRoutesStorePages",
        "file_path": "frontend/src/customization/utils/custom-routes-store-pages.tsx",
        "component_type": "page",
        "summary": "CustomRoutesStores page component",
        "jsx_return_statement": "<>\n      <Route\n        path=\"store\"\n        element={\n          <StoreGuard>\n            <StorePage />\n          </StoreGuard>\n        }\n      />\n      <Route\n        path=\"store/:id/\"\n        element={\n          <StoreGuard>\n            <StorePage />\n          </StoreGuard>\n        }\n      />\n    </>",
        "jsx_simplified": "<>\n      <Route\n        path=\"store\"\n        element={\n          <StoreGuard>\n            <StorePage />\n          </StoreGuard>\n        }\n      />\n      <Route\n        path=\"store/:id/\"\n        element={\n          <StoreGuard>\n            <StorePage />\n          </StoreGuard>\n        }\n      />\n    </>",
        "imports": [
          {
            "source": "react-router-dom",
            "items": [
              "Route"
            ],
            "type": "named"
          },
          {
            "source": "@/components/authorization/storeGuard",
            "items": [
              "StoreGuard"
            ],
            "type": "named"
          },
          {
            "source": "@/pages/SettingsPage/pages/StoreApiKeyPage",
            "items": [
              "StoreApiKeyPage"
            ],
            "type": "default"
          },
          {
            "source": "@/pages/StorePage",
            "items": [
              "StorePage"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Route",
          "StoreGuard",
          "StorePage"
        ],
        "tailwind_classes_used": [],
        "state_props_referenced": [],
        "file_size_lines": 29,
        "jsx_size_chars": 303
      }
    },
    {
      "id": "ni0024",
      "type": "interface",
      "name": "ProfilePictureChooserComponent",
      "path": "frontend/src/pages/SettingsPage/pages/GeneralPage/components/ProfilePictureForm/components/profilePictureChooserComponent/index.tsx",
      "category": "page",
      "description": "interface node: ProfilePictureChooserComponent (Page component)",
      "uidl_definition_conceptual": {
        "name": "ProfilePictureChooserComponent",
        "path": "frontend/src/pages/SettingsPage/pages/GeneralPage/components/ProfilePictureForm/components/profilePictureChooserComponent/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/customization/utils/custom-pre-load-image-url",
              "items": [
                "customPreLoadImageUrl"
              ]
            }
          ],
          "local": [
            {
              "source": "../../../../../../../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../../../../../../../components/ui/loading",
              "items": [
                "Loading"
              ]
            },
            {
              "source": "../../../../../../../../stores/darkStore",
              "items": [
                "useDarkStore"
              ]
            },
            {
              "source": "../../../../../../../../utils/utils",
              "items": [
                "cn"
              ]
            },
            {
              "source": "./hooks/use-preload-images",
              "items": [
                "usePreloadImages"
              ]
            }
          ]
        },
        "propDefinitions": {
          "profilePictures": {
            "type": "any",
            "optional": false
          },
          "loading": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          },
          "onChange": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "imagesLoaded": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {
          "ref": {
            "type": "HTMLButtonElement",
            "initialValue": "null"
          }
        },
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useDarkStore"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "Loading",
            "HTMLButtonElement"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "ProfilePictureChooserComponent",
        "file_path": "frontend/src/pages/SettingsPage/pages/GeneralPage/components/ProfilePictureForm/components/profilePictureChooserComponent/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col justify-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "Loading",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "edit-flow-arrangement"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "font-normal"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "block overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center gap-1 overflow-x-auto rounded-lg bg-muted px-1 custom-scroll"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "img",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            }
          ],
          "components": [
            "Loading",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "list",
              "description": "Dynamic list rendering with map"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "HTMLButtonElement",
            "Loading"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "overflow-x-auto",
            "edit-flow-arrangement",
            "py-2",
            "rounded-lg",
            "overflow-hidden",
            "flex-col",
            "px-0.5",
            "gap-2",
            "justify-center",
            "block",
            "gap-1",
            "custom-scroll",
            "items-center",
            "font-normal",
            "shrink-0",
            "bg-muted",
            "cn(",
            "flex",
            "px-1"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "ProfilePictureChooserComponent",
        "file_path": "frontend/src/pages/SettingsPage/pages/GeneralPage/components/ProfilePictureForm/components/profilePictureChooserComponent/index.tsx",
        "component_type": "component",
        "summary": "ProfilePictureChooser UI component",
        "jsx_return_statement": "<div className=\"flex flex-col justify-center gap-2\">\n      {loading || !imagesLoaded ? (\n        <Loading />\n      ) : (\n        Object.keys(profilePictures!).map((folder, index) => (\n          <div className=\"flex flex-col gap-2\" key={index}>\n            <div className=\"edit-flow-arrangement\">\n              <span className=\"font-normal\">{folder}</span>\n            </div>\n            <div className=\"block overflow-hidden\">\n              <div className=\"flex items-center gap-1 overflow-x-auto rounded-lg bg-muted px-1 custom-scroll\">\n                {profilePictures![folder].map((path, idx) => (\n                  <Button\n                    key={idx}\n                    ref={value === folder + \"/\" + path ? ref : undefined}\n                    unstyled\n                    onClick={() => onChange(folder + \"/\" + path)}\n                    className=\"shrink-0 px-0.5 py-2\"\n                  >\n                    <img\n                      key={idx}\n                      src={customPreLoadImageUrl(`${folder}/${path}`)}\n                      style={{\n                        filter:\n                          value === folder + \"/\" + path\n                            ? dark\n                              ? \"drop-shadow(0 0 0.3rem rgb(255, 255, 255))\"\n                              : \"drop-shadow(0 0 0.3rem rgb(0, 0, 0))\"\n                            : \"\",\n                      }}\n                      className={cn(\"h-12 w-12\")}\n                    />\n                  </Button>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))\n      )}\n    </div>",
        "jsx_simplified": "<div className=\"flex flex-col justify-center gap-2\">\n      {/* complex expression */}>\n            <div className=\"edit-flow-arrangement\">\n              <span className=\"font-normal\">{folder}</span>\n            </div>\n            <div className=\"block overflow-hidden\">\n              <div className=\"flex items-center gap-1 overflow-x-auto rounded-lg bg-muted px-1 custom-scroll\">\n                {/* complex expression */}\n                    ref={value === folder + \"/\" + path ? ref : undefined}\n                    unstyled\n                    onClick={() => onChange(folder + \"/\" + path)}\n                    className=\"shrink-0 px-0.5 py-2\"\n                  >\n                    <img\n                      key={idx}\n                      src={customPreLoadImageUrl(`${folder}/${path}`)}\n                      style={/* complex expression */}}\n                      className={cn(\"h-12 w-12\")}\n                    />\n                  </Button>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))\n      )}\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/utils/custom-pre-load-image-url",
            "items": [
              "customPreLoadImageUrl"
            ],
            "type": "named"
          },
          {
            "source": "../../../../../../../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../../../../../../../components/ui/loading",
            "items": [
              "Loading"
            ],
            "type": "default"
          },
          {
            "source": "../../../../../../../../stores/darkStore",
            "items": [
              "useDarkStore"
            ],
            "type": "named"
          },
          {
            "source": "../../../../../../../../utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          },
          {
            "source": "./hooks/use-preload-images",
            "items": [
              "usePreloadImages"
            ],
            "type": "default"
          }
        ],
        "props_definition": {
          "name": "ProfilePictureChooserComponentProps",
          "definition": "profilePictures?: ProfilePicturesQueryResponse;\n  loading: boolean;\n  value: string;\n  onChange: (value: string) => void;",
          "type": "type"
        },
        "ui_components_used": [
          "Button",
          "Loading"
        ],
        "tailwind_classes_used": [
          "bg-muted",
          "block",
          "cn(",
          "custom-scroll",
          "edit-flow-arrangement",
          "flex",
          "flex-col",
          "font-normal",
          "gap-1",
          "gap-2",
          "items-center",
          "justify-center",
          "overflow-hidden",
          "overflow-x-auto",
          "px-0.5",
          "px-1",
          "py-2",
          "rounded-lg",
          "shrink-0"
        ],
        "state_props_referenced": [
          "folder",
          "idx",
          "index",
          "path"
        ],
        "file_size_lines": 77,
        "jsx_size_chars": 1596
      }
    },
    {
      "id": "ni0025",
      "type": "interface",
      "name": "EditShortcutButton",
      "path": "frontend/src/pages/SettingsPage/pages/ShortcutsPage/EditShortcutButton/index.tsx",
      "category": "page",
      "description": "interface node: EditShortcutButton (Page component)",
      "uidl_definition_conceptual": {
        "name": "EditShortcutButton",
        "path": "frontend/src/pages/SettingsPage/pages/ShortcutsPage/EditShortcutButton/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/components/common/renderIconComponent/components/renderKey",
              "items": [
                "RenderKey"
              ]
            }
          ],
          "local": [
            {
              "source": "../../../../../components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "../../../../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../../../../modals/baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "../../../../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "../../../../../stores/shortcuts",
              "items": [
                "useShortcutsStore"
              ]
            },
            {
              "source": "../../../../../utils/utils",
              "items": [
                "toCamelCase",
                "toTitleCase"
              ]
            }
          ]
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          },
          "shortcut": {
            "type": "any",
            "optional": false
          },
          "defaultShortcuts": {
            "type": "any",
            "optional": false
          },
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          },
          "disable": {
            "type": "any",
            "optional": false
          },
          "setSelected": {
            "type": "any",
            "optional": false
          },
          "oldKey": {
            "type": "any",
            "optional": false
          },
          "key": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "key": {
            "type": "string | null",
            "defaultValue": "null"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "open",
              "setOpen",
              "key"
            ],
            "description": "Effect with 3 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useAlertStore",
          "useShortcutsStore"
        ],
        "eventHandlers": {
          "onKeyDown": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "BaseModal",
            "ForwardedIconComponent",
            "RenderKey"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "EditShortcutButton",
        "file_path": "frontend/src/pages/SettingsPage/pages/ShortcutsPage/EditShortcutButton/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pr-2"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-6 w-6 pl-1 text-primary"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "align-center flex h-full w-full justify-center gap-4 rounded-md border border-border py-2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center justify-center gap-0.5 text-center text-lg font-bold"
              },
              "category": "html"
            },
            {
              "type": "RenderKey",
              "attributes": {
                "value": "k"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "onClick": "editCombination"
              },
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "mr-5"
              },
              "category": "component"
            }
          ],
          "components": [
            "RenderKey",
            "BaseModal",
            "ForwardedIconComponent",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "list",
              "description": "Dynamic list rendering with map"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "BaseModal",
            "ForwardedIconComponent",
            "RenderKey"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "py-2",
            "gap-4",
            "w-full",
            "align-center",
            "justify-center",
            "text-center",
            "items-center",
            "border-border",
            "text-lg",
            "border",
            "w-6",
            "h-6",
            "gap-0.5",
            "text-primary",
            "flex",
            "rounded-md",
            "h-full",
            "font-bold",
            "pr-2",
            "mr-5",
            "pl-1"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "onClick": "editCombination"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "mr-5"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "dynamic_list",
            "arrays": [
              "defaultShortcuts"
            ],
            "description": "Dynamic rendering of 1 lists"
          }
        ],
        "primary_layout": "list"
      },
      "ui_uidl_complete": {
        "component_name": "EditShortcutButton",
        "file_path": "frontend/src/pages/SettingsPage/pages/ShortcutsPage/EditShortcutButton/index.tsx",
        "component_type": "other",
        "summary": "EditShortcutButton component",
        "jsx_return_statement": ") => {\n      document.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [key, setKey]);\n\n  return (\n    <BaseModal open={open} setOpen={setOpen} size=\"x-small\" disable={disable}>\n      <BaseModal.Header description={\"Recording your keyboard\"}>\n        <span className=\"pr-2\"> Key Combination </span>\n        <ForwardedIconComponent\n          name=\"Keyboard\"\n          className=\"h-6 w-6 pl-1 text-primary\"\n          aria-hidden=\"true\"\n        />\n      </BaseModal.Header>\n      <BaseModal.Trigger>{children}</BaseModal.Trigger>\n      <BaseModal.Content>\n        <div className=\"align-center flex h-full w-full justify-center gap-4 rounded-md border border-border py-2\">\n          <div className=\"flex items-center justify-center gap-0.5 text-center text-lg font-bold\">\n            {(key ?? shortcutInitialValue ?? \"\").split(\"+\").map((k, i) => (\n              <RenderKey key={i} value={k} tableRender />\n            ))}\n          </div>\n        </div>\n      </BaseModal.Content>\n      <BaseModal.Footer>\n        <Button variant={\"default\"} onClick={editCombination}>\n          Apply\n        </Button>\n        <Button\n          className=\"mr-5\"\n          variant={\"destructive\"}\n          onClick={() => setKey(null)}\n        >\n          Reset\n        </Button>\n      </BaseModal.Footer>\n    </BaseModal>",
        "jsx_simplified": ") => {\n      document.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [key, setKey]);\n\n  return (\n    <BaseModal open={open} setOpen={setOpen} size=\"x-small\" disable={disable}>\n      <BaseModal.Header description={\"Recording your keyboard\"}>\n        <span className=\"pr-2\"> Key Combination </span>\n        <ForwardedIconComponent\n          name=\"Keyboard\"\n          className=\"h-6 w-6 pl-1 text-primary\"\n          aria-hidden=\"true\"\n        />\n      </BaseModal.Header>\n      <BaseModal.Trigger>{children}</BaseModal.Trigger>\n      <BaseModal.Content>\n        <div className=\"align-center flex h-full w-full justify-center gap-4 rounded-md border border-border py-2\">\n          <div className=\"flex items-center justify-center gap-0.5 text-center text-lg font-bold\">\n            {(key ?? shortcutInitialValue ?? \"\").split(\"+\").map((k, i) => (\n              <RenderKey key={i} value={k} tableRender />\n            ))}\n          </div>\n        </div>\n      </BaseModal.Content>\n      <BaseModal.Footer>\n        <Button variant={\"default\"} onClick={editCombination}>\n          Apply\n        </Button>\n        <Button\n          className=\"mr-5\"\n          variant={\"destructive\"}\n          onClick={() => setKey(null)}\n        >\n          Reset\n        </Button>\n      </BaseModal.Footer>\n    </BaseModal>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/renderIconComponent/components/renderKey",
            "items": [
              "RenderKey"
            ],
            "type": "default"
          },
          {
            "source": "../../../../../components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../../../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../../../../modals/baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "../../../../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../../../../stores/shortcuts",
            "items": [
              "useShortcutsStore"
            ],
            "type": "named"
          },
          {
            "source": "../../../../../utils/utils",
            "items": [
              "toCamelCase",
              "toTitleCase"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "Button",
          "ForwardedIconComponent",
          "RenderKey"
        ],
        "tailwind_classes_used": [
          "align-center",
          "border",
          "border-border",
          "flex",
          "font-bold",
          "gap-0.5",
          "gap-4",
          "h-6",
          "h-full",
          "items-center",
          "justify-center",
          "mr-5",
          "pl-1",
          "pr-2",
          "py-2",
          "rounded-md",
          "text-center",
          "text-lg",
          "text-primary",
          "w-6",
          "w-full"
        ],
        "state_props_referenced": [
          "children",
          "disable",
          "editCombination",
          "i",
          "k",
          "open",
          "setOpen"
        ],
        "file_size_lines": 193,
        "jsx_size_chars": 1307
      }
    },
    {
      "id": "ni0026",
      "type": "interface",
      "name": "CellRenderShortcuts",
      "path": "frontend/src/pages/SettingsPage/pages/ShortcutsPage/CellRenderWrapper/index.tsx",
      "category": "page",
      "description": "interface node: CellRenderShortcuts (Page component)",
      "uidl_definition_conceptual": {
        "name": "CellRenderShortcuts",
        "path": "frontend/src/pages/SettingsPage/pages/ShortcutsPage/CellRenderWrapper/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/components/common/renderIconComponent",
              "items": [
                "RenderIcons"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "RenderIcons",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "RenderIcons"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "CellRenderShortcuts",
        "file_path": "frontend/src/pages/SettingsPage/pages/ShortcutsPage/CellRenderWrapper/index.tsx",
        "jsx_structure": {
          "elements": [],
          "components": [],
          "ui_patterns": [
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "RenderIcons"
          ],
          "html": []
        },
        "styling": {
          "tailwind_classes": [],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "CellRenderShortcuts",
        "file_path": "frontend/src/pages/SettingsPage/pages/ShortcutsPage/CellRenderWrapper/index.tsx",
        "component_type": "other",
        "summary": "CellRenderShortcuts component",
        "jsx_return_statement": "// JSX return statement not found",
        "jsx_simplified": "// JSX return statement not found",
        "imports": [
          {
            "source": "@/components/common/renderIconComponent",
            "items": [
              "RenderIcons"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [],
        "tailwind_classes_used": [],
        "state_props_referenced": [],
        "file_size_lines": 8,
        "jsx_size_chars": 33
      }
    },
    {
      "id": "ni0027",
      "type": "interface",
      "name": "MessagesPage",
      "path": "frontend/src/pages/SettingsPage/pages/messagesPage/index.tsx",
      "category": "page",
      "description": "interface node: MessagesPage (Page component)",
      "uidl_definition_conceptual": {
        "name": "MessagesPage",
        "path": "frontend/src/pages/SettingsPage/pages/messagesPage/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/controllers/API/queries/messages",
              "items": [
                "useGetMessagesQuery"
              ]
            },
            {
              "source": "@/modals/IOModal/components/session-view",
              "items": [
                "SessionView"
              ]
            }
          ],
          "local": [
            {
              "source": "./components/headerMessages",
              "items": [
                "HeaderMessagesComponent"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "HeaderMessagesComponent",
            "SessionView"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "MessagesPage",
        "file_path": "frontend/src/pages/SettingsPage/pages/messagesPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col justify-between gap-6"
              },
              "category": "html"
            },
            {
              "type": "HeaderMessagesComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col justify-between"
              },
              "category": "html"
            },
            {
              "type": "SessionView",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "SessionView",
            "HeaderMessagesComponent"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "HeaderMessagesComponent",
            "SessionView"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "gap-6",
            "w-full",
            "flex-col",
            "flex",
            "h-full",
            "justify-between"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "MessagesPage",
        "file_path": "frontend/src/pages/SettingsPage/pages/messagesPage/index.tsx",
        "component_type": "page",
        "summary": "Messages page component",
        "jsx_return_statement": "<div className=\"flex h-full w-full flex-col justify-between gap-6\">\n      <HeaderMessagesComponent />\n      <div className=\"flex h-full w-full flex-col justify-between\">\n        <SessionView />\n      </div>\n    </div>",
        "jsx_simplified": "<div className=\"flex h-full w-full flex-col justify-between gap-6\">\n      <HeaderMessagesComponent />\n      <div className=\"flex h-full w-full flex-col justify-between\">\n        <SessionView />\n      </div>\n    </div>",
        "imports": [
          {
            "source": "@/controllers/API/queries/messages",
            "items": [
              "useGetMessagesQuery"
            ],
            "type": "named"
          },
          {
            "source": "@/modals/IOModal/components/session-view",
            "items": [
              "SessionView"
            ],
            "type": "default"
          },
          {
            "source": "./components/headerMessages",
            "items": [
              "HeaderMessagesComponent"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "HeaderMessagesComponent",
          "SessionView"
        ],
        "tailwind_classes_used": [
          "flex",
          "flex-col",
          "gap-6",
          "h-full",
          "justify-between",
          "w-full"
        ],
        "state_props_referenced": [],
        "file_size_lines": 16,
        "jsx_size_chars": 217
      }
    },
    {
      "id": "ni0028",
      "type": "interface",
      "name": "EmptyPageCommunity",
      "path": "frontend/src/pages/MainPage/pages/empty-page.tsx",
      "category": "page",
      "description": "interface node: EmptyPageCommunity (Page component)",
      "uidl_definition_conceptual": {
        "name": "EmptyPageCommunity",
        "path": "frontend/src/pages/MainPage/pages/empty-page.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "lucide-react",
              "items": [
                "ExternalLink"
              ]
            },
            {
              "source": "react-icons/fa",
              "items": [
                "FaDiscord",
                "FaGithub"
              ]
            },
            {
              "source": "zustand/react/shallow",
              "items": [
                "useShallow"
              ]
            },
            {
              "source": "@/assets/logo_dark.png",
              "items": [
                "logoDarkPng"
              ]
            },
            {
              "source": "@/assets/logo_light.png",
              "items": [
                "logoLightPng"
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/core/cardsWrapComponent",
              "items": [
                "CardsWrapComponent"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/components/ui/dot-background",
              "items": [
                "DotBackgroundDemo"
              ]
            },
            {
              "source": "@/constants/constants",
              "items": [
                "DISCORD_URL",
                "GITHUB_URL"
              ]
            },
            {
              "source": "@/controllers/API/queries/auth",
              "items": [
                "useGetUserData",
                "useUpdateUser"
              ]
            },
            {
              "source": "@/stores/authStore",
              "items": [
                "useAuthStore"
              ]
            },
            {
              "source": "@/stores/darkStore",
              "items": [
                "useDarkStore"
              ]
            },
            {
              "source": "@/stores/foldersStore",
              "items": [
                "useFolderStore"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "formatNumber"
              ]
            }
          ],
          "local": [
            {
              "source": "../hooks/use-on-file-drop",
              "items": [
                "useFileDrop"
              ]
            }
          ]
        },
        "propDefinitions": {
          "setOpenModal": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useFolderStore",
          "useFileDrop",
          "useGetUserData",
          "useUpdateUser",
          "useAuthStore"
        ],
        "eventHandlers": {
          "handleUserTrack": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "DotBackgroundDemo",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "CardsWrapComponent",
            "ForwardedIconComponent",
            "DotBackgroundDemo",
            "Button",
            "FaGithub",
            "ExternalLink"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "EmptyPageCommunity",
        "file_path": "frontend/src/pages/MainPage/pages/empty-page.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "DotBackgroundDemo",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "CardsWrapComponent",
              "attributes": {
                "onFileDrop": "handleFileDrop"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "m-0 h-full w-full bg-background p-0"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "z-50 flex h-full w-full flex-col items-center justify-center gap-5"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "z-50 flex flex-col items-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "z-50 dark:hidden"
              },
              "category": "html"
            },
            {
              "type": "img",
              "attributes": {
                "className": "relative top-3"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "z-50 hidden dark:block"
              },
              "category": "html"
            },
            {
              "type": "img",
              "attributes": {
                "className": "relative top-3"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "z-50 text-center font-chivo text-2xl font-medium text-foreground"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "z-50 text-center text-base text-secondary-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full max-w-[510px] flex-col gap-7 sm:gap-[29px]"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "group mx-3 h-[84px] sm:mx-0"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "relative flex flex-col rounded-lg border-[1px] bg-background p-4 transition-all duration-300 hover:border-accent-pink-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "grid w-full items-center justify-between gap-2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex gap-3"
              },
              "category": "html"
            },
            {
              "type": "FaGithub",
              "attributes": {
                "className": "h-6 w-6"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "font-semibold"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "ml-2 font-mono text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-base text-secondary-foreground"
              },
              "category": "html"
            },
            {
              "type": "ExternalLink",
              "attributes": {
                "className": "EXTERNAL_LINK_ICON_CLASS"
              },
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "z-10 m-auto mt-3 h-10 w-full max-w-[10rem] rounded-lg font-bold transition-all duration-300"
              },
              "category": "component"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-4 w-4"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "p",
              "attributes": {
                "className": "absolute bottom-5 left-0 right-0 mt-4 cursor-default text-center text-xxs text-muted-foreground"
              },
              "category": "html"
            }
          ],
          "components": [
            "DotBackgroundDemo",
            "ExternalLink",
            "FaGithub",
            "CardsWrapComponent",
            "ForwardedIconComponent",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "grid",
              "description": "Grid layout structure"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "card",
              "description": "Card-based layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "DotBackgroundDemo",
            "CardsWrapComponent",
            "FaGithub",
            "ExternalLink",
            "ForwardedIconComponent"
          ],
          "html": [
            "div",
            "span",
            "p"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "sm:mx-0",
            "text-2xl",
            "bg-background",
            "text-secondary-foreground",
            "sm:gap-[29px]",
            "text-muted-foreground",
            "z-50",
            "rounded-lg",
            "absolute",
            "left-0",
            "z-10",
            "hidden",
            "EXTERNAL_LINK_ICON_CLASS",
            "dark:block",
            "bottom-5",
            "w-full",
            "flex-col",
            "cursor-default",
            "h-10",
            "gap-2",
            "p-4",
            "justify-center",
            "mt-3",
            "ml-2",
            "transition-all",
            "text-foreground",
            "max-w-[10rem]",
            "text-center",
            "m-0",
            "gap-5",
            "max-w-[510px]",
            "justify-between",
            "items-center",
            "dark:hidden",
            "text-base",
            "w-4",
            "font-mono",
            "border-[1px]",
            "gap-7",
            "group",
            "p-0",
            "font-chivo",
            "h-6",
            "w-6",
            "hover:border-accent-pink-foreground",
            "h-4",
            "right-0",
            "m-auto",
            "text-xxs",
            "font-medium",
            "flex",
            "mt-4",
            "h-full",
            "relative",
            "font-bold",
            "top-3",
            "mx-3",
            "grid",
            "duration-300",
            "gap-3",
            "font-semibold",
            "h-[84px]"
          ],
          "layout_patterns": [
            "flexbox",
            "grid"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "dark-mode-support",
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "group mx-3 h-[84px] sm:mx-0"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "z-10 m-auto mt-3 h-10 w-full max-w-[10rem] rounded-lg font-bold transition-all duration-300"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "EmptyPageCommunity",
        "file_path": "frontend/src/pages/MainPage/pages/empty-page.tsx",
        "component_type": "page",
        "summary": "EmptyCommunity page component",
        "jsx_return_statement": "<DotBackgroundDemo>\n      <CardsWrapComponent\n        dragMessage={`Drop your flows or components here`}\n        onFileDrop={handleFileDrop}\n      >\n        <div className=\"m-0 h-full w-full bg-background p-0\">\n          <div className=\"z-50 flex h-full w-full flex-col items-center justify-center gap-5\">\n            <div className=\"z-50 flex flex-col items-center gap-2\">\n              <div className=\"z-50 dark:hidden\">\n                <img\n                  src={logoLightPng}\n                  alt=\"Langbuilder Logo Light\"\n                  data-testid=\"empty_page_logo_light\"\n                  className=\"relative top-3\"\n                />\n              </div>\n              <div className=\"z-50 hidden dark:block\">\n                <img\n                  src={logoDarkPng}\n                  alt=\"Langbuilder Logo Dark\"\n                  data-testid=\"empty_page_logo_dark\"\n                  className=\"relative top-3\"\n                />\n              </div>\n              <span\n                data-testid=\"mainpage_title\"\n                className=\"z-50 text-center font-chivo text-2xl font-medium text-foreground\"\n              >\n                {EMPTY_PAGE_TITLE}\n              </span>\n\n              <span\n                data-testid=\"empty_page_description\"\n                className=\"z-50 text-center text-base text-secondary-foreground\"\n              >\n                {folders?.length > 1\n                  ? EMPTY_PAGE_FOLDER_DESCRIPTION\n                  : EMPTY_PAGE_DESCRIPTION}\n              </span>\n            </div>\n\n            <div className=\"flex w-full max-w-[510px] flex-col gap-7 sm:gap-[29px]\">\n              <Button\n                unstyled\n                className=\"group mx-3 h-[84px] sm:mx-0\"\n                onClick={() => {\n                  handleUserTrack(\"github_starred\")();\n                  window.open(GITHUB_URL, \"_blank\", \"noopener,noreferrer\");\n                }}\n                data-testid=\"empty_page_github_button\"\n              >\n                <div className=\"relative flex flex-col rounded-lg border-[1px] bg-background p-4 transition-all duration-300 hover:border-accent-pink-foreground\">\n                  <div className=\"grid w-full items-center justify-between gap-2\">\n                    <div className=\"flex gap-3\">\n                      <FaGithub className=\"h-6 w-6\" />\n                      <div>\n                        <span className=\"font-semibold\">GitHub</span>\n                        <span className=\"ml-2 font-mono text-muted-foreground\">\n                          {formatNumber(stars)}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <span className=\"text-base text-secondary-foreground\">\n                        {EMPTY_PAGE_GITHUB_DESCRIPTION}\n                      </span>\n                    </div>\n                  </div>\n                  <ExternalLink className={EXTERNAL_LINK_ICON_CLASS} />\n                </div>\n              </Button>\n\n              <Button\n                variant=\"default\"\n                className=\"z-10 m-auto mt-3 h-10 w-full max-w-[10rem] rounded-lg font-bold transition-all duration-300\"\n                onClick={() => setOpenModal(true)}\n                id=\"new-project-btn\"\n                data-testid=\"new_project_btn_empty_page\"\n              >\n                <ForwardedIconComponent\n                  name=\"Plus\"\n                  aria-hidden=\"true\"\n                  className=\"h-4 w-4\"\n                />\n                <span>{EMPTY_PAGE_CREATE_FIRST_FLOW_BUTTON_TEXT}</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n        <p\n          data-testid=\"empty_page_drag_and_drop_text\"\n          className=\"absolute bottom-5 left-0 right-0 mt-4 cursor-default text-center text-xxs text-muted-foreground\"\n        >\n          {EMPTY_PAGE_DRAG_AND_DROP_TEXT}\n        </p>\n      </CardsWrapComponent>\n    </DotBackgroundDemo>",
        "jsx_simplified": "<DotBackgroundDemo>\n      <CardsWrapComponent\n        dragMessage={`Drop your flows or components here`}\n        onFileDrop={handleFileDrop}\n      >\n        <div className=\"m-0 h-full w-full bg-background p-0\">\n          <div className=\"z-50 flex h-full w-full flex-col items-center justify-center gap-5\">\n            <div className=\"z-50 flex flex-col items-center gap-2\">\n              <div className=\"z-50 dark:hidden\">\n                <img\n                  src={logoLightPng}\n                  alt=\"Langbuilder Logo Light\"\n                  data-testid=\"empty_page_logo_light\"\n                  className=\"relative top-3\"\n                />\n              </div>\n              <div className=\"z-50 hidden dark:block\">\n                <img\n                  src={logoDarkPng}\n                  alt=\"Langbuilder Logo Dark\"\n                  data-testid=\"empty_page_logo_dark\"\n                  className=\"relative top-3\"\n                />\n              </div>\n              <span\n                data-testid=\"mainpage_title\"\n                className=\"z-50 text-center font-chivo text-2xl font-medium text-foreground\"\n              >\n                {EMPTY_PAGE_TITLE}\n              </span>\n\n              <span\n                data-testid=\"empty_page_description\"\n                className=\"z-50 text-center text-base text-secondary-foreground\"\n              >\n                {/* complex expression */}\n              </span>\n            </div>\n\n            <div className=\"flex w-full max-w-[510px] flex-col gap-7 sm:gap-[29px]\">\n              <Button\n                unstyled\n                className=\"group mx-3 h-[84px] sm:mx-0\"\n                onClick={handleClick}\n                data-testid=\"empty_page_github_button\"\n              >\n                <div className=\"relative flex flex-col rounded-lg border-[1px] bg-background p-4 transition-all duration-300 hover:border-accent-pink-foreground\">\n                  <div className=\"grid w-full items-center justify-between gap-2\">\n                    <div className=\"flex gap-3\">\n                      <FaGithub className=\"h-6 w-6\" />\n                      <div>\n                        <span className=\"font-semibold\">GitHub</span>\n                        <span className=\"ml-2 font-mono text-muted-foreground\">\n                          {formatNumber(stars)}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <span className=\"text-base text-secondary-foreground\">\n                        {EMPTY_PAGE_GITHUB_DESCRIPTION}\n                      </span>\n                    </div>\n                  </div>\n                  <ExternalLink className={EXTERNAL_LINK_ICON_CLASS} />\n                </div>\n              </Button>\n\n              <Button\n                variant=\"default\"\n                className=\"z-10 m-auto mt-3 h-10 w-full max-w-[10rem] rounded-lg font-bold transition-all duration-300\"\n                onClick={() => setOpenModal(true)}\n                id=\"new-project-btn\"\n                data-testid=\"new_project_btn_empty_page\"\n              >\n                <ForwardedIconComponent\n                  name=\"Plus\"\n                  aria-hidden=\"true\"\n                  className=\"h-4 w-4\"\n                />\n                <span>{EMPTY_PAGE_CREATE_FIRST_FLOW_BUTTON_TEXT}</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n        <p\n          data-testid=\"empty_page_drag_and_drop_text\"\n          className=\"absolute bottom-5 left-0 right-0 mt-4 cursor-default text-center text-xxs text-muted-foreground\"\n        >\n          {EMPTY_PAGE_DRAG_AND_DROP_TEXT}\n        </p>\n      </CardsWrapComponent>\n    </DotBackgroundDemo>",
        "imports": [
          {
            "source": "lucide-react",
            "items": [
              "ExternalLink"
            ],
            "type": "named"
          },
          {
            "source": "react-icons/fa",
            "items": [
              "FaDiscord",
              "FaGithub"
            ],
            "type": "named"
          },
          {
            "source": "zustand/react/shallow",
            "items": [
              "useShallow"
            ],
            "type": "named"
          },
          {
            "source": "@/assets/logo_dark.png",
            "items": [
              "logoDarkPng"
            ],
            "type": "default"
          },
          {
            "source": "@/assets/logo_light.png",
            "items": [
              "logoLightPng"
            ],
            "type": "default"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "named"
          },
          {
            "source": "@/components/core/cardsWrapComponent",
            "items": [
              "CardsWrapComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/dot-background",
            "items": [
              "DotBackgroundDemo"
            ],
            "type": "named"
          },
          {
            "source": "@/constants/constants",
            "items": [
              "DISCORD_URL",
              "GITHUB_URL"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/auth",
            "items": [
              "useGetUserData",
              "useUpdateUser"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/authStore",
            "items": [
              "useAuthStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/darkStore",
            "items": [
              "useDarkStore"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/foldersStore",
            "items": [
              "useFolderStore"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "formatNumber"
            ],
            "type": "named"
          },
          {
            "source": "../hooks/use-on-file-drop",
            "items": [
              "useFileDrop"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "CardsWrapComponent",
          "DotBackgroundDemo",
          "ExternalLink",
          "FaGithub",
          "ForwardedIconComponent"
        ],
        "tailwind_classes_used": [
          "EXTERNAL_LINK_ICON_CLASS",
          "absolute",
          "bg-background",
          "border-[1px]",
          "bottom-5",
          "cursor-default",
          "dark:block",
          "dark:hidden",
          "duration-300",
          "flex",
          "flex-col",
          "font-bold",
          "font-chivo",
          "font-medium",
          "font-mono",
          "font-semibold",
          "gap-2",
          "gap-3",
          "gap-5",
          "gap-7",
          "grid",
          "group",
          "h-10",
          "h-4",
          "h-6",
          "h-[84px]",
          "h-full",
          "hidden",
          "hover:border-accent-pink-foreground",
          "items-center",
          "justify-between",
          "justify-center",
          "left-0",
          "m-0",
          "m-auto",
          "max-w-[10rem]",
          "max-w-[510px]",
          "ml-2",
          "mt-3",
          "mt-4",
          "mx-3",
          "p-0",
          "p-4",
          "relative",
          "right-0",
          "rounded-lg",
          "sm:gap-[29px]",
          "sm:mx-0",
          "text-2xl",
          "text-base"
        ],
        "state_props_referenced": [
          "EMPTY_PAGE_CREATE_FIRST_FLOW_BUTTON_TEXT",
          "EMPTY_PAGE_DRAG_AND_DROP_TEXT",
          "EMPTY_PAGE_GITHUB_DESCRIPTION",
          "EMPTY_PAGE_TITLE",
          "EXTERNAL_LINK_ICON_CLASS",
          "handleFileDrop",
          "logoDarkPng",
          "logoLightPng"
        ],
        "file_size_lines": 160,
        "jsx_size_chars": 3953
      }
    },
    {
      "id": "ni0029",
      "type": "interface",
      "name": "EnhancedBeamEffect",
      "path": "frontend/src/pages/MainPage/pages/enchanced-beam-effect.tsx",
      "category": "page",
      "description": "interface node: EnhancedBeamEffect (Page component)",
      "uidl_definition_conceptual": {
        "name": "EnhancedBeamEffect",
        "path": "frontend/src/pages/MainPage/pages/enchanced-beam-effect.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": [
            {
              "source": "../../../components/ui/border-beams",
              "items": [
                "BorderBeam"
              ]
            }
          ]
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          },
          "className": {
            "type": "any",
            "optional": false
          },
          "primaryColor": {
            "type": "string",
            "optional": true
          },
          "secondaryColor": {
            "type": "string",
            "optional": true
          },
          "size": {
            "type": "number",
            "optional": true
          },
          "primaryColor = \"#C661B8\"": {
            "type": "any",
            "optional": false
          },
          "secondaryColor = \"#61C6B8\"": {
            "type": "any",
            "optional": false
          },
          "size = 200": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BorderBeam"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "EnhancedBeamEffect",
        "file_path": "frontend/src/pages/MainPage/pages/enchanced-beam-effect.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            },
            {
              "type": "BorderBeam",
              "attributes": {
                "className": "opacity-80"
              },
              "category": "component"
            }
          ],
          "components": [
            "BorderBeam"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "BorderBeam"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "cn(",
            "opacity-80"
          ],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "EnhancedBeamEffect",
        "file_path": "frontend/src/pages/MainPage/pages/enchanced-beam-effect.tsx",
        "component_type": "other",
        "summary": "EnhancedBeamEffect component",
        "jsx_return_statement": "<div\n      className={cn(\n        \"relative flex items-center justify-center overflow-hidden rounded-xl\",\n        className,\n      )}\n    >\n      {children}\n\n      {/* Primary beam - larger, slower rotation */}\n      <BorderBeam\n        duration={12}\n        size={size}\n        className=\"opacity-80\"\n        colorFrom={primaryColor}\n        colorTo={secondaryColor}\n        anchor={20}\n        borderWidth={1.5}\n      />\n    </div>",
        "jsx_simplified": "<div\n      className={/* complex expression */}\n    >\n      {children}\n\n      {/* Primary beam - larger, slower rotation */}\n      <BorderBeam\n        duration={12}\n        size={size}\n        className=\"opacity-80\"\n        colorFrom={primaryColor}\n        colorTo={secondaryColor}\n        anchor={20}\n        borderWidth={1.5}\n      />\n    </div>",
        "imports": [
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          },
          {
            "source": "../../../components/ui/border-beams",
            "items": [
              "BorderBeam"
            ],
            "type": "named"
          }
        ],
        "props_definition": {
          "name": "EnhancedBeamEffectProps",
          "definition": "children: ReactNode;\n  className?: string;\n  primaryColor?: string;\n  secondaryColor?: string;\n  size?: number;",
          "type": "interface"
        },
        "ui_components_used": [
          "BorderBeam"
        ],
        "tailwind_classes_used": [
          "cn(",
          "opacity-80"
        ],
        "state_props_referenced": [
          "children",
          "primaryColor",
          "secondaryColor",
          "size"
        ],
        "file_size_lines": 43,
        "jsx_size_chars": 433
      }
    },
    {
      "id": "ni0030",
      "type": "interface",
      "name": "FilesPage",
      "path": "frontend/src/pages/MainPage/pages/filesPage/index.tsx",
      "category": "page",
      "description": "interface node: FilesPage (Page component)",
      "uidl_definition_conceptual": {
        "name": "FilesPage",
        "path": "frontend/src/pages/MainPage/pages/filesPage/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useMemo",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/common/shadTooltipComponent",
              "items": [
                "ShadTooltip"
              ]
            },
            {
              "source": "@/components/core/cardsWrapComponent",
              "items": [
                "CardsWrapComponent"
              ]
            },
            {
              "source": "@/components/core/parameterRenderComponent/components/tableComponent",
              "items": [
                "TableComponent"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/components/ui/input",
              "items": [
                "Input"
              ]
            },
            {
              "source": "@/components/ui/loading",
              "items": [
                "Loading"
              ]
            },
            {
              "source": "@/components/ui/sidebar",
              "items": [
                "SidebarTrigger"
              ]
            },
            {
              "source": "@/controllers/API/queries/file-management",
              "items": [
                "useGetFilesV2"
              ]
            },
            {
              "source": "@/controllers/API/queries/file-management/use-delete-files",
              "items": [
                "useDeleteFilesV2"
              ]
            },
            {
              "source": "@/controllers/API/queries/file-management/use-put-rename-file",
              "items": [
                "usePostRenameFileV2"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-handle-bulk-files-download",
              "items": [
                "useCustomHandleBulkFilesDownload"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-post-upload-file",
              "items": [
                "customPostUploadFileV2"
              ]
            },
            {
              "source": "@/hooks/files/use-upload-file",
              "items": [
                "useUploadFile"
              ]
            },
            {
              "source": "@/modals/deleteConfirmationModal",
              "items": [
                "DeleteConfirmationModal"
              ]
            },
            {
              "source": "@/modals/fileManagerModal/components/filesContextMenuComponent",
              "items": [
                "FilesContextMenuComponent"
              ]
            },
            {
              "source": "@/stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "@/utils/stringManipulation",
              "items": [
                "formatFileSize"
              ]
            },
            {
              "source": "@/utils/styleUtils",
              "items": [
                "FILE_ICONS"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": [
            {
              "source": "../../utils/sort-flows",
              "items": [
                "sortByDate"
              ]
            },
            {
              "source": "./components/dragWrapComponent",
              "items": [
                "DragWrapComponent"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "selectedFiles": {
            "type": "any[]",
            "defaultValue": "[]"
          },
          "quantitySelected": {
            "type": "any",
            "defaultValue": "0"
          },
          "isShiftPressed": {
            "type": "any",
            "defaultValue": "false"
          },
          "isDownloading": {
            "type": "any",
            "defaultValue": "false"
          },
          "quickFilterText": {
            "type": "any",
            "defaultValue": "\"\""
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "files"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useDeleteFilesV2",
          "useAlertStore",
          "usePostRenameFileV2",
          "useGetFilesV2",
          "useUploadFile",
          "useCustomHandleBulkFilesDownload"
        ],
        "eventHandlers": {
          "handleKeyDown": {
            "type": "arrow_function",
            "async": false
          },
          "handleKeyUp": {
            "type": "arrow_function",
            "async": false
          },
          "handleSelectionChanged": {
            "type": "arrow_function",
            "async": false
          },
          "handleRename": {
            "type": "arrow_function",
            "async": false
          },
          "handleOpenRename": {
            "type": "arrow_function",
            "async": false
          },
          "handleUpload": {
            "type": "arrow_function",
            "async": true
          },
          "handleDownload": {
            "type": "arrow_function",
            "async": false
          },
          "handleDelete": {
            "type": "arrow_function",
            "async": false
          },
          "onFileDrop": {
            "type": "arrow_function",
            "async": true
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "CardsWrapComponent",
            "FilesContextMenuComponent",
            "DeleteConfirmationModal",
            "ForwardedIconComponent",
            "ShadTooltip",
            "Loading",
            "Input",
            "DragWrapComponent",
            "SidebarTrigger",
            "Button",
            "TableComponent",
            "ImportButtonComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "FilesPage",
        "file_path": "frontend/src/pages/MainPage/pages/filesPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "any",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center gap-4 font-medium"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-6 items-center justify-center text-xs font-semibold text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "file-icon pointer-events-none relative"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "cn("
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-xs text-primary"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "cursor-pointer text-accent-pink-foreground underline"
              },
              "category": "html"
            }
          ],
          "components": [
            "ForwardedIconComponent"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Input"
          ],
          "custom": [
            "AgGridReact",
            "ForwardedIconComponent",
            "FilesContextMenuComponent",
            "ShadTooltip",
            "SidebarTrigger",
            "ImportButtonComponent",
            "Loading",
            "DragWrapComponent",
            "TableComponent",
            "DeleteConfirmationModal",
            "CardsWrapComponent"
          ],
          "html": [
            "div",
            "span",
            "p",
            "h3"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "file-icon",
            "md:inline",
            "!text-mmd",
            "text-2xl",
            "group-data-[open=true]/sidebar-wrapper:md:w-0",
            "text-secondary-foreground",
            "text-muted-foreground",
            "text-accent-pink-foreground",
            "left-0",
            "gap-4",
            "hidden",
            "text-xs",
            "pointer-events-none",
            "!px-3",
            "cursor-default",
            "w-full",
            "flex-col",
            "gap-2",
            "justify-center",
            "py-4",
            "transition-all",
            "lg:hidden",
            "pb-8",
            "flex-1",
            "justify-between",
            "group-data-[open=true]/sidebar-wrapper:md:opacity-0",
            "items-center",
            "px-2.5",
            "justify-start",
            "w-4",
            "pt-10",
            "whitespace-nowrap",
            "px-5",
            "gap-8",
            "mr-2",
            "text-lg",
            "h-6",
            "h-4",
            "opacity-100",
            "w-10",
            "cn(",
            "underline",
            "cursor-pointer",
            "md:!pl-3.5",
            "xl:w-5/12",
            "font-medium",
            "flex",
            "text-primary",
            "xl:container",
            "text-xl",
            "overflow-y-auto",
            "h-full",
            "relative",
            "h-7",
            "md:!px-4",
            "font-semibold"
          ],
          "layout_patterns": [
            "flexbox",
            "container"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            },
            {
              "attributes": {
                "className": "!px-3 md:!px-4 md:!pl-3.5"
              },
              "type": "button"
            },
            {
              "attributes": {
                "onClick": "handleDownload"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "px-2.5 !text-mmd"
              },
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "className": "mr-2 w-full",
                "type": "text",
                "value": "quickFilterText || \"\""
              },
              "type": "text"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "table",
            "columns": [],
            "has_pagination": true
          },
          {
            "type": "dynamic_list",
            "arrays": [
              "selectedFiles"
            ],
            "description": "Dynamic rendering of 1 lists"
          }
        ],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "FilesPage",
        "file_path": "frontend/src/pages/MainPage/pages/filesPage/index.tsx",
        "component_type": "page",
        "summary": "This column will be twice as wide as the others",
        "jsx_return_statement": ") => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n\n  const handleSelectionChanged = (event: SelectionChangedEvent) => {\n    const selectedRows = event.api.getSelectedRows();\n    setSelectedFiles(selectedRows);\n    if (selectedRows.length > 0) {\n      setQuantitySelected(selectedRows.length);\n    } else {\n      setTimeout(() => {\n        setQuantitySelected(0);\n      }, 300);\n    }\n  };\n\n  const { mutate: rename } = usePostRenameFileV2();\n\n  const { mutate: deleteFiles, isPending: isDeleting } = useDeleteFilesV2();\n  const { handleBulkDownload } = useCustomHandleBulkFilesDownload();\n\n  const handleRename = (params: NewValueParams<any, any>) => {\n    rename({\n      id: params.data.id,\n      name: params.newValue,\n    });\n  };\n\n  const handleOpenRename = (id: string, name: string) => {\n    if (tableRef.current) {\n      tableRef.current.api.startEditingCell({\n        rowIndex: files?.findIndex((file) => file.id === id) ?? 0,\n        colKey: \"name\",\n      });\n    }\n  };\n\n  const uploadFile = useUploadFile({ multiple: true });\n\n  const handleUpload = async (files?: File[]) => {\n    try {\n      const filesIds = await uploadFile({\n        files: files,\n      });\n      setSuccessData({\n        title: `File${filesIds.length > 1 ? \"s\" : \"\"} uploaded successfully`,\n      });\n    } catch (error: any) {\n      setErrorData({\n        title: \"Error uploading file\",\n        list: [error.message || \"An error occurred while uploading the file\"],\n      });\n    }\n  };\n\n  const { mutate: uploadFileDirect } = customPostUploadFileV2();\n\n  useEffect(() => {\n    if (files) {\n      setQuantitySelected(0);\n      setSelectedFiles([]);\n    }\n  }, [files]);\n\n  const colDefs: ColDef[] = [\n    {\n      headerName: \"Name\",\n      field: \"name\",\n      flex: 2,\n      headerCheckboxSelection: true,\n      checkboxSelection: true,\n      editable: true,\n      filter: \"agTextColumnFilter\",\n      cellClass:\n        \"cursor-text select-text group-[.no-select-cells]:cursor-default group-[.no-select-cells]:select-none\",\n      cellRenderer: (params) => {\n        const type = params.data.path.split(\".\")[1]?.toLowerCase();\n        return (\n          <div className=\"flex items-center gap-4 font-medium\">\n            {params.data.progress !== undefined &&\n            params.data.progress !== -1 ? (\n              <div className=\"flex h-6 items-center justify-center text-xs font-semibold text-muted-foreground\">\n                {Math.round(params.data.progress * 100)}%\n              </div>\n            ) : (\n              <div className=\"file-icon pointer-events-none relative\">\n                <ForwardedIconComponent\n                  name={FILE_ICONS[type]?.icon ?? \"File\"}\n                  className={cn(\n                    \"-mx-[3px] h-6 w-6 shrink-0\",\n                    params.data.progress !== undefined\n                      ? \"text-placeholder-foreground\"\n                      : (FILE_ICONS[type]?.color ?? undefined),\n                  )}\n                />\n              </div>\n            )}\n            <div\n              className={cn(\n                \"flex items-center gap-2 text-sm font-medium\",\n                params.data.progress !== undefined &&\n                  params.data.progress === -1 &&\n                  \"pointer-events-none text-placeholder-foreground\",\n              )}\n            >\n              {params.value}.{type}\n            </div>\n            {params.data.progress !== undefined &&\n            params.data.progress === -1 ? (\n              <span className=\"text-xs text-primary\">\n                Upload failed,{\" \"}\n                <span\n                  className=\"cursor-pointer text-accent-pink-foreground underline\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    if (params.data.file) {\n                      uploadFileDirect({ file: params.data.file });\n                    }\n                  }}\n                >\n                  try again?\n                </span>\n              </span>\n            ) : (\n              <></>\n            )}\n          </div>",
        "jsx_simplified": ") => {/* complex expression */};\n  }, []);\n\n  const handleSelectionChanged = (event: SelectionChangedEvent) => {/* complex expression */} else {\n      setTimeout(() => {\n        setQuantitySelected(0);\n      }, 300);\n    }\n  };\n\n  const { mutate: rename } = usePostRenameFileV2();\n\n  const { mutate: deleteFiles, isPending: isDeleting } = useDeleteFilesV2();\n  const { handleBulkDownload } = useCustomHandleBulkFilesDownload();\n\n  const handleRename = (params: NewValueParams<any, any>) => {\n    rename({\n      id: params.data.id,\n      name: params.newValue,\n    });\n  };\n\n  const handleOpenRename = (id: string, name: string) => {/* complex expression */});\n    }\n  };\n\n  const uploadFile = useUploadFile({ multiple: true });\n\n  const handleUpload = async (files?: File[]) => {\n    try {\n      const filesIds = await uploadFile({\n        files: files,\n      });\n      setSuccessData({\n        title: `File${filesIds.length > 1 ? \"s\" : \"\"} uploaded successfully`,\n      });\n    } catch (error: any) {/* complex expression */});\n    }\n  };\n\n  const { mutate: uploadFileDirect } = customPostUploadFileV2();\n\n  useEffect(() => {\n    if (files) {\n      setQuantitySelected(0);\n      setSelectedFiles([]);\n    }\n  }, [files]);\n\n  const colDefs: ColDef[] = [\n    {/* complex expression */}%\n              </div>\n            ) : (\n              <div className=\"file-icon pointer-events-none relative\">\n                <ForwardedIconComponent\n                  name={FILE_ICONS[type]?.icon ?? \"File\"}\n                  className={/* complex expression */}\n                />\n              </div>\n            )}\n            <div\n              className={/* complex expression */}\n            >\n              {params.value}.{type}\n            </div>\n            {/* complex expression */}\n                <span\n                  className=\"cursor-pointer text-accent-pink-foreground underline\"\n                  onClick={/* complex expression */});\n                    }\n                  }}\n                >\n                  try again?\n                </span>\n              </span>\n            ) : (\n              <></>\n            )}\n          </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useMemo",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/common/shadTooltipComponent",
            "items": [
              "ShadTooltip"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/cardsWrapComponent",
            "items": [
              "CardsWrapComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/parameterRenderComponent/components/tableComponent",
            "items": [
              "TableComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/input",
            "items": [
              "Input"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/loading",
            "items": [
              "Loading"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/sidebar",
            "items": [
              "SidebarTrigger"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/file-management",
            "items": [
              "useGetFilesV2"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/file-management/use-delete-files",
            "items": [
              "useDeleteFilesV2"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/file-management/use-put-rename-file",
            "items": [
              "usePostRenameFileV2"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-handle-bulk-files-download",
            "items": [
              "useCustomHandleBulkFilesDownload"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-post-upload-file",
            "items": [
              "customPostUploadFileV2"
            ],
            "type": "named"
          },
          {
            "source": "@/hooks/files/use-upload-file",
            "items": [
              "useUploadFile"
            ],
            "type": "default"
          },
          {
            "source": "@/modals/deleteConfirmationModal",
            "items": [
              "DeleteConfirmationModal"
            ],
            "type": "default"
          },
          {
            "source": "@/modals/fileManagerModal/components/filesContextMenuComponent",
            "items": [
              "FilesContextMenuComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/stringManipulation",
            "items": [
              "formatFileSize"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/styleUtils",
            "items": [
              "FILE_ICONS"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          },
          {
            "source": "../../utils/sort-flows",
            "items": [
              "sortByDate"
            ],
            "type": "named"
          },
          {
            "source": "./components/dragWrapComponent",
            "items": [
              "DragWrapComponent"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "ForwardedIconComponent"
        ],
        "tailwind_classes_used": [
          "cn(",
          "cursor-pointer",
          "file-icon",
          "flex",
          "font-medium",
          "font-semibold",
          "gap-4",
          "h-6",
          "items-center",
          "justify-center",
          "pointer-events-none",
          "relative",
          "text-accent-pink-foreground",
          "text-muted-foreground",
          "text-primary",
          "text-xs",
          "underline"
        ],
        "state_props_referenced": [
          "type"
        ],
        "file_size_lines": 492,
        "jsx_size_chars": 4138
      }
    },
    {
      "id": "ni0031",
      "type": "interface",
      "name": "DragWrapComponent",
      "path": "frontend/src/pages/MainPage/pages/filesPage/components/dragWrapComponent/index.tsx",
      "category": "page",
      "description": "interface node: DragWrapComponent (Page component)",
      "uidl_definition_conceptual": {
        "name": "DragWrapComponent",
        "path": "frontend/src/pages/MainPage/pages/filesPage/components/dragWrapComponent/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {
          "onFileDrop": {
            "type": "any",
            "optional": false
          },
          "children": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "isDragging": {
            "type": "any",
            "defaultValue": "false"
          },
          "mousePosition": {
            "type": "any",
            "defaultValue": "{ x: 0, y: 0 }"
          },
          "filesCount": {
            "type": "any",
            "defaultValue": "0"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useFlowsManagerStore"
        ],
        "eventHandlers": {
          "handleVisibilityChange": {
            "type": "arrow_function",
            "async": false
          },
          "onDrop": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": []
        }
      },
      "ui_uidl": {
        "component_name": "DragWrapComponent",
        "file_path": "frontend/src/pages/MainPage/pages/filesPage/components/dragWrapComponent/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "cn(",
                "onDragOver": "dragOver",
                "onDragEnter": "dragEnter",
                "onDragLeave": "dragLeave",
                "onDrop": "onDrop"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "pointer-events-none fixed -translate-x-1/2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "w-44 rounded-2xl bg-accent-indigo-foreground px-2.5 py-0.5 text-center backdrop-blur-sm"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "font-mono text-xs text-primary-foreground"
              },
              "category": "html"
            }
          ],
          "components": [],
          "ui_patterns": [
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "cn(",
            "rounded-2xl",
            "fixed",
            "font-mono",
            "backdrop-blur-sm",
            "w-44",
            "py-0.5",
            "bg-accent-indigo-foreground",
            "text-center",
            "text-primary-foreground",
            "text-xs",
            "pointer-events-none",
            "-translate-x-1/2",
            "px-2.5"
          ],
          "layout_patterns": [],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "DragWrapComponent",
        "file_path": "frontend/src/pages/MainPage/pages/filesPage/components/dragWrapComponent/index.tsx",
        "component_type": "component",
        "summary": "Function to handle visibility change",
        "jsx_return_statement": ") => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n  }, []);\n\n  const dragOver = (e) => {\n    e.preventDefault();\n    setMousePosition({ x: e.clientX, y: e.clientY });\n    if (\n      e.dataTransfer.types.some((types) => types === \"Files\") &&\n      onFileDrop &&\n      !isIOModalOpen\n    ) {\n      setIsDragging(true);\n      setFilesCount(e.dataTransfer.items.length);\n    }\n  };\n\n  const dragEnter = (e) => {\n    if (\n      e.dataTransfer.types.some((types) => types === \"Files\") &&\n      onFileDrop &&\n      !isIOModalOpen\n    ) {\n      setIsDragging(true);\n      setFilesCount(e.dataTransfer.items.length);\n    }\n    e.preventDefault();\n  };\n\n  const dragLeave = (e) => {\n    e.preventDefault();\n    if (onFileDrop && !isIOModalOpen) {\n      setIsDragging(false);\n    }\n  };\n\n  const onDrop = (e) => {\n    e.preventDefault();\n    if (onFileDrop && !isIOModalOpen) onFileDrop(e);\n    setIsDragging(false);\n  };\n\n  const image = `url(\"data:image/svg+xml,%3Csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='100%25' height='100%25' fill='none' rx='16' ry='16' stroke='%23FFFFFF' stroke-width='2px' stroke-dasharray='5%2c 5' stroke-dashoffset='0' stroke-linecap='butt'/%3E%3C/svg%3E\")`;\n\n  return (\n    <div\n      onDragOver={dragOver}\n      onDragEnter={dragEnter}\n      onDragLeave={dragLeave}\n      onDrop={onDrop}\n      className={cn(\"relative h-full w-full transition-all\")}\n      data-testid=\"drag-wrap-component\"\n    >\n      <div\n        className={cn(\n          \"h-full w-full transition-all\",\n          isDragging ? \"opacity-50\" : \"\",\n        )}\n      >\n        {children}\n      </div>\n\n      <div\n        className={cn(\n          \"pointer-events-none absolute top-0 h-full w-full rounded-2xl bg-placeholder-foreground transition-all\",\n          isDragging ? \"opacity-100\" : \"opacity-0\",\n        )}\n        style={{\n          WebkitMaskImage: image,\n          maskImage: image,\n        }}\n      />\n\n      {isDragging && (\n        <div\n          className=\"pointer-events-none fixed -translate-x-1/2\"\n          style={{\n            left: `${mousePosition.x}px`,\n            top: `${mousePosition.y + 55}px`,\n          }}\n        >\n          <div className=\"w-44 rounded-2xl bg-accent-indigo-foreground px-2.5 py-0.5 text-center backdrop-blur-sm\">\n            <span className=\"font-mono text-xs text-primary-foreground\">\n              Drop file{filesCount > 1 ? \"s\" : \"\"} to upload\n            </span>\n          </div>\n        </div>\n      )}\n    </div>",
        "jsx_simplified": ") => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n  }, []);\n\n  const dragOver = (e) => {\n    e.preventDefault();\n    setMousePosition({ x: e.clientX, y: e.clientY });\n    if (\n      e.dataTransfer.types.some((types) => types === \"Files\") &&\n      onFileDrop &&\n      !isIOModalOpen\n    ) {\n      setIsDragging(true);\n      setFilesCount(e.dataTransfer.items.length);\n    }\n  };\n\n  const dragEnter = (e) => {/* complex expression */}\n    e.preventDefault();\n  };\n\n  const dragLeave = (e) => {\n    e.preventDefault();\n    if (onFileDrop && !isIOModalOpen) {\n      setIsDragging(false);\n    }\n  };\n\n  const onDrop = (e) => {/* complex expression */};\n\n  const image = `url(\"data:image/svg+xml,%3Csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='100%25' height='100%25' fill='none' rx='16' ry='16' stroke='%23FFFFFF' stroke-width='2px' stroke-dasharray='5%2c 5' stroke-dashoffset='0' stroke-linecap='butt'/%3E%3C/svg%3E\")`;\n\n  return (\n    <div\n      onDragOver={dragOver}\n      onDragEnter={dragEnter}\n      onDragLeave={dragLeave}\n      onDrop={onDrop}\n      className={cn(\"relative h-full w-full transition-all\")}\n      data-testid=\"drag-wrap-component\"\n    >\n      <div\n        className={cn(\n          \"h-full w-full transition-all\",\n          isDragging ? \"opacity-50\" : \"\",\n        )}\n      >\n        {children}\n      </div>\n\n      <div\n        className={/* complex expression */}\n        style={{\n          WebkitMaskImage: image,\n          maskImage: image,\n        }}\n      />\n\n      {/* complex expression */}px`,\n            top: `${mousePosition.y + 55}px`,\n          }}\n        >\n          <div className=\"w-44 rounded-2xl bg-accent-indigo-foreground px-2.5 py-0.5 text-center backdrop-blur-sm\">\n            <span className=\"font-mono text-xs text-primary-foreground\">\n              Drop file{filesCount > 1 ? \"s\" : \"\"} to upload\n            </span>\n          </div>\n        </div>\n      )}\n    </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [],
        "tailwind_classes_used": [
          "-translate-x-1/2",
          "backdrop-blur-sm",
          "bg-accent-indigo-foreground",
          "cn(",
          "fixed",
          "font-mono",
          "pointer-events-none",
          "px-2.5",
          "py-0.5",
          "rounded-2xl",
          "text-center",
          "text-primary-foreground",
          "text-xs",
          "w-44"
        ],
        "state_props_referenced": [
          "children",
          "dragEnter",
          "dragLeave",
          "dragOver"
        ],
        "file_size_lines": 120,
        "jsx_size_chars": 2538
      }
    },
    {
      "id": "ni0032",
      "type": "interface",
      "name": "EmptyPage",
      "path": "frontend/src/pages/MainPage/pages/emptyPage/index.tsx",
      "category": "page",
      "description": "interface node: EmptyPage (Page component)",
      "uidl_definition_conceptual": {
        "name": "EmptyPage",
        "path": "frontend/src/pages/MainPage/pages/emptyPage/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/assets/LangbuilderLogo.svg?react",
              "items": [
                "LangbuilderLogo"
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/core/cardsWrapComponent",
              "items": [
                "CardsWrapComponent"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/stores/foldersStore",
              "items": [
                "useFolderStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../../hooks/use-on-file-drop",
              "items": [
                "useFileDrop"
              ]
            }
          ]
        },
        "propDefinitions": {
          "setOpenModal": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useFolderStore",
          "useFileDrop"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "CardsWrapComponent",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "ForwardedIconComponent",
            "CardsWrapComponent",
            "LangbuilderLogo"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "EmptyPage",
        "file_path": "frontend/src/pages/MainPage/pages/emptyPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "CardsWrapComponent",
              "attributes": {
                "onFileDrop": "handleFileDrop"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "m-0 h-full w-full bg-secondary p-0"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "text-container"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "relative z-20 flex w-full flex-col items-center justify-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "LangbuilderLogo",
              "attributes": {
                "className": "h-7 w-8"
              },
              "category": "component"
            },
            {
              "type": "h",
              "attributes": {
                "className": "pt-5 font-chivo text-2xl font-semibold text-foreground"
              },
              "category": "html"
            },
            {
              "type": "p",
              "attributes": {
                "className": "pb-5 text-sm text-secondary-foreground"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-4 w-4"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "hidden whitespace-nowrap font-semibold md:inline"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "gradient-bg"
              },
              "category": "html"
            },
            {
              "type": "svg",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "defs",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "filter",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "fe",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "fe",
              "attributes": {
                "type": "matrix"
              },
              "category": "html"
            },
            {
              "type": "fe",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "filter",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "fe",
              "attributes": {
                "type": "fractalNoise"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "gradients-container"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "g1"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "g2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "g3"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "g4"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "g5"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "g6"
              },
              "category": "html"
            }
          ],
          "components": [
            "CardsWrapComponent",
            "ForwardedIconComponent",
            "LangbuilderLogo",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "card",
              "description": "Card-based layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "CardsWrapComponent",
            "LangbuilderLogo",
            "ForwardedIconComponent"
          ],
          "html": [
            "div",
            "span",
            "p",
            "h3"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "md:inline",
            "text-2xl",
            "text-secondary-foreground",
            "g6",
            "g3",
            "gradient-bg",
            "hidden",
            "pt-5",
            "bg-secondary",
            "w-full",
            "flex-col",
            "gap-2",
            "justify-center",
            "g4",
            "text-foreground",
            "w-8",
            "m-0",
            "items-center",
            "w-4",
            "whitespace-nowrap",
            "pb-5",
            "p-0",
            "font-chivo",
            "h-4",
            "gradients-container",
            "z-20",
            "g5",
            "text-container",
            "g2",
            "g1",
            "flex",
            "text-sm",
            "h-full",
            "relative",
            "h-7",
            "font-semibold"
          ],
          "layout_patterns": [
            "flexbox",
            "container"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "EmptyPage",
        "file_path": "frontend/src/pages/MainPage/pages/emptyPage/index.tsx",
        "component_type": "page",
        "summary": "www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">",
        "jsx_return_statement": "<CardsWrapComponent\n      dragMessage={`Drop your flows or components here`}\n      onFileDrop={handleFileDrop}\n    >\n      <div className=\"m-0 h-full w-full bg-secondary p-0\">\n        <div className=\"text-container\">\n          <div className=\"relative z-20 flex w-full flex-col items-center justify-center gap-2\">\n            <LangbuilderLogo className=\"h-7 w-8\" />\n            <h3\n              className=\"pt-5 font-chivo text-2xl font-semibold text-foreground\"\n              data-testid=\"mainpage_title\"\n            >\n              {folders?.length > 1 ? \"Empty project\" : \"Start building\"}\n            </h3>\n            <p\n              data-testid=\"empty-project-description\"\n              className=\"pb-5 text-sm text-secondary-foreground\"\n            >\n              Begin with a template, or start from scratch.\n            </p>\n            <Button\n              variant=\"default\"\n              onClick={() => setOpenModal(true)}\n              id=\"new-project-btn\"\n              data-testid=\"new_project_btn_empty_page\"\n            >\n              <ForwardedIconComponent\n                name=\"Plus\"\n                aria-hidden=\"true\"\n                className=\"h-4 w-4\"\n              />\n              <span className=\"hidden whitespace-nowrap font-semibold md:inline\">\n                New Flow\n              </span>\n            </Button>\n          </div>\n        </div>\n        <div className=\"gradient-bg\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\n            <defs>\n              <filter id=\"lf-balls\">\n                <feGaussianBlur\n                  in=\"turbulence\"\n                  stdDeviation=\"10\"\n                  result=\"blur\"\n                />\n                <feColorMatrix\n                  in=\"blur\"\n                  type=\"matrix\"\n                  values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\"\n                  result=\"color-matrix\"\n                />\n                <feBlend in=\"SourceGraphic\" in2=\"color-matrix\" mode=\"normal\" />\n              </filter>\n              <filter id=\"lf-noise\">\n                <feTurbulence\n                  type=\"fractalNoise\"\n                  baseFrequency=\"0.65\"\n                  stitchTiles=\"stitch\"\n                />\n              </filter>\n            </defs>\n          </svg>\n          <div className=\"gradients-container\">\n            <div className=\"g1\" />\n            <div className=\"g2\" />\n            <div className=\"g3\" />\n            <div className=\"g4\" />\n            <div className=\"g5\" />\n            <div className=\"g6\" />\n          </div>\n        </div>\n      </div>\n    </CardsWrapComponent>",
        "jsx_simplified": "<CardsWrapComponent\n      dragMessage={`Drop your flows or components here`}\n      onFileDrop={handleFileDrop}\n    >\n      <div className=\"m-0 h-full w-full bg-secondary p-0\">\n        <div className=\"text-container\">\n          <div className=\"relative z-20 flex w-full flex-col items-center justify-center gap-2\">\n            <LangbuilderLogo className=\"h-7 w-8\" />\n            <h3\n              className=\"pt-5 font-chivo text-2xl font-semibold text-foreground\"\n              data-testid=\"mainpage_title\"\n            >\n              {folders?.length > 1 ? \"Empty project\" : \"Start building\"}\n            </h3>\n            <p\n              data-testid=\"empty-project-description\"\n              className=\"pb-5 text-sm text-secondary-foreground\"\n            >\n              Begin with a template, or start from scratch.\n            </p>\n            <Button\n              variant=\"default\"\n              onClick={() => setOpenModal(true)}\n              id=\"new-project-btn\"\n              data-testid=\"new_project_btn_empty_page\"\n            >\n              <ForwardedIconComponent\n                name=\"Plus\"\n                aria-hidden=\"true\"\n                className=\"h-4 w-4\"\n              />\n              <span className=\"hidden whitespace-nowrap font-semibold md:inline\">\n                New Flow\n              </span>\n            </Button>\n          </div>\n        </div>\n        <div className=\"gradient-bg\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\n            <defs>\n              <filter id=\"lf-balls\">\n                <feGaussianBlur\n                  in=\"turbulence\"\n                  stdDeviation=\"10\"\n                  result=\"blur\"\n                />\n                <feColorMatrix\n                  in=\"blur\"\n                  type=\"matrix\"\n                  values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\"\n                  result=\"color-matrix\"\n                />\n                <feBlend in=\"SourceGraphic\" in2=\"color-matrix\" mode=\"normal\" />\n              </filter>\n              <filter id=\"lf-noise\">\n                <feTurbulence\n                  type=\"fractalNoise\"\n                  baseFrequency=\"0.65\"\n                  stitchTiles=\"stitch\"\n                />\n              </filter>\n            </defs>\n          </svg>\n          <div className=\"gradients-container\">\n            <div className=\"g1\" />\n            <div className=\"g2\" />\n            <div className=\"g3\" />\n            <div className=\"g4\" />\n            <div className=\"g5\" />\n            <div className=\"g6\" />\n          </div>\n        </div>\n      </div>\n    </CardsWrapComponent>",
        "imports": [
          {
            "source": "@/assets/LangbuilderLogo.svg?react",
            "items": [
              "LangbuilderLogo"
            ],
            "type": "default"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/cardsWrapComponent",
            "items": [
              "CardsWrapComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/foldersStore",
            "items": [
              "useFolderStore"
            ],
            "type": "named"
          },
          {
            "source": "../../hooks/use-on-file-drop",
            "items": [
              "useFileDrop"
            ],
            "type": "default"
          }
        ],
        "props_definition": {
          "name": "EmptyPageProps",
          "definition": "setOpenModal: (open: boolean) => void;",
          "type": "type"
        },
        "ui_components_used": [
          "Button",
          "CardsWrapComponent",
          "ForwardedIconComponent",
          "LangbuilderLogo"
        ],
        "tailwind_classes_used": [
          "bg-secondary",
          "flex",
          "flex-col",
          "font-chivo",
          "font-semibold",
          "g1",
          "g2",
          "g3",
          "g4",
          "g5",
          "g6",
          "gap-2",
          "gradient-bg",
          "gradients-container",
          "h-4",
          "h-7",
          "h-full",
          "hidden",
          "items-center",
          "justify-center",
          "m-0",
          "md:inline",
          "p-0",
          "pb-5",
          "pt-5",
          "relative",
          "text-2xl",
          "text-container",
          "text-foreground",
          "text-secondary-foreground",
          "text-sm",
          "w-4",
          "w-8",
          "w-full",
          "whitespace-nowrap",
          "z-20"
        ],
        "state_props_referenced": [
          "handleFileDrop"
        ],
        "file_size_lines": 94,
        "jsx_size_chars": 2620
      }
    },
    {
      "id": "ni0033",
      "type": "interface",
      "name": "EmptyFolder",
      "path": "frontend/src/pages/MainPage/pages/emptyFolder/index.tsx",
      "category": "page",
      "description": "interface node: EmptyFolder (Page component)",
      "uidl_definition_conceptual": {
        "name": "EmptyFolder",
        "path": "frontend/src/pages/MainPage/pages/emptyFolder/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/stores/foldersStore",
              "items": [
                "useFolderStore"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {
          "setOpenModal": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useFolderStore"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "ForwardedIconComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "EmptyFolder",
        "file_path": "frontend/src/pages/MainPage/pages/emptyFolder/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "m-0 flex w-full justify-center"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "absolute top-1/2 flex w-full -translate-y-1/2 flex-col items-center justify-center gap-2"
              },
              "category": "html"
            },
            {
              "type": "h",
              "attributes": {
                "className": "pt-5 font-chivo text-2xl font-semibold"
              },
              "category": "html"
            },
            {
              "type": "p",
              "attributes": {
                "className": "pb-5 text-sm text-secondary-foreground"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-4 w-4"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "whitespace-nowrap font-semibold"
              },
              "category": "html"
            }
          ],
          "components": [
            "ForwardedIconComponent",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "ForwardedIconComponent"
          ],
          "html": [
            "div",
            "span",
            "p",
            "h3"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "text-2xl",
            "text-secondary-foreground",
            "absolute",
            "pt-5",
            "w-full",
            "flex-col",
            "gap-2",
            "justify-center",
            "m-0",
            "items-center",
            "w-4",
            "whitespace-nowrap",
            "pb-5",
            "font-chivo",
            "h-4",
            "flex",
            "text-sm",
            "font-semibold",
            "top-1/2",
            "-translate-y-1/2"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "EmptyFolder",
        "file_path": "frontend/src/pages/MainPage/pages/emptyFolder/index.tsx",
        "component_type": "other",
        "summary": "EmptyFolder component",
        "jsx_return_statement": "<div className=\"m-0 flex w-full justify-center\">\n      <div className=\"absolute top-1/2 flex w-full -translate-y-1/2 flex-col items-center justify-center gap-2\">\n        <h3\n          className=\"pt-5 font-chivo text-2xl font-semibold\"\n          data-testid=\"mainpage_title\"\n        >\n          {folders?.length > 1 ? \"Empty project\" : \"Start building\"}\n        </h3>\n        <p className=\"pb-5 text-sm text-secondary-foreground\">\n          Begin with a template, or start from scratch.\n        </p>\n        <Button\n          variant=\"default\"\n          onClick={() => setOpenModal(true)}\n          id=\"new-project-btn\"\n          data-testid=\"new_project_btn_empty_page\"\n        >\n          <ForwardedIconComponent\n            name=\"plus\"\n            aria-hidden=\"true\"\n            className=\"h-4 w-4\"\n          />\n          <span className=\"whitespace-nowrap font-semibold\">New Flow</span>\n        </Button>\n      </div>\n    </div>",
        "jsx_simplified": "<div className=\"m-0 flex w-full justify-center\">\n      <div className=\"absolute top-1/2 flex w-full -translate-y-1/2 flex-col items-center justify-center gap-2\">\n        <h3\n          className=\"pt-5 font-chivo text-2xl font-semibold\"\n          data-testid=\"mainpage_title\"\n        >\n          {folders?.length > 1 ? \"Empty project\" : \"Start building\"}\n        </h3>\n        <p className=\"pb-5 text-sm text-secondary-foreground\">\n          Begin with a template, or start from scratch.\n        </p>\n        <Button\n          variant=\"default\"\n          onClick={() => setOpenModal(true)}\n          id=\"new-project-btn\"\n          data-testid=\"new_project_btn_empty_page\"\n        >\n          <ForwardedIconComponent\n            name=\"plus\"\n            aria-hidden=\"true\"\n            className=\"h-4 w-4\"\n          />\n          <span className=\"whitespace-nowrap font-semibold\">New Flow</span>\n        </Button>\n      </div>\n    </div>",
        "imports": [
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/foldersStore",
            "items": [
              "useFolderStore"
            ],
            "type": "named"
          }
        ],
        "props_definition": {
          "name": "EmptyFolderProps",
          "definition": "setOpenModal: (open: boolean) => void;",
          "type": "type"
        },
        "ui_components_used": [
          "Button",
          "ForwardedIconComponent"
        ],
        "tailwind_classes_used": [
          "-translate-y-1/2",
          "absolute",
          "flex",
          "flex-col",
          "font-chivo",
          "font-semibold",
          "gap-2",
          "h-4",
          "items-center",
          "justify-center",
          "m-0",
          "pb-5",
          "pt-5",
          "text-2xl",
          "text-secondary-foreground",
          "text-sm",
          "top-1/2",
          "w-4",
          "w-full",
          "whitespace-nowrap"
        ],
        "state_props_referenced": [],
        "file_size_lines": 42,
        "jsx_size_chars": 931
      }
    },
    {
      "id": "ni0034",
      "type": "interface",
      "name": "LoadingPage",
      "path": "frontend/src/pages/LoadingPage/index.tsx",
      "category": "page",
      "description": "interface node: LoadingPage (Page component)",
      "uidl_definition_conceptual": {
        "name": "LoadingPage",
        "path": "frontend/src/pages/LoadingPage/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/components/common/loadingComponent",
              "items": [
                "LoadingComponent"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {
          "overlay = false": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "LoadingComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "LoadingPage",
        "file_path": "frontend/src/pages/LoadingPage/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            },
            {
              "type": "LoadingComponent",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "LoadingComponent"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "LoadingComponent"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "cn("
          ],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "LoadingPage",
        "file_path": "frontend/src/pages/LoadingPage/index.tsx",
        "component_type": "page",
        "summary": "Loading page component",
        "jsx_return_statement": "<div\n      className={cn(\n        \"flex h-screen w-screen items-center justify-center bg-background\",\n        overlay && \"fixed left-0 top-0 z-[999]\",\n      )}\n    >\n      <LoadingComponent remSize={50} />\n    </div>",
        "jsx_simplified": "<div\n      className={/* complex expression */}\n    >\n      <LoadingComponent remSize={50} />\n    </div>",
        "imports": [
          {
            "source": "@/components/common/loadingComponent",
            "items": [
              "LoadingComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "LoadingComponent"
        ],
        "tailwind_classes_used": [
          "cn("
        ],
        "state_props_referenced": [],
        "file_size_lines": 15,
        "jsx_size_chars": 216
      }
    },
    {
      "id": "ni0035",
      "type": "interface",
      "name": "UpdateAllComponents",
      "path": "frontend/src/pages/FlowPage/components/UpdateAllComponents/index.tsx",
      "category": "page",
      "description": "interface node: UpdateAllComponents (Page component)",
      "uidl_definition_conceptual": {
        "name": "UpdateAllComponents",
        "path": "frontend/src/pages/FlowPage/components/UpdateAllComponents/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useMemo",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@xyflow/react",
              "items": [
                "useUpdateNodeInternals"
              ]
            },
            {
              "source": "framer-motion",
              "items": [
                "AnimatePresence",
                "motion"
              ]
            },
            {
              "source": "@/CustomNodes/helpers/process-node-advanced-fields",
              "items": [
                "processNodeAdvancedFields"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/controllers/API/queries/nodes/use-post-validate-component-code",
              "items": [
                "usePostValidateComponentCode"
              ]
            },
            {
              "source": "@/modals/updateComponentModal",
              "items": [
                "UpdateComponentModal"
              ]
            },
            {
              "source": "@/stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "@/stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "@/stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "@/stores/typesStore",
              "items": [
                "useTypesStore"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "loadingUpdate": {
            "type": "any",
            "defaultValue": "false"
          },
          "isOpen": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {
          "edgesUpdateRef": {
            "type": "any",
            "initialValue": "{\n    numberOfEdgesBeforeUpdate: 0,\n    updateComponent: false,\n  }"
          }
        },
        "effects": [],
        "contexts": [],
        "customHooks": [
          "usePostValidateComponentCode",
          "useAlertStore",
          "useFlowStore",
          "useFlowsManagerStore",
          "useUpdateNodeInternals",
          "useTypesStore",
          "useUpdateAllNodes"
        ],
        "eventHandlers": {
          "handleUpdateAllComponents": {
            "type": "arrow_function",
            "async": false
          },
          "handleDismissAllComponents": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "AnimatePresence",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "AnimatePresence",
            "UpdateComponentModal",
            "HTMLButtonElement"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "UpdateAllComponents",
        "file_path": "frontend/src/pages/FlowPage/components/UpdateAllComponents/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "AnimatePresence",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "absolute bottom-2 left-1/2 z-50 w-[530px] -translate-x-1/2"
              },
              "category": "html"
            },
            {
              "type": "motion",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center gap-3"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center gap-4"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "shrink-0 text-sm",
                "onClick": "handleDismissAllComponents"
              },
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "shrink-0"
              },
              "category": "component"
            },
            {
              "type": "UpdateComponentModal",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "UpdateComponentModal",
            "AnimatePresence",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "HTMLButtonElement",
            "AnimatePresence",
            "UpdateComponentModal"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "cn(",
            "flex",
            "w-[530px]",
            "text-sm",
            "z-50",
            "shrink-0",
            "absolute",
            "bottom-2",
            "gap-4",
            "gap-3",
            "items-center",
            "-translate-x-1/2",
            "left-1/2"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "shrink-0 text-sm",
                "onClick": "handleDismissAllComponents"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "shrink-0"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "dynamic_list",
            "arrays": [
              "componentsToUpdateFiltered"
            ],
            "description": "Dynamic rendering of 1 lists"
          }
        ],
        "primary_layout": "list"
      },
      "ui_uidl_complete": {
        "component_name": "UpdateAllComponents",
        "file_path": "frontend/src/pages/FlowPage/components/UpdateAllComponents/index.tsx",
        "component_type": "component",
        "summary": "UpdateAlls UI component",
        "jsx_return_statement": "<AnimatePresence mode=\"wait\">\n      {!dismissed &&\n        !isBuilding &&\n        !buildInfo?.error &&\n        !buildInfo?.success && (\n          <div className=\"absolute bottom-2 left-1/2 z-50 w-[530px] -translate-x-1/2\">\n            <motion.div\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={CONTAINER_VARIANTS}\n              transition={{ duration: 0.2, ease: \"easeOut\" }}\n              className={cn(\n                \"flex items-center justify-between gap-8 rounded-lg border bg-background px-4 py-2 text-sm font-medium shadow-md\",\n                componentsToUpdateFiltered.some(\n                  (component) => component.breakingChange,\n                ) && \"border-accent-amber-foreground\",\n              )}\n            >\n              <div className=\"flex items-center gap-3\">\n                <span>\n                  Update\n                  {componentsToUpdateFiltered.length > 1 ? \"s are\" : \" is\"}{\" \"}\n                  available for{\" \"}\n                  {componentsToUpdateFiltered.length +\n                    \" component\" +\n                    (componentsToUpdateFiltered.length > 1 ? \"s\" : \"\")}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-4\">\n                <Button\n                  variant=\"link\"\n                  size=\"icon\"\n                  className=\"shrink-0 text-sm\"\n                  onClick={handleDismissAllComponents}\n                >\n                  Dismiss {componentsToUpdateFiltered.length > 1 ? \"All\" : \"\"}\n                </Button>\n                <Button\n                  size=\"sm\"\n                  className=\"shrink-0\"\n                  onClick={() => handleUpdateAllComponents()}\n                  loading={loadingUpdate}\n                  data-testid=\"update-all-button\"\n                >\n                  {breakingChanges.length > 0 ? \"Review All\" : \"Update All\"}\n                </Button>\n              </div>\n              <UpdateComponentModal\n                isMultiple={true}\n                open={isOpen}\n                setOpen={setIsOpen}\n                onUpdateNode={(ids) => handleUpdateAllComponents(true, ids)}\n                components={componentsToUpdateFiltered}\n              />\n            </motion.div>\n          </div>\n        )}\n    </AnimatePresence>",
        "jsx_simplified": "<AnimatePresence mode=\"wait\">\n      {/* complex expression */}\n              transition={{ duration: 0.2, ease: \"easeOut\" }}\n              className={/* complex expression */}\n            >\n              <div className=\"flex items-center gap-3\">\n                <span>\n                  Update\n                  {componentsToUpdateFiltered.length > 1 ? \"s are\" : \" is\"}{\" \"}\n                  available for{\" \"}\n                  {/* complex expression */}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-4\">\n                <Button\n                  variant=\"link\"\n                  size=\"icon\"\n                  className=\"shrink-0 text-sm\"\n                  onClick={handleDismissAllComponents}\n                >\n                  Dismiss {componentsToUpdateFiltered.length > 1 ? \"All\" : \"\"}\n                </Button>\n                <Button\n                  size=\"sm\"\n                  className=\"shrink-0\"\n                  onClick={() => handleUpdateAllComponents()}\n                  loading={loadingUpdate}\n                  data-testid=\"update-all-button\"\n                >\n                  {breakingChanges.length > 0 ? \"Review All\" : \"Update All\"}\n                </Button>\n              </div>\n              <UpdateComponentModal\n                isMultiple={true}\n                open={isOpen}\n                setOpen={setIsOpen}\n                onUpdateNode={(ids) => handleUpdateAllComponents(true, ids)}\n                components={componentsToUpdateFiltered}\n              />\n            </motion.div>\n          </div>\n        )}\n    </AnimatePresence>",
        "imports": [
          {
            "source": "@xyflow/react",
            "items": [
              "useUpdateNodeInternals"
            ],
            "type": "named"
          },
          {
            "source": "framer-motion",
            "items": [
              "AnimatePresence",
              "motion"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useMemo",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/CustomNodes/helpers/process-node-advanced-fields",
            "items": [
              "processNodeAdvancedFields"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/nodes/use-post-validate-component-code",
            "items": [
              "usePostValidateComponentCode"
            ],
            "type": "named"
          },
          {
            "source": "@/modals/updateComponentModal",
            "items": [
              "UpdateComponentModal"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/typesStore",
            "items": [
              "useTypesStore"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "AnimatePresence",
          "Button",
          "UpdateComponentModal"
        ],
        "tailwind_classes_used": [
          "-translate-x-1/2",
          "absolute",
          "bottom-2",
          "cn(",
          "flex",
          "gap-3",
          "gap-4",
          "items-center",
          "left-1/2",
          "shrink-0",
          "text-sm",
          "w-[530px]",
          "z-50"
        ],
        "state_props_referenced": [
          "CONTAINER_VARIANTS",
          "componentsToUpdateFiltered",
          "handleDismissAllComponents",
          "isOpen",
          "loadingUpdate",
          "setIsOpen",
          "true"
        ],
        "file_size_lines": 261,
        "jsx_size_chars": 2342
      }
    },
    {
      "id": "ni0037",
      "type": "interface",
      "name": "HelperLines",
      "path": "frontend/src/pages/FlowPage/components/PageComponent/components/helper-lines.tsx",
      "category": "page",
      "description": "interface node: HelperLines (Page component)",
      "uidl_definition_conceptual": {
        "name": "HelperLines",
        "path": "frontend/src/pages/FlowPage/components/PageComponent/components/helper-lines.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@xyflow/react",
              "items": [
                "useViewport"
              ]
            }
          ],
          "local": [
            {
              "source": "../helpers/helper-lines",
              "items": [
                "HelperLinesState"
              ]
            }
          ]
        },
        "propDefinitions": {
          "helperLines": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useViewport"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "svg",
          "conditionalRendering": [],
          "loops": [],
          "components": []
        }
      },
      "ui_uidl": {
        "component_name": "HelperLines",
        "file_path": "frontend/src/pages/FlowPage/components/PageComponent/components/helper-lines.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "svg",
              "attributes": {
                "className": "helper-lines"
              },
              "category": "html"
            },
            {
              "type": "line",
              "attributes": {
                "className": "helper-line horizontal"
              },
              "category": "html"
            },
            {
              "type": "line",
              "attributes": {
                "className": "helper-line vertical"
              },
              "category": "html"
            }
          ],
          "components": [],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [],
          "custom": [],
          "html": []
        },
        "styling": {
          "tailwind_classes": [
            "helper-line",
            "helper-lines",
            "vertical",
            "horizontal"
          ],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "HelperLines",
        "file_path": "frontend/src/pages/FlowPage/components/PageComponent/components/helper-lines.tsx",
        "component_type": "other",
        "summary": "HelperLines component",
        "jsx_return_statement": "<svg className=\"helper-lines\">\n      {helperLines.horizontal && (\n        <line\n          x1={0}\n          y1={helperLines.horizontal.position * zoom + viewportY}\n          x2=\"100%\"\n          y2={helperLines.horizontal.position * zoom + viewportY}\n          className=\"helper-line horizontal\"\n        />\n      )}\n      {helperLines.vertical && (\n        <line\n          x1={helperLines.vertical.position * zoom + viewportX}\n          y1={0}\n          x2={helperLines.vertical.position * zoom + viewportX}\n          y2=\"100%\"\n          className=\"helper-line vertical\"\n        />\n      )}\n    </svg>",
        "jsx_simplified": "<svg className=\"helper-lines\">\n      {helperLines.horizontal && (\n        <line\n          x1={0}\n          y1={helperLines.horizontal.position * zoom + viewportY}\n          x2=\"100%\"\n          y2={helperLines.horizontal.position * zoom + viewportY}\n          className=\"helper-line horizontal\"\n        />\n      )}\n      {/* complex expression */}\n          y1={0}\n          x2={helperLines.vertical.position * zoom + viewportX}\n          y2=\"100%\"\n          className=\"helper-line vertical\"\n        />\n      )}\n    </svg>",
        "imports": [
          {
            "source": "@xyflow/react",
            "items": [
              "useViewport"
            ],
            "type": "named"
          },
          {
            "source": "../helpers/helper-lines",
            "items": [
              "HelperLinesState"
            ],
            "type": "named"
          }
        ],
        "props_definition": {
          "name": "HelperLinesProps",
          "definition": "helperLines: HelperLinesState;",
          "type": "interface"
        },
        "ui_components_used": [],
        "tailwind_classes_used": [
          "helper-line",
          "helper-lines",
          "horizontal",
          "vertical"
        ],
        "state_props_referenced": [],
        "file_size_lines": 37,
        "jsx_size_chars": 599
      }
    },
    {
      "id": "ni0038",
      "type": "interface",
      "name": "ShortcutDisplay",
      "path": "frontend/src/pages/FlowPage/components/nodeToolbarComponent/shortcutDisplay/index.tsx",
      "category": "page",
      "description": "interface node: ShortcutDisplay (Page component)",
      "uidl_definition_conceptual": {
        "name": "ShortcutDisplay",
        "path": "frontend/src/pages/FlowPage/components/nodeToolbarComponent/shortcutDisplay/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/components/common/renderIconComponent",
              "items": [
                "RenderIcons"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {
          "display_name": {
            "type": "any",
            "optional": false
          },
          "shortcut": {
            "type": "any",
            "optional": false
          },
          "sidebar = false": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": null,
          "conditionalRendering": [
            {
              "condition": "const fixedShortcut = shortcut?.split(\"+\");\n  retu",
              "component": "span"
            }
          ],
          "loops": [],
          "components": [
            "RenderIcons"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "ShortcutDisplay",
        "file_path": "frontend/src/pages/FlowPage/components/nodeToolbarComponent/shortcutDisplay/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex justify-center"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            },
            {
              "type": "RenderIcons",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex content-center items-center justify-center self-center text-xs"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "`ml-3 flex items-center rounded-sm bg-primary-hover px-1.5 py-[0.1em] text-muted`"
              },
              "category": "html"
            },
            {
              "type": "RenderIcons",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "RenderIcons"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "RenderIcons"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "px-1.5",
            "cn(",
            "`ml-3",
            "content-center",
            "flex",
            "justify-center",
            "self-center",
            "rounded-sm",
            "py-[0.1em]",
            "text-muted`",
            "text-xs",
            "items-center",
            "bg-primary-hover"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "ShortcutDisplay",
        "file_path": "frontend/src/pages/FlowPage/components/nodeToolbarComponent/shortcutDisplay/index.tsx",
        "component_type": "other",
        "summary": "ShortcutDisplay component",
        "jsx_return_statement": "<>\n      {sidebar ? (\n        <div className=\"flex justify-center\">\n          {display_name && <span> {display_name} </span>}\n          <span\n            className={cn(\n              \"flex h-4 w-4 items-center justify-center rounded-sm bg-muted text-muted-foreground\",\n              display_name && \"ml-3\",\n            )}\n          >\n            <RenderIcons filteredShortcut={fixedShortcut} />\n          </span>\n        </div>\n      ) : (\n        <div className=\"flex content-center items-center justify-center self-center text-xs\">\n          <span> {display_name} </span>\n          <span\n            className={`ml-3 flex items-center rounded-sm bg-primary-hover px-1.5 py-[0.1em] text-muted`}\n          >\n            <RenderIcons filteredShortcut={fixedShortcut} />\n          </span>\n        </div>\n      )}\n    </>",
        "jsx_simplified": "<>\n      {/* complex expression */} </span>}\n          <span\n            className={/* complex expression */}\n          >\n            <RenderIcons filteredShortcut={fixedShortcut} />\n          </span>\n        </div>\n      ) : (\n        <div className=\"flex content-center items-center justify-center self-center text-xs\">\n          <span> {display_name} </span>\n          <span\n            className={`ml-3 flex items-center rounded-sm bg-primary-hover px-1.5 py-[0.1em] text-muted`}\n          >\n            <RenderIcons filteredShortcut={fixedShortcut} />\n          </span>\n        </div>\n      )}\n    </>",
        "imports": [
          {
            "source": "@/components/common/renderIconComponent",
            "items": [
              "RenderIcons"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "RenderIcons"
        ],
        "tailwind_classes_used": [
          "`ml-3",
          "bg-primary-hover",
          "cn(",
          "content-center",
          "flex",
          "items-center",
          "justify-center",
          "px-1.5",
          "py-[0.1em]",
          "rounded-sm",
          "self-center",
          "text-muted`",
          "text-xs"
        ],
        "state_props_referenced": [
          "display_name",
          "fixedShortcut"
        ],
        "file_size_lines": 40,
        "jsx_size_chars": 818
      }
    },
    {
      "id": "ni0039",
      "type": "interface",
      "name": "ToolbarSelectItem",
      "path": "frontend/src/pages/FlowPage/components/nodeToolbarComponent/toolbarSelectItem/index.tsx",
      "category": "page",
      "description": "interface node: ToolbarSelectItem (Page component)",
      "uidl_definition_conceptual": {
        "name": "ToolbarSelectItem",
        "path": "frontend/src/pages/FlowPage/components/nodeToolbarComponent/toolbarSelectItem/index.tsx",
        "imports": {
          "react": [],
          "libraries": [],
          "local": [
            {
              "source": "../../../../../components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "../../../../../components/common/renderIconComponent",
              "items": [
                "RenderIcons"
              ]
            }
          ]
        },
        "propDefinitions": {
          "value": {
            "type": "any",
            "optional": false
          },
          "icon": {
            "type": "any",
            "optional": false
          },
          "style": {
            "type": "any",
            "optional": false
          },
          "dataTestId": {
            "type": "any",
            "optional": false
          },
          "ping": {
            "type": "any",
            "optional": false
          },
          "shortcut": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "ForwardedIconComponent",
            "RenderIcons"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "ToolbarSelectItem",
        "file_path": "frontend/src/pages/FlowPage/components/nodeToolbarComponent/toolbarSelectItem/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "`absolute right-2 top-[0.43em] flex items-center rounded-sm bg-muted px-1.5 py-[0.1em] text-muted-foreground`"
              },
              "category": "html"
            },
            {
              "type": "RenderIcons",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "RenderIcons",
            "ForwardedIconComponent"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "ForwardedIconComponent",
            "RenderIcons"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "px-1.5",
            "right-2",
            "flex",
            "rounded-sm",
            "py-[0.1em]",
            "text-muted-foreground`",
            "`absolute",
            "bg-muted",
            "top-[0.43em]",
            "items-center"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "ToolbarSelectItem",
        "file_path": "frontend/src/pages/FlowPage/components/nodeToolbarComponent/toolbarSelectItem/index.tsx",
        "component_type": "other",
        "summary": "ToolbarSelectItem component",
        "jsx_return_statement": "<div className={`flex ${style}`} data-testid={dataTestId}>\n      <ForwardedIconComponent\n        name={icon}\n        className={`mr-2 mt-[0.15em] h-4 w-4 ${ping && \"animate-pulse text-green-500\"}`}\n      />\n      <span>{value}</span>\n      <span\n        className={`absolute right-2 top-[0.43em] flex items-center rounded-sm bg-muted px-1.5 py-[0.1em] text-muted-foreground`}\n      >\n        <RenderIcons filteredShortcut={fixedShortcut} />\n      </span>\n    </div>",
        "jsx_simplified": "<div className={`flex ${style}`} data-testid={dataTestId}>\n      <ForwardedIconComponent\n        name={icon}\n        className={`mr-2 mt-[0.15em] h-4 w-4 ${ping && \"animate-pulse text-green-500\"}`}\n      />\n      <span>{value}</span>\n      <span\n        className={/* complex expression */}\n      >\n        <RenderIcons filteredShortcut={fixedShortcut} />\n      </span>\n    </div>",
        "imports": [
          {
            "source": "../../../../../components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../../../../components/common/renderIconComponent",
            "items": [
              "RenderIcons"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "ForwardedIconComponent",
          "RenderIcons"
        ],
        "tailwind_classes_used": [
          "`absolute",
          "bg-muted",
          "flex",
          "items-center",
          "px-1.5",
          "py-[0.1em]",
          "right-2",
          "rounded-sm",
          "text-muted-foreground`",
          "top-[0.43em]"
        ],
        "state_props_referenced": [
          "dataTestId",
          "fixedShortcut",
          "icon",
          "style",
          "value"
        ],
        "file_size_lines": 28,
        "jsx_size_chars": 465
      }
    },
    {
      "id": "ni0040",
      "type": "interface",
      "name": "FlowBuildingComponent",
      "path": "frontend/src/pages/FlowPage/components/flowBuildingComponent/index.tsx",
      "category": "page",
      "description": "interface node: FlowBuildingComponent (Page component)",
      "uidl_definition_conceptual": {
        "name": "FlowBuildingComponent",
        "path": "frontend/src/pages/FlowPage/components/flowBuildingComponent/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useMemo",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "framer-motion",
              "items": [
                "AnimatePresence",
                "motion"
              ]
            },
            {
              "source": "react-markdown",
              "items": [
                "Markdown"
              ]
            },
            {
              "source": "remark-gfm",
              "items": [
                "remarkGfm"
              ]
            },
            {
              "source": "@/CustomNodes/GenericNode/components/NodeStatus/utils/format-run-time",
              "items": [
                "normalizeTimeString"
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/core/border-trail",
              "items": [
                "BorderTrail"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/components/ui/TextShimmer",
              "items": [
                "TextShimmer"
              ]
            },
            {
              "source": "@/constants/enums",
              "items": [
                "BuildStatus"
              ]
            },
            {
              "source": "@/stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": [
            {
              "source": "./helpers/visual-variants",
              "items": [
                "CONTAINER_VARIANTS",
                "DISMISS_BUTTON_VARIANTS",
                "getTimeVariants",
                "RETRY_BUTTON_VARIANTS",
                "STOP_BUTTON_VARIANTS",
                ""
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "duration": {
            "type": "any",
            "defaultValue": "0"
          },
          "dismissed": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {
          "errorButtonsRef": {
            "type": "HTMLDivElement",
            "initialValue": "null"
          },
          "stopButtonRef": {
            "type": "HTMLDivElement",
            "initialValue": "null"
          },
          "prevIsBuilding": {
            "type": "any",
            "initialValue": "isBuilding"
          }
        },
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useFlowStore"
        ],
        "eventHandlers": {
          "handleDismiss": {
            "type": "arrow_function",
            "async": false
          },
          "handleStop": {
            "type": "arrow_function",
            "async": false
          },
          "handleRetry": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "TextShimmer",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "AnimatePresence",
            "ForwardedIconComponent",
            "BorderTrail",
            "TextShimmer",
            "Button",
            "HTMLDivElement",
            "Markdown"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "FlowBuildingComponent",
        "file_path": "frontend/src/pages/FlowPage/components/flowBuildingComponent/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "TextShimmer",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "TextShimmer"
          ],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "HTMLDivElement",
            "TextShimmer",
            "AnimatePresence",
            "BorderTrail",
            "ForwardedIconComponent",
            "Markdown"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "inline-block",
            "align-text-top",
            "z-50",
            "absolute",
            "gap-4",
            "text-xs",
            "truncate-doubleline",
            "w-full",
            "gap-2",
            "min-h-10",
            "bottom-2",
            "w-5",
            "justify-between",
            "my-1.5",
            "items-center",
            "-translate-x-1/2",
            "left-1/2",
            "font-mono",
            "w-[530px]",
            "right-0",
            "w-fit",
            "cn(",
            "underline",
            "text-primary",
            "flex",
            "relative",
            "h-5",
            "max-w-full"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "onClick": "handleRetry"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "text-primary",
                "onClick": "handleDismiss"
              },
              "type": "button"
            },
            {
              "attributes": {
                "onClick": "handleStop"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "FlowBuildingComponent",
        "file_path": "frontend/src/pages/FlowPage/components/flowBuildingComponent/index.tsx",
        "component_type": "component",
        "summary": "FlowBuilding UI component",
        "jsx_return_statement": ") => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isBuilding]);\n\n  const displayTime = duration ?? 0;\n  const secondsValue = displayTime / 1000;\n  const humanizedTime =\n    normalizeTimeString(`${secondsValue.toFixed(1)}seconds`) ??\n    `${secondsValue.toFixed(1)}s`;\n\n  const buildingContent = useMemo(() => {\n    if (!isBuilding) return null;\n    return (\n      <TextShimmer duration={1}>\n        {statusBuilding.length > 0\n          ? `Running ${statusBuilding[0]?.id}`\n          : \"Running flow\"}\n      </TextShimmer>",
        "jsx_simplified": ") => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isBuilding]);\n\n  const displayTime = duration ?? 0;\n  const secondsValue = displayTime / 1000;\n  const humanizedTime =\n    normalizeTimeString(`${secondsValue.toFixed(1)}seconds`) ??\n    `${secondsValue.toFixed(1)}s`;\n\n  const buildingContent = useMemo(() => {\n    if (!isBuilding) return null;\n    return (\n      <TextShimmer duration={1}>\n        {statusBuilding.length > 0\n          ? `Running ${statusBuilding[0]?.id}`\n          : \"Running flow\"}\n      </TextShimmer>",
        "imports": [
          {
            "source": "framer-motion",
            "items": [
              "AnimatePresence",
              "motion"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useEffect",
              "useMemo",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-markdown",
            "items": [
              "Markdown"
            ],
            "type": "default"
          },
          {
            "source": "remark-gfm",
            "items": [
              "remarkGfm"
            ],
            "type": "default"
          },
          {
            "source": "@/CustomNodes/GenericNode/components/NodeStatus/utils/format-run-time",
            "items": [
              "normalizeTimeString"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/border-trail",
            "items": [
              "BorderTrail"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/TextShimmer",
            "items": [
              "TextShimmer"
            ],
            "type": "named"
          },
          {
            "source": "@/constants/enums",
            "items": [
              "BuildStatus"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          },
          {
            "source": "./helpers/visual-variants",
            "items": [
              "CONTAINER_VARIANTS",
              "DISMISS_BUTTON_VARIANTS",
              "getTimeVariants",
              "RETRY_BUTTON_VARIANTS",
              "STOP_BUTTON_VARIANTS",
              ""
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "TextShimmer"
        ],
        "tailwind_classes_used": [],
        "state_props_referenced": [],
        "file_size_lines": 285,
        "jsx_size_chars": 558
      }
    },
    {
      "id": "ni0041",
      "type": "interface",
      "name": "SelectionMenu",
      "path": "frontend/src/pages/FlowPage/components/SelectionMenuComponent/index.tsx",
      "category": "page",
      "description": "interface node: SelectionMenu (Page component)",
      "uidl_definition_conceptual": {
        "name": "SelectionMenu",
        "path": "frontend/src/pages/FlowPage/components/SelectionMenuComponent/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@xyflow/react",
              "items": [
                "NodeToolbar"
              ]
            },
            {
              "source": "react-hotkeys-hook",
              "items": [
                "useHotkeys"
              ]
            }
          ],
          "local": [
            {
              "source": "../../../../components/common/shadTooltipComponent",
              "items": [
                "ShadTooltip"
              ]
            },
            {
              "source": "../../../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../../../icons/GradientSparkles",
              "items": [
                "GradientGroup"
              ]
            },
            {
              "source": "../../../../stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "../../../../utils/reactflowUtils",
              "items": [
                "validateSelection"
              ]
            }
          ]
        },
        "propDefinitions": {
          "onClick": {
            "type": "any",
            "optional": false
          },
          "nodes": {
            "type": "any",
            "optional": false
          },
          "isVisible": {
            "type": "any",
            "optional": false
          },
          "lastSelection": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "disable": {
            "type": "boolean",
            "defaultValue": "lastSelection && edges.length > 0\n      ? validateSelection(lastSelection!, edges"
          },
          "errors": {
            "type": "string[]",
            "defaultValue": "[]"
          },
          "isOpen": {
            "type": "any",
            "defaultValue": "false"
          },
          "isTransitioning": {
            "type": "any",
            "defaultValue": "false"
          },
          "lastNodes": {
            "type": "any",
            "defaultValue": "nodes"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "isOpen",
              "setIsOpen"
            ],
            "description": "Effect with 2 dependencies"
          },
          {
            "dependencies": [
              "isOpen"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useFlowStore"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "NodeToolbar",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "NodeToolbar",
            "ShadTooltip",
            "GradientGroup"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "SelectionMenu",
        "file_path": "frontend/src/pages/FlowPage/components/SelectionMenuComponent/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "NodeToolbar",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "h-10 w-28 overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": ""
              },
              "category": "html"
            },
            {
              "type": "ShadTooltip",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "onClick": "onClick",
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "GradientGroup",
              "attributes": {
                "className": "text-primary",
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "onClick": "onClick",
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "GradientGroup",
              "attributes": {
                "className": "text-primary",
                "disabled": true
              },
              "category": "component"
            }
          ],
          "components": [
            "ShadTooltip",
            "GradientGroup",
            "NodeToolbar",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "list",
              "description": "Dynamic list rendering with map"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "NodeToolbar",
            "ShadTooltip",
            "GradientGroup"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "w-28",
            "overflow-hidden",
            "h-10",
            "text-primary"
          ],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "onClick": "onClick",
                "disabled": true
              },
              "type": "button"
            },
            {
              "attributes": {
                "onClick": "onClick",
                "disabled": true
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "dynamic_list",
            "arrays": [
              "lastNodes"
            ],
            "description": "Dynamic rendering of 1 lists"
          }
        ],
        "primary_layout": "list"
      },
      "ui_uidl_complete": {
        "component_name": "SelectionMenu",
        "file_path": "frontend/src/pages/FlowPage/components/SelectionMenuComponent/index.tsx",
        "component_type": "other",
        "summary": "nodes get saved to not be gone after the toolbar closes",
        "jsx_return_statement": "<NodeToolbar\n      isVisible={isOpen}\n      offset={5}\n      nodeId={\n        lastNodes && lastNodes.length > 0 ? lastNodes.map((n) => n.id) : []\n      }\n    >\n      <div className=\"h-10 w-28 overflow-hidden\">\n        <div\n          className={\n            \"duration-400 h-10 w-24 rounded-md border border-indigo-300 bg-background px-2.5 text-primary shadow-inner transition-all ease-in-out\" +\n            (isTransitioning ? \" opacity-100\" : \" opacity-0\")\n          }\n        >\n          {errors.length > 0 ? (\n            <ShadTooltip content={errors[0]} side={\"top\"}>\n              <Button\n                unstyled\n                className={`${\n                  disable\n                    ? \"flex h-full w-full cursor-not-allowed items-center justify-between text-sm text-muted-foreground\"\n                    : \"flex h-full w-full items-center justify-between text-sm\"\n                }`}\n                onClick={onClick}\n                disabled={disable}\n                data-testid=\"error-group-node\"\n              >\n                <GradientGroup\n                  strokeWidth={1.5}\n                  size={22}\n                  className=\"text-primary\"\n                  disabled={disable}\n                />\n                Group\n              </Button>\n            </ShadTooltip>\n          ) : (\n            <Button\n              unstyled\n              className={`${\n                disable\n                  ? \"flex h-full w-full cursor-not-allowed items-center justify-between text-sm text-muted-foreground\"\n                  : \"flex h-full w-full items-center justify-between text-sm\"\n              }`}\n              onClick={onClick}\n              disabled={disable}\n              data-testid=\"group-node\"\n            >\n              <GradientGroup\n                strokeWidth={1.5}\n                size={22}\n                className=\"text-primary\"\n                disabled={disable}\n              />\n              Group\n            </Button>\n          )}\n        </div>\n      </div>\n    </NodeToolbar>",
        "jsx_simplified": "<NodeToolbar\n      isVisible={isOpen}\n      offset={5}\n      nodeId={\n        lastNodes && lastNodes.length > 0 ? lastNodes.map((n) => n.id) : []\n      }\n    >\n      <div className=\"h-10 w-28 overflow-hidden\">\n        <div\n          className={/* complex expression */}\n        >\n          {errors.length > 0 ? (\n            <ShadTooltip content={errors[0]} side={\"top\"}>\n              <Button\n                unstyled\n                className={/* complex expression */}`}\n                onClick={onClick}\n                disabled={disable}\n                data-testid=\"error-group-node\"\n              >\n                <GradientGroup\n                  strokeWidth={1.5}\n                  size={22}\n                  className=\"text-primary\"\n                  disabled={disable}\n                />\n                Group\n              </Button>\n            </ShadTooltip>\n          ) : (\n            <Button\n              unstyled\n              className={/* complex expression */}`}\n              onClick={onClick}\n              disabled={disable}\n              data-testid=\"group-node\"\n            >\n              <GradientGroup\n                strokeWidth={1.5}\n                size={22}\n                className=\"text-primary\"\n                disabled={disable}\n              />\n              Group\n            </Button>\n          )}\n        </div>\n      </div>\n    </NodeToolbar>",
        "imports": [
          {
            "source": "@xyflow/react",
            "items": [
              "NodeToolbar"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-hotkeys-hook",
            "items": [
              "useHotkeys"
            ],
            "type": "named"
          },
          {
            "source": "../../../../components/common/shadTooltipComponent",
            "items": [
              "ShadTooltip"
            ],
            "type": "default"
          },
          {
            "source": "../../../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../../../icons/GradientSparkles",
            "items": [
              "GradientGroup"
            ],
            "type": "named"
          },
          {
            "source": "../../../../stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "../../../../utils/reactflowUtils",
            "items": [
              "validateSelection"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "GradientGroup",
          "NodeToolbar",
          "ShadTooltip"
        ],
        "tailwind_classes_used": [
          "h-10",
          "overflow-hidden",
          "text-primary",
          "w-28"
        ],
        "state_props_referenced": [
          "disable",
          "isOpen"
        ],
        "file_size_lines": 119,
        "jsx_size_chars": 2022
      }
    },
    {
      "id": "ni0042",
      "type": "interface",
      "name": "FlowSidebarComponent",
      "path": "frontend/src/pages/FlowPage/components/flowSidebarComponent/index.tsx",
      "category": "page",
      "description": "interface node: FlowSidebarComponent (Page component)",
      "uidl_definition_conceptual": {
        "name": "FlowSidebarComponent",
        "path": "frontend/src/pages/FlowPage/components/flowSidebarComponent/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "memo",
                "useCallback",
                "useEffect",
                "useMemo",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "fuse.js",
              "items": [
                "Fuse"
              ]
            },
            {
              "source": "lodash",
              "items": [
                "cloneDeep"
              ]
            },
            {
              "source": "react-hotkeys-hook",
              "items": [
                "useHotkeys"
              ]
            },
            {
              "source": "zustand/react/shallow",
              "items": [
                "useShallow"
              ]
            },
            {
              "source": "@/components/ui/sidebar",
              "items": [
                "Sidebar",
                "SidebarContent",
                "SidebarFooter",
                "useSidebar",
                ""
              ]
            },
            {
              "source": "@/components/ui/skeletonGroup",
              "items": [
                "SkeletonGroup"
              ]
            },
            {
              "source": "@/hooks/use-add-component",
              "items": [
                "useAddComponent"
              ]
            },
            {
              "source": "@/stores/shortcuts",
              "items": [
                "useShortcutsStore"
              ]
            },
            {
              "source": "@/stores/storeStore",
              "items": [
                "useStoreStore"
              ]
            },
            {
              "source": "@/utils/reactflowUtils",
              "items": [
                "checkChatInput",
                "checkWebhookInput"
              ]
            },
            {
              "source": "@/utils/styleUtils",
              "items": [
                "nodeColors",
                "SIDEBAR_BUNDLES",
                "SIDEBAR_CATEGORIES",
                ""
              ]
            }
          ],
          "local": [
            {
              "source": "../../../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "../../../../stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "../../../../stores/typesStore",
              "items": [
                "useTypesStore"
              ]
            },
            {
              "source": "../PageComponent/utils/is-wrapped-with-class",
              "items": [
                "isWrappedWithClass"
              ]
            },
            {
              "source": "./components/categoryGroup",
              "items": [
                "CategoryGroup"
              ]
            },
            {
              "source": "./components/emptySearchComponent",
              "items": [
                "NoResultsMessage"
              ]
            },
            {
              "source": "./components/sidebarBundles",
              "items": [
                "MemoizedSidebarGroup"
              ]
            },
            {
              "source": "./components/sidebarFooterButtons",
              "items": [
                "SidebarMenuButtons"
              ]
            },
            {
              "source": "./components/sidebarHeader",
              "items": [
                "SidebarHeaderComponent"
              ]
            },
            {
              "source": "./helpers/apply-beta-filter",
              "items": [
                "applyBetaFilter"
              ]
            },
            {
              "source": "./helpers/apply-edge-filter",
              "items": [
                "applyEdgeFilter"
              ]
            },
            {
              "source": "./helpers/apply-legacy-filter",
              "items": [
                "applyLegacyFilter"
              ]
            },
            {
              "source": "./helpers/combined-results",
              "items": [
                "combinedResultsFn"
              ]
            },
            {
              "source": "./helpers/filtered-data",
              "items": [
                "filteredDataFn"
              ]
            },
            {
              "source": "./helpers/normalize-string",
              "items": [
                "normalizeString"
              ]
            },
            {
              "source": "./helpers/sensitive-sort",
              "items": [
                "sensitiveSort"
              ]
            },
            {
              "source": "./helpers/traditional-search-metadata",
              "items": [
                "traditionalSearchMetadata"
              ]
            },
            {
              "source": "./types",
              "items": [
                "UniqueInputsComponents"
              ]
            }
          ]
        },
        "propDefinitions": {
          "isLoading": {
            "type": "any",
            "optional": false
          },
          "showLegacy": {
            "type": "boolean",
            "optional": true
          },
          "setShowLegacy": {
            "type": "(value: boolean) => void",
            "optional": true
          }
        },
        "stateDefinitions": {
          "dataFilter": {
            "type": "any",
            "defaultValue": "data"
          },
          "search": {
            "type": "any",
            "defaultValue": "\"\""
          },
          "openCategories": {
            "type": "string[]",
            "defaultValue": "[]"
          },
          "showConfig": {
            "type": "any",
            "defaultValue": "false"
          },
          "showBeta": {
            "type": "any",
            "defaultValue": "true"
          },
          "showLegacy": {
            "type": "any",
            "defaultValue": "false"
          },
          "isInputFocused": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {
          "searchInputRef": {
            "type": "HTMLInputElement | null",
            "initialValue": "null"
          }
        },
        "effects": [
          {
            "dependencies": [
              "filterType",
              "setOpen"
            ],
            "description": "Effect with 2 dependencies"
          },
          {
            "dependencies": [
              "finalFilteredData",
              "search",
              "filterType",
              "getFilterEdge"
            ],
            "description": "Effect with 4 dependencies"
          },
          {
            "dependencies": [
              "data"
            ],
            "description": "Effect with 1 dependencies"
          },
          {
            "dependencies": [
              "getFilterEdge",
              "data"
            ],
            "description": "Effect with 2 dependencies"
          },
          {
            "dependencies": [
              "search",
              "getFilterEdge"
            ],
            "description": "Effect with 2 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useStoreStore",
          "useFlowStore",
          "useSidebar",
          "useShortcutsStore",
          "useTypesStore",
          "useAddComponent"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "Sidebar",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Sidebar",
            "SidebarHeaderComponent",
            "SidebarFooter",
            "SidebarMenuButtons",
            "MemoizedSidebarGroup",
            "SkeletonGroup",
            "CategoryGroup",
            "HTMLInputElement",
            "HTMLDivElement",
            "SidebarContent",
            "NoResultsMessage"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "FlowSidebarComponent",
        "file_path": "frontend/src/pages/FlowPage/components/flowSidebarComponent/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "Sidebar",
              "attributes": {
                "className": "noflow select-none"
              },
              "category": "component"
            },
            {
              "type": "SidebarHeaderComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "SidebarContent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-1 p-3"
              },
              "category": "html"
            },
            {
              "type": "SkeletonGroup",
              "attributes": {
                "className": "my-0.5 h-7"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "h-8"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-1 px-3 pt-2"
              },
              "category": "html"
            },
            {
              "type": "SkeletonGroup",
              "attributes": {
                "className": "my-0.5 h-7"
              },
              "category": "component"
            },
            {
              "type": "CategoryGroup",
              "attributes": {
                "onDragStart": "onDragStart"
              },
              "category": "component"
            },
            {
              "type": "MemoizedSidebarGroup",
              "attributes": {
                "onDragStart": "onDragStart"
              },
              "category": "component"
            },
            {
              "type": "NoResultsMessage",
              "attributes": {
                "onClearSearch": "handleClearSearch"
              },
              "category": "component"
            },
            {
              "type": "SidebarFooter",
              "attributes": {
                "className": "border-t p-4 py-3"
              },
              "category": "component"
            },
            {
              "type": "SidebarMenuButtons",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "CategoryGroup",
            "NoResultsMessage",
            "MemoizedSidebarGroup",
            "SidebarHeaderComponent",
            "Sidebar",
            "SidebarFooter",
            "SidebarMenuButtons",
            "SidebarContent",
            "SkeletonGroup"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "Fuse",
            "HTMLInputElement",
            "HTMLDivElement",
            "Sidebar",
            "SidebarHeaderComponent",
            "SidebarContent",
            "SkeletonGroup",
            "CategoryGroup",
            "MemoizedSidebarGroup",
            "NoResultsMessage",
            "SidebarFooter",
            "SidebarMenuButtons"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "flex-col",
            "border-t",
            "select-none",
            "pt-2",
            "py-3",
            "gap-2",
            "flex",
            "my-0.5",
            "gap-1",
            "h-8",
            "p-4",
            "px-3",
            "h-7",
            "noflow",
            "p-3"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "dynamic_list",
            "arrays": [
              "fuseResults"
            ],
            "description": "Dynamic rendering of 1 lists"
          }
        ],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "FlowSidebarComponent",
        "file_path": "frontend/src/pages/FlowPage/components/flowSidebarComponent/index.tsx",
        "component_type": "component",
        "summary": "FlowSidebar UI component",
        "jsx_return_statement": "<Sidebar\n      collapsible=\"offcanvas\"\n      data-testid=\"shad-sidebar\"\n      className=\"noflow select-none\"\n    >\n      <SidebarHeaderComponent\n        showConfig={showConfig}\n        setShowConfig={setShowConfig}\n        showBeta={showBeta}\n        setShowBeta={setShowBeta}\n        showLegacy={showLegacy}\n        setShowLegacy={setShowLegacy}\n        searchInputRef={searchInputRef}\n        isInputFocused={isInputFocused}\n        search={search}\n        handleInputFocus={handleInputFocus}\n        handleInputBlur={handleInputBlur}\n        handleInputChange={handleInputChange}\n        filterType={filterType}\n        setFilterEdge={setFilterEdge}\n        setFilterData={setFilterData}\n        data={data}\n      />\n\n      <SidebarContent>\n        {isLoading ? (\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"flex flex-col gap-1 p-3\">\n              <SkeletonGroup count={13} className=\"my-0.5 h-7\" />\n            </div>\n            <div className=\"h-8\" />\n            <div className=\"flex flex-col gap-1 px-3 pt-2\">\n              <SkeletonGroup count={21} className=\"my-0.5 h-7\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            {hasResults ? (\n              <>\n                <CategoryGroup\n                  dataFilter={dataFilter}\n                  sortedCategories={sortedCategories}\n                  CATEGORIES={CATEGORIES}\n                  openCategories={openCategories}\n                  setOpenCategories={setOpenCategories}\n                  search={search}\n                  nodeColors={nodeColors}\n                  onDragStart={onDragStart}\n                  sensitiveSort={sensitiveSort}\n                />\n\n                {hasBundleItems && (\n                  <MemoizedSidebarGroup\n                    BUNDLES={BUNDLES}\n                    search={search}\n                    sortedCategories={sortedCategories}\n                    dataFilter={dataFilter}\n                    nodeColors={nodeColors}\n                    onDragStart={onDragStart}\n                    sensitiveSort={sensitiveSort}\n                    openCategories={openCategories}\n                    setOpenCategories={setOpenCategories}\n                    handleKeyDownInput={handleKeyDownInput}\n                  />\n                )}\n              </>\n            ) : (\n              <NoResultsMessage onClearSearch={handleClearSearch} />\n            )}\n          </>\n        )}\n      </SidebarContent>\n      <SidebarFooter className=\"border-t p-4 py-3\">\n        <SidebarMenuButtons\n          hasStore={hasStore}\n          customComponent={customComponent}\n          addComponent={addComponent}\n          isLoading={isLoading}\n        />\n      </SidebarFooter>\n    </Sidebar>",
        "jsx_simplified": "<Sidebar\n      collapsible=\"offcanvas\"\n      data-testid=\"shad-sidebar\"\n      className=\"noflow select-none\"\n    >\n      <SidebarHeaderComponent\n        showConfig={showConfig}\n        setShowConfig={setShowConfig}\n        showBeta={showBeta}\n        setShowBeta={setShowBeta}\n        showLegacy={showLegacy}\n        setShowLegacy={setShowLegacy}\n        searchInputRef={searchInputRef}\n        isInputFocused={isInputFocused}\n        search={search}\n        handleInputFocus={handleInputFocus}\n        handleInputBlur={handleInputBlur}\n        handleInputChange={handleInputChange}\n        filterType={filterType}\n        setFilterEdge={setFilterEdge}\n        setFilterData={setFilterData}\n        data={data}\n      />\n\n      <SidebarContent>\n        {/* complex expression */} className=\"my-0.5 h-7\" />\n            </div>\n            <div className=\"h-8\" />\n            <div className=\"flex flex-col gap-1 px-3 pt-2\">\n              <SkeletonGroup count={21} className=\"my-0.5 h-7\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            {/* complex expression */}\n                  sortedCategories={sortedCategories}\n                  CATEGORIES={CATEGORIES}\n                  openCategories={openCategories}\n                  setOpenCategories={setOpenCategories}\n                  search={search}\n                  nodeColors={nodeColors}\n                  onDragStart={onDragStart}\n                  sensitiveSort={sensitiveSort}\n                />\n\n                {hasBundleItems && (\n                  <MemoizedSidebarGroup\n                    BUNDLES={BUNDLES}\n                    search={search}\n                    sortedCategories={sortedCategories}\n                    dataFilter={dataFilter}\n                    nodeColors={nodeColors}\n                    onDragStart={onDragStart}\n                    sensitiveSort={sensitiveSort}\n                    openCategories={openCategories}\n                    setOpenCategories={setOpenCategories}\n                    handleKeyDownInput={handleKeyDownInput}\n                  />\n                )}\n              </>\n            ) : (\n              <NoResultsMessage onClearSearch={handleClearSearch} />\n            )}\n          </>\n        )}\n      </SidebarContent>\n      <SidebarFooter className=\"border-t p-4 py-3\">\n        <SidebarMenuButtons\n          hasStore={hasStore}\n          customComponent={customComponent}\n          addComponent={addComponent}\n          isLoading={isLoading}\n        />\n      </SidebarFooter>\n    </Sidebar>",
        "imports": [
          {
            "source": "fuse.js",
            "items": [
              "Fuse"
            ],
            "type": "default"
          },
          {
            "source": "lodash",
            "items": [
              "cloneDeep"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "memo",
              "useCallback",
              "useEffect",
              "useMemo",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-hotkeys-hook",
            "items": [
              "useHotkeys"
            ],
            "type": "named"
          },
          {
            "source": "zustand/react/shallow",
            "items": [
              "useShallow"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/sidebar",
            "items": [
              "Sidebar",
              "SidebarContent",
              "SidebarFooter",
              "useSidebar",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/skeletonGroup",
            "items": [
              "SkeletonGroup"
            ],
            "type": "default"
          },
          {
            "source": "@/hooks/use-add-component",
            "items": [
              "useAddComponent"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/shortcuts",
            "items": [
              "useShortcutsStore"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/storeStore",
            "items": [
              "useStoreStore"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/reactflowUtils",
            "items": [
              "checkChatInput",
              "checkWebhookInput"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/styleUtils",
            "items": [
              "nodeColors",
              "SIDEBAR_BUNDLES",
              "SIDEBAR_CATEGORIES",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../../../stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "../../../../stores/typesStore",
            "items": [
              "useTypesStore"
            ],
            "type": "named"
          },
          {
            "source": "../PageComponent/utils/is-wrapped-with-class",
            "items": [
              "isWrappedWithClass"
            ],
            "type": "default"
          },
          {
            "source": "./components/categoryGroup",
            "items": [
              "CategoryGroup"
            ],
            "type": "named"
          },
          {
            "source": "./components/emptySearchComponent",
            "items": [
              "NoResultsMessage"
            ],
            "type": "default"
          },
          {
            "source": "./components/sidebarBundles",
            "items": [
              "MemoizedSidebarGroup"
            ],
            "type": "default"
          },
          {
            "source": "./components/sidebarFooterButtons",
            "items": [
              "SidebarMenuButtons"
            ],
            "type": "default"
          },
          {
            "source": "./components/sidebarHeader",
            "items": [
              "SidebarHeaderComponent"
            ],
            "type": "named"
          },
          {
            "source": "./helpers/apply-beta-filter",
            "items": [
              "applyBetaFilter"
            ],
            "type": "named"
          },
          {
            "source": "./helpers/apply-edge-filter",
            "items": [
              "applyEdgeFilter"
            ],
            "type": "named"
          },
          {
            "source": "./helpers/apply-legacy-filter",
            "items": [
              "applyLegacyFilter"
            ],
            "type": "named"
          },
          {
            "source": "./helpers/combined-results",
            "items": [
              "combinedResultsFn"
            ],
            "type": "named"
          },
          {
            "source": "./helpers/filtered-data",
            "items": [
              "filteredDataFn"
            ],
            "type": "named"
          },
          {
            "source": "./helpers/normalize-string",
            "items": [
              "normalizeString"
            ],
            "type": "named"
          },
          {
            "source": "./helpers/sensitive-sort",
            "items": [
              "sensitiveSort"
            ],
            "type": "default"
          },
          {
            "source": "./helpers/traditional-search-metadata",
            "items": [
              "traditionalSearchMetadata"
            ],
            "type": "named"
          },
          {
            "source": "./types",
            "items": [
              "UniqueInputsComponents"
            ],
            "type": "named"
          }
        ],
        "props_definition": {
          "name": "FlowSidebarComponentProps",
          "definition": "isLoading?: boolean;\n  showLegacy?: boolean;\n  setShowLegacy?: (value: boolean) => void;",
          "type": "interface"
        },
        "ui_components_used": [
          "CategoryGroup",
          "MemoizedSidebarGroup",
          "NoResultsMessage",
          "Sidebar",
          "SidebarContent",
          "SidebarFooter",
          "SidebarHeaderComponent",
          "SidebarMenuButtons",
          "SkeletonGroup"
        ],
        "tailwind_classes_used": [
          "border-t",
          "flex",
          "flex-col",
          "gap-1",
          "gap-2",
          "h-7",
          "h-8",
          "my-0.5",
          "noflow",
          "p-3",
          "p-4",
          "pt-2",
          "px-3",
          "py-3",
          "select-none"
        ],
        "state_props_referenced": [
          "BUNDLES",
          "CATEGORIES",
          "addComponent",
          "customComponent",
          "data",
          "dataFilter",
          "filterType",
          "handleClearSearch",
          "handleInputBlur",
          "handleInputChange",
          "handleInputFocus",
          "handleKeyDownInput",
          "hasStore",
          "isInputFocused",
          "isLoading",
          "nodeColors",
          "openCategories",
          "search",
          "searchInputRef",
          "sensitiveSort"
        ],
        "file_size_lines": 388,
        "jsx_size_chars": 2729
      }
    },
    {
      "id": "ni0043",
      "type": "interface",
      "name": "SidebarFilterComponent",
      "path": "frontend/src/pages/FlowPage/components/flowSidebarComponent/components/sidebarFilterComponent/index.tsx",
      "category": "page",
      "description": "interface node: SidebarFilterComponent (Page component)",
      "uidl_definition_conceptual": {
        "name": "SidebarFilterComponent",
        "path": "frontend/src/pages/FlowPage/components/flowSidebarComponent/components/sidebarFilterComponent/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/common/shadTooltipComponent",
              "items": [
                "ShadTooltip"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {
          "isInput": {
            "type": "any",
            "optional": false
          },
          "type": {
            "type": "any",
            "optional": false
          },
          "color": {
            "type": "any",
            "optional": false
          },
          "resetFilters": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "ForwardedIconComponent",
            "ShadTooltip"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "SidebarFilterComponent",
        "file_path": "frontend/src/pages/FlowPage/components/flowSidebarComponent/components/sidebarFilterComponent/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "`mb-0.5 flex w-full items-center justify-between rounded border p-2 text-sm text-foreground`"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-1 items-center gap-1.5"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "`h-4 w-4 shrink-0 stroke-2`"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-1"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "w-[5.7rem] flex-1 overflow-hidden truncate pl-1"
              },
              "category": "html"
            },
            {
              "type": "ShadTooltip",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "shrink-0",
                "onClick": "resetFilters"
              },
              "category": "component"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-4 w-4 stroke-2"
              },
              "category": "component"
            }
          ],
          "components": [
            "ShadTooltip",
            "ForwardedIconComponent",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "ForwardedIconComponent",
            "ShadTooltip"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "rounded",
            "overflow-hidden",
            "`h-4",
            "text-foreground`",
            "gap-1.5",
            "p-2",
            "truncate",
            "stroke-2",
            "`mb-0.5",
            "w-full",
            "w-[5.7rem]",
            "flex-1",
            "justify-between",
            "items-center",
            "w-4",
            "shrink-0",
            "border",
            "h-4",
            "flex",
            "text-sm",
            "stroke-2`",
            "pl-1"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "shrink-0",
                "onClick": "resetFilters"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "custom"
      },
      "ui_uidl_complete": {
        "component_name": "SidebarFilterComponent",
        "file_path": "frontend/src/pages/FlowPage/components/flowSidebarComponent/components/sidebarFilterComponent/index.tsx",
        "component_type": "component",
        "summary": "SidebarFilter UI component",
        "jsx_return_statement": "<div\n      className={`mb-0.5 flex w-full items-center justify-between rounded border p-2 text-sm text-foreground`}\n      style={{\n        backgroundColor: `hsl(var(--datatype-${color}-foreground))`,\n      }}\n    >\n      <div className=\"flex flex-1 items-center gap-1.5\">\n        <ForwardedIconComponent\n          name=\"ListFilter\"\n          className={`h-4 w-4 shrink-0 stroke-2`}\n        />\n        <div className=\"flex flex-1\">\n          {isInput ? \"Input\" : \"Output\"}\n          {plural}:{\" \"}\n          <div className=\"w-[5.7rem] flex-1 overflow-hidden truncate pl-1\">\n            {tooltips.join(\", \")}\n          </div>\n        </div>\n      </div>\n      <ShadTooltip\n        side=\"right\"\n        styleClasses=\"max-w-full\"\n        content=\"Remove filter\"\n      >\n        <Button\n          unstyled\n          className=\"shrink-0\"\n          onClick={resetFilters}\n          data-testid=\"sidebar-filter-reset\"\n        >\n          <ForwardedIconComponent\n            name=\"X\"\n            className=\"h-4 w-4 stroke-2\"\n            aria-hidden=\"true\"\n          />\n        </Button>\n      </ShadTooltip>\n    </div>",
        "jsx_simplified": "<div\n      className={`mb-0.5 flex w-full items-center justify-between rounded border p-2 text-sm text-foreground`}\n      style={{\n        backgroundColor: `hsl(var(--datatype-${color}-foreground))`,\n      }}\n    >\n      <div className=\"flex flex-1 items-center gap-1.5\">\n        <ForwardedIconComponent\n          name=\"ListFilter\"\n          className={`h-4 w-4 shrink-0 stroke-2`}\n        />\n        <div className=\"flex flex-1\">\n          {isInput ? \"Input\" : \"Output\"}\n          {plural}:{\" \"}\n          <div className=\"w-[5.7rem] flex-1 overflow-hidden truncate pl-1\">\n            {tooltips.join(\", \")}\n          </div>\n        </div>\n      </div>\n      <ShadTooltip\n        side=\"right\"\n        styleClasses=\"max-w-full\"\n        content=\"Remove filter\"\n      >\n        <Button\n          unstyled\n          className=\"shrink-0\"\n          onClick={resetFilters}\n          data-testid=\"sidebar-filter-reset\"\n        >\n          <ForwardedIconComponent\n            name=\"X\"\n            className=\"h-4 w-4 stroke-2\"\n            aria-hidden=\"true\"\n          />\n        </Button>\n      </ShadTooltip>\n    </div>",
        "imports": [
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/common/shadTooltipComponent",
            "items": [
              "ShadTooltip"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "ForwardedIconComponent",
          "ShadTooltip"
        ],
        "tailwind_classes_used": [
          "`h-4",
          "`mb-0.5",
          "border",
          "flex",
          "flex-1",
          "gap-1.5",
          "h-4",
          "items-center",
          "justify-between",
          "overflow-hidden",
          "p-2",
          "pl-1",
          "rounded",
          "shrink-0",
          "stroke-2",
          "stroke-2`",
          "text-foreground`",
          "text-sm",
          "truncate",
          "w-4",
          "w-[5.7rem]",
          "w-full"
        ],
        "state_props_referenced": [
          "color",
          "plural",
          "resetFilters"
        ],
        "file_size_lines": 58,
        "jsx_size_chars": 1109
      }
    },
    {
      "id": "ni0044",
      "type": "interface",
      "name": "GenericErrorComponent",
      "path": "frontend/src/pages/AppWrapperPage/components/GenericErrorComponent/index.tsx",
      "category": "page",
      "description": "interface node: GenericErrorComponent (Page component)",
      "uidl_definition_conceptual": {
        "name": "GenericErrorComponent",
        "path": "frontend/src/pages/AppWrapperPage/components/GenericErrorComponent/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/components/common/timeoutErrorComponent",
              "items": [
                "TimeoutErrorComponent"
              ]
            },
            {
              "source": "@/constants/constants",
              "items": [
                "FETCH_ERROR_DESCRIPION",
                "FETCH_ERROR_MESSAGE",
                "TIMEOUT_ERROR_DESCRIPION",
                "TIMEOUT_ERROR_MESSAGE",
                ""
              ]
            },
            {
              "source": "@/customization/components/custom-fetch-error-component",
              "items": [
                "CustomFetchErrorComponent"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {
          "healthCheckTimeout": {
            "type": "any",
            "optional": false
          },
          "fetching": {
            "type": "any",
            "optional": false
          },
          "retry": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "CustomFetchErrorComponent",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "CustomFetchErrorComponent",
            "TimeoutErrorComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "GenericErrorComponent",
        "file_path": "frontend/src/pages/AppWrapperPage/components/GenericErrorComponent/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "CustomFetchErrorComponent",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "CustomFetchErrorComponent"
          ],
          "ui_patterns": [
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "CustomFetchErrorComponent",
            "TimeoutErrorComponent"
          ],
          "html": []
        },
        "styling": {
          "tailwind_classes": [],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "GenericErrorComponent",
        "file_path": "frontend/src/pages/AppWrapperPage/components/GenericErrorComponent/index.tsx",
        "component_type": "component",
        "summary": "GenericError UI component",
        "jsx_return_statement": "<CustomFetchErrorComponent\n          description={FETCH_ERROR_DESCRIPION}\n          message={FETCH_ERROR_MESSAGE}\n          openModal={true}\n          setRetry={retry}\n          isLoadingHealth={fetching}\n        ></CustomFetchErrorComponent>",
        "jsx_simplified": "<CustomFetchErrorComponent\n          description={FETCH_ERROR_DESCRIPION}\n          message={FETCH_ERROR_MESSAGE}\n          openModal={true}\n          setRetry={retry}\n          isLoadingHealth={fetching}\n        ></CustomFetchErrorComponent>",
        "imports": [
          {
            "source": "@/components/common/timeoutErrorComponent",
            "items": [
              "TimeoutErrorComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/constants/constants",
            "items": [
              "FETCH_ERROR_DESCRIPION",
              "FETCH_ERROR_MESSAGE",
              "TIMEOUT_ERROR_DESCRIPION",
              "TIMEOUT_ERROR_MESSAGE",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-fetch-error-component",
            "items": [
              "CustomFetchErrorComponent"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "CustomFetchErrorComponent"
        ],
        "tailwind_classes_used": [],
        "state_props_referenced": [
          "FETCH_ERROR_DESCRIPION",
          "FETCH_ERROR_MESSAGE",
          "fetching",
          "retry",
          "true"
        ],
        "file_size_lines": 35,
        "jsx_size_chars": 242
      }
    },
    {
      "id": "ni0046",
      "type": "interface",
      "name": "ApiModal",
      "path": "frontend/src/modals/apiModal/index.tsx",
      "category": "modal",
      "description": "interface node: ApiModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "ApiModal",
        "path": "frontend/src/modals/apiModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "type ChangeEvent",
                "type ReactNode",
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/components/core/codeTabsComponent/components/tweaksComponent",
              "items": [
                "TweaksComponent"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/components/ui/input",
              "items": [
                "Input"
              ]
            },
            {
              "source": "@/components/ui/label",
              "items": [
                "Label"
              ]
            },
            {
              "source": "@/components/ui/separator",
              "items": [
                "Separator"
              ]
            },
            {
              "source": "@/customization/components/custom-api-generator",
              "items": [
                "CustomAPIGenerator"
              ]
            },
            {
              "source": "@/customization/components/custom-link",
              "items": [
                "CustomLink"
              ]
            },
            {
              "source": "@/hooks/flows/use-save-flow",
              "items": [
                "useSaveFlow"
              ]
            },
            {
              "source": "@/stores/authStore",
              "items": [
                "useAuthStore"
              ]
            },
            {
              "source": "@/stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "@/stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "isEndpointNameValid"
              ]
            },
            {
              "source": "lodash",
              "items": [
                "cloneDeep"
              ]
            },
            {
              "source": "zustand/react/shallow",
              "items": [
                "useShallow"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../stores/tweaksStore",
              "items": [
                "useTweaksStore"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "./codeTabs/code-tabs",
              "items": [
                "APITabsComponent"
              ]
            }
          ]
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          },
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "openTweaks": {
            "type": "any",
            "defaultValue": "false"
          },
          "endpointName": {
            "type": "any",
            "defaultValue": "flowEndpointName ?? \"\""
          },
          "validEndpointName": {
            "type": "any",
            "defaultValue": "true"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "open"
            ],
            "description": "Effect with 1 dependencies"
          },
          {
            "dependencies": [
              "openTweaks"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useSaveFlow",
          "useFlowStore",
          "useFlowsManagerStore",
          "useAuthStore",
          "useTweaksStore"
        ],
        "eventHandlers": {
          "handleEndpointNameChange": {
            "type": "arrow_function",
            "async": false
          },
          "handleSave": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": null,
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "CustomAPIGenerator",
            "BaseModal",
            "IconComponent",
            "CustomLink",
            "TweaksComponent",
            "APITabsComponent",
            "Label",
            "Input",
            "Button",
            "HTMLInputElement",
            "Separator"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "ApiModal",
        "file_path": "frontend/src/modals/apiModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {
                "className": "pt-4"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {
                "className": "pr-2"
              },
              "category": "component"
            },
            {
              "type": "CustomLink",
              "attributes": {
                "className": "text-accent-pink-foreground"
              },
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-6 w-6 text-gray-800 dark:text-white"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pl-2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "border-r-1 absolute right-12 flex items-center text-mmd font-medium leading-[16px]"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "h-8 select-none px-3"
              },
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-3.5 w-3.5"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "Separator",
              "attributes": {
                "className": "ml-2 h-8"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "CustomAPIGenerator",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "APITabsComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "text-f h-6 w-6"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pl-2"
              },
              "category": "html"
            },
            {
              "type": "BaseModal",
              "attributes": {
                "className": "flex flex-col gap-4"
              },
              "category": "component"
            },
            {
              "type": "Label",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "edit-flow-arrangement mt-2"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "shrink-0 text-mmd font-medium"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "edit-flow-span"
              },
              "category": "html"
            },
            {
              "type": "Input",
              "attributes": {
                "className": "nopan nodelete nodrag noflow mt-2 font-normal",
                "onChange": "handleEndpointNameChange",
                "placeholder": "An alternative name to run the endpoint",
                "type": "text",
                "value": "endpointName ?? \"\""
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-1 flex-col gap-2 overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-1"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "shrink-0 text-sm font-medium"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-mmd text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "min-h-0 w-full flex-1 flex-col overflow-y-auto overflow-x-hidden rounded-lg bg-muted custom-scroll"
              },
              "category": "html"
            },
            {
              "type": "TweaksComponent",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "Label",
            "Input",
            "CustomAPIGenerator",
            "Separator",
            "APITabsComponent",
            "BaseModal",
            "CustomLink",
            "TweaksComponent",
            "IconComponent",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Input",
            "Separator",
            "Label"
          ],
          "custom": [
            "HTMLInputElement",
            "BaseModal",
            "CustomLink",
            "IconComponent",
            "CustomAPIGenerator",
            "APITabsComponent",
            "TweaksComponent"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "edit-flow-arrangement",
            "border-r-1",
            "text-accent-pink-foreground",
            "text-muted-foreground",
            "rounded-lg",
            "absolute",
            "overflow-hidden",
            "text-gray-800",
            "gap-4",
            "pl-2",
            "nodrag",
            "dark:text-white",
            "flex-col",
            "w-full",
            "gap-2",
            "gap-1",
            "min-h-0",
            "ml-2",
            "custom-scroll",
            "flex-1",
            "mt-2",
            "noflow",
            "items-center",
            "overflow-x-hidden",
            "edit-flow-span",
            "select-none",
            "font-normal",
            "right-12",
            "pt-4",
            "leading-[16px]",
            "text-mmd",
            "shrink-0",
            "px-3",
            "h-3.5",
            "w-6",
            "h-6",
            "bg-muted",
            "font-medium",
            "flex",
            "h-8",
            "text-sm",
            "overflow-y-auto",
            "nopan",
            "pr-2",
            "text-f",
            "nodelete",
            "w-3.5"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "dark-mode-support",
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "h-8 select-none px-3"
              },
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "className": "nopan nodelete nodrag noflow mt-2 font-normal",
                "onChange": "handleEndpointNameChange",
                "placeholder": "An alternative name to run the endpoint",
                "type": "text",
                "value": "endpointName ?? \"\""
              },
              "type": "text"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "ApiModal",
        "file_path": "frontend/src/modals/apiModal/index.tsx",
        "component_type": "modal",
        "summary": "Validate the endpoint name",
        "jsx_return_statement": "<>\n      <BaseModal\n        closeButtonClassName=\"!top-3\"\n        open={open}\n        setOpen={setOpen}\n        size=\"medium\"\n        className=\"pt-4\"\n      >\n        <BaseModal.Trigger asChild>{children}</BaseModal.Trigger>\n        <BaseModal.Header\n          description={\n            <span className=\"pr-2\">\n              API access requires an API key. You can{\" \"}\n              <CustomLink\n                to=\"/settings/api-keys\"\n                className=\"text-accent-pink-foreground\"\n              >\n                {\" \"}\n                create an API key\n              </CustomLink>{\" \"}\n              in settings.\n            </span>\n          }\n        >\n          <IconComponent\n            name=\"Code2\"\n            className=\"h-6 w-6 text-gray-800 dark:text-white\"\n            aria-hidden=\"true\"\n          />\n          <span className=\"pl-2\">API access</span>\n          {nodes.length > 0 && (\n            <div className=\"border-r-1 absolute right-12 flex items-center text-mmd font-medium leading-[16px]\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"h-8 select-none px-3\"\n                onClick={() => setOpenTweaks(true)}\n                data-testid=\"tweaks-button\"\n              >\n                <IconComponent\n                  name=\"SlidersHorizontal\"\n                  className=\"h-3.5 w-3.5\"\n                />\n                <span>Input Schema ({Object.keys(tweaks)?.length}) </span>\n              </Button>\n              <Separator orientation=\"vertical\" className=\"ml-2 h-8\" />\n            </div>\n          )}\n        </BaseModal.Header>\n        <BaseModal.Content overflowHidden>\n          {open && (\n            <>\n              <CustomAPIGenerator isOpen={open} />\n              <APITabsComponent />\n            </>\n          )}\n        </BaseModal.Content>\n      </BaseModal>\n\n      <BaseModal\n        open={openTweaks}\n        setOpen={setOpenTweaks}\n        size=\"medium-small-tall\"\n      >\n        <BaseModal.Header>\n          <IconComponent name=\"SlidersHorizontal\" className=\"text-f h-6 w-6\" />\n          <span className=\"pl-2\">Input Schema</span>\n        </BaseModal.Header>\n        <BaseModal.Content overflowHidden className=\"flex flex-col gap-4\">\n          {true && (\n            <Label>\n              <div className=\"edit-flow-arrangement mt-2\">\n                <span className=\"shrink-0 text-mmd font-medium\">\n                  Endpoint Name\n                </span>\n                {!validEndpointName && (\n                  <span className=\"edit-flow-span\">\n                    Use only letters, numbers, hyphens, and underscores (\n                    {MAX_LENGTH} characters max).\n                  </span>\n                )}\n              </div>\n              <Input\n                className=\"nopan nodelete nodrag noflow mt-2 font-normal\"\n                onChange={handleEndpointNameChange}\n                type=\"text\"\n                name=\"endpoint_name\"\n                value={endpointName ?? \"\"}\n                placeholder=\"An alternative name to run the endpoint\"\n                maxLength={MAX_LENGTH}\n                minLength={MIN_LENGTH}\n                id=\"endpoint_name\"\n              />\n            </Label>\n          )}\n          <div className=\"flex flex-1 flex-col gap-2 overflow-hidden\">\n            <div className=\"flex flex-col gap-1\">\n              <span className=\"shrink-0 text-sm font-medium\">Expose API</span>\n              <span className=\"text-mmd text-muted-foreground\">\n                Select which component fields to expose as inputs in this flow's\n                API schema.\n              </span>\n            </div>\n            <div className=\"min-h-0 w-full flex-1 flex-col overflow-y-auto overflow-x-hidden rounded-lg bg-muted custom-scroll\">\n              <TweaksComponent open={openTweaks} />\n            </div>\n          </div>\n        </BaseModal.Content>\n      </BaseModal>\n    </>",
        "jsx_simplified": "<>\n      <BaseModal\n        closeButtonClassName=\"!top-3\"\n        open={open}\n        setOpen={setOpen}\n        size=\"medium\"\n        className=\"pt-4\"\n      >\n        <BaseModal.Trigger asChild>{children}</BaseModal.Trigger>\n        <BaseModal.Header\n          description={\n            <span className=\"pr-2\">\n              API access requires an API key. You can{\" \"}\n              <CustomLink\n                to=\"/settings/api-keys\"\n                className=\"text-accent-pink-foreground\"\n              >\n                {\" \"}\n                create an API key\n              </CustomLink>{\" \"}\n              in settings.\n            </span>\n          }\n        >\n          <IconComponent\n            name=\"Code2\"\n            className=\"h-6 w-6 text-gray-800 dark:text-white\"\n            aria-hidden=\"true\"\n          />\n          <span className=\"pl-2\">API access</span>\n          {/* complex expression */}\n                data-testid=\"tweaks-button\"\n              >\n                <IconComponent\n                  name=\"SlidersHorizontal\"\n                  className=\"h-3.5 w-3.5\"\n                />\n                <span>Input Schema ({Object.keys(tweaks)?.length}) </span>\n              </Button>\n              <Separator orientation=\"vertical\" className=\"ml-2 h-8\" />\n            </div>\n          )}\n        </BaseModal.Header>\n        <BaseModal.Content overflowHidden>\n          {open && (\n            <>\n              <CustomAPIGenerator isOpen={open} />\n              <APITabsComponent />\n            </>\n          )}\n        </BaseModal.Content>\n      </BaseModal>\n\n      <BaseModal\n        open={openTweaks}\n        setOpen={setOpenTweaks}\n        size=\"medium-small-tall\"\n      >\n        <BaseModal.Header>\n          <IconComponent name=\"SlidersHorizontal\" className=\"text-f h-6 w-6\" />\n          <span className=\"pl-2\">Input Schema</span>\n        </BaseModal.Header>\n        <BaseModal.Content overflowHidden className=\"flex flex-col gap-4\">\n          {/* complex expression */} characters max).\n                  </span>\n                )}\n              </div>\n              <Input\n                className=\"nopan nodelete nodrag noflow mt-2 font-normal\"\n                onChange={handleEndpointNameChange}\n                type=\"text\"\n                name=\"endpoint_name\"\n                value={endpointName ?? \"\"}\n                placeholder=\"An alternative name to run the endpoint\"\n                maxLength={MAX_LENGTH}\n                minLength={MIN_LENGTH}\n                id=\"endpoint_name\"\n              />\n            </Label>\n          )}\n          <div className=\"flex flex-1 flex-col gap-2 overflow-hidden\">\n            <div className=\"flex flex-col gap-1\">\n              <span className=\"shrink-0 text-sm font-medium\">Expose API</span>\n              <span className=\"text-mmd text-muted-foreground\">\n                Select which component fields to expose as inputs in this flow's\n                API schema.\n              </span>\n            </div>\n            <div className=\"min-h-0 w-full flex-1 flex-col overflow-y-auto overflow-x-hidden rounded-lg bg-muted custom-scroll\">\n              <TweaksComponent open={openTweaks} />\n            </div>\n          </div>\n        </BaseModal.Content>\n      </BaseModal>\n    </>",
        "imports": [
          {
            "source": "@/components/core/codeTabsComponent/components/tweaksComponent",
            "items": [
              "TweaksComponent"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/input",
            "items": [
              "Input"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/label",
            "items": [
              "Label"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/separator",
            "items": [
              "Separator"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-api-generator",
            "items": [
              "CustomAPIGenerator"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-link",
            "items": [
              "CustomLink"
            ],
            "type": "named"
          },
          {
            "source": "@/hooks/flows/use-save-flow",
            "items": [
              "useSaveFlow"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/authStore",
            "items": [
              "useAuthStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "isEndpointNameValid"
            ],
            "type": "named"
          },
          {
            "source": "lodash",
            "items": [
              "cloneDeep"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "type ChangeEvent",
              "type ReactNode",
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "zustand/react/shallow",
            "items": [
              "useShallow"
            ],
            "type": "named"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/tweaksStore",
            "items": [
              "useTweaksStore"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "./codeTabs/code-tabs",
            "items": [
              "APITabsComponent"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "APITabsComponent",
          "BaseModal",
          "Button",
          "CustomAPIGenerator",
          "CustomLink",
          "IconComponent",
          "Input",
          "Label",
          "Separator",
          "TweaksComponent"
        ],
        "tailwind_classes_used": [
          "absolute",
          "bg-muted",
          "border-r-1",
          "custom-scroll",
          "dark:text-white",
          "edit-flow-arrangement",
          "edit-flow-span",
          "flex",
          "flex-1",
          "flex-col",
          "font-medium",
          "font-normal",
          "gap-1",
          "gap-2",
          "gap-4",
          "h-3.5",
          "h-6",
          "h-8",
          "items-center",
          "leading-[16px]",
          "min-h-0",
          "ml-2",
          "mt-2",
          "nodelete",
          "nodrag",
          "noflow",
          "nopan",
          "overflow-hidden",
          "overflow-x-hidden",
          "overflow-y-auto",
          "pl-2",
          "pr-2",
          "pt-4",
          "px-3",
          "right-12",
          "rounded-lg",
          "select-none",
          "shrink-0",
          "text-accent-pink-foreground",
          "text-f",
          "text-gray-800",
          "text-mmd",
          "text-muted-foreground",
          "text-sm",
          "w-3.5",
          "w-6",
          "w-full"
        ],
        "state_props_referenced": [
          "MAX_LENGTH",
          "MIN_LENGTH",
          "children",
          "handleEndpointNameChange",
          "open",
          "openTweaks",
          "setOpen",
          "setOpenTweaks"
        ],
        "file_size_lines": 214,
        "jsx_size_chars": 3929
      }
    },
    {
      "id": "ni0047",
      "type": "interface",
      "name": "APITabsComponent",
      "path": "frontend/src/modals/apiModal/codeTabs/code-tabs.tsx",
      "category": "modal",
      "description": "interface node: APITabsComponent (Modal component)",
      "uidl_definition_conceptual": {
        "name": "APITabsComponent",
        "path": "frontend/src/modals/apiModal/codeTabs/code-tabs.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "react-syntax-highlighter",
              "items": [
                "Prism as SyntaxHighlighter"
              ]
            },
            {
              "source": "react-syntax-highlighter/dist/cjs/styles/prism",
              "items": [
                "oneDark",
                "oneLight",
                ""
              ]
            },
            {
              "source": "zustand/react/shallow",
              "items": [
                "useShallow"
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/components/ui/tabs-button",
              "items": [
                "Tabs",
                "TabsList",
                "TabsTrigger"
              ]
            },
            {
              "source": "@/hooks/use-is-auto-login",
              "items": [
                "useIsAutoLogin"
              ]
            },
            {
              "source": "@/stores/authStore",
              "items": [
                "useAuthStore"
              ]
            },
            {
              "source": "@/stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "@/stores/tweaksStore",
              "items": [
                "useTweaksStore"
              ]
            },
            {
              "source": "@/utils/reactflowUtils",
              "items": [
                "hasStreaming"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "getOS"
              ]
            }
          ],
          "local": [
            {
              "source": "../../../stores/darkStore",
              "items": [
                "useDarkStore"
              ]
            },
            {
              "source": "../utils/filter-tweaks",
              "items": [
                "formatPayloadTweaks"
              ]
            },
            {
              "source": "../utils/get-curl-code",
              "items": [
                "getNewCurlCode"
              ]
            },
            {
              "source": "../utils/get-js-api-code",
              "items": [
                "getNewJsApiCode"
              ]
            },
            {
              "source": "../utils/get-python-api-code",
              "items": [
                "getNewPythonApiCode"
              ]
            }
          ]
        },
        "propDefinitions": {},
        "stateDefinitions": {
          "isCopied": {
            "type": "Boolean",
            "defaultValue": "false"
          },
          "copiedStep": {
            "type": "string | null",
            "defaultValue": "null"
          },
          "selectedPlatform": {
            "type": "any",
            "defaultValue": "operatingSystemTabs.find((tab"
          },
          "selectedTab": {
            "type": "any",
            "defaultValue": "\"Python\""
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "selectedTab",
              "selectedPlatform"
            ],
            "description": "Effect with 2 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useIsAutoLogin",
          "useFlowStore",
          "useDarkStore",
          "useAuthStore",
          "useTweaksStore"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [
            {
              "type": "map",
              "array": "tabsList",
              "component": "Button"
            },
            {
              "type": "map",
              "array": "operatingSystemTabs",
              "component": "TabsTrigger"
            },
            {
              "type": "map",
              "array": "steps",
              "component": "div"
            }
          ],
          "components": [
            "IconComponent",
            "TabsList",
            "TabsTrigger",
            "SyntaxHighlighter",
            "Tabs",
            "Button",
            "Boolean"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "APITabsComponent",
        "file_path": "frontend/src/modals/apiModal/codeTabs/code-tabs.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "api-modal-tabs inset-0 m-0 h-full overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full flex-col gap-4 overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-row justify-start border-b border-border"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-4 w-4"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-4"
              },
              "category": "html"
            },
            {
              "type": "Tabs",
              "attributes": {
                "onValueChange": "setSelectedPlatform",
                "value": "selectedPlatform"
              },
              "category": "component"
            },
            {
              "type": "TabsList",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "TabsTrigger",
              "attributes": {
                "className": "flex select-none items-center gap-2",
                "value": "tab.name"
              },
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "api-modal-tabs-content flex h-full flex-col gap-4 overflow-auto"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "index === steps.length - 1\n                          ?"
              },
              "category": "html"
            },
            {
              "type": "h",
              "attributes": {
                "className": "mb-2 text-sm font-medium"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-5 w-5 text-muted-foreground"
              },
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "!h-5 !w-5 text-muted-foreground"
              },
              "category": "component"
            },
            {
              "type": "SyntaxHighlighter",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "SyntaxHighlighter",
            "Button",
            "TabsTrigger",
            "IconComponent",
            "TabsList",
            "Tabs"
          ],
          "ui_patterns": [
            {
              "type": "list",
              "description": "Dynamic list rendering with map"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Tabs",
            "TabsList",
            "TabsTrigger"
          ],
          "custom": [
            "Boolean",
            "IconComponent",
            "SyntaxHighlighter"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "mb-2",
            "border-b",
            "!custom-scroll",
            "===",
            "text-muted-foreground",
            "overflow-hidden",
            "absolute",
            "z-10",
            "gap-4",
            "flex-row",
            "!mt-0",
            "flex-col",
            "index",
            "w-full",
            "gap-2",
            "?",
            "overflow-auto",
            "steps.length",
            "w-5",
            "m-0",
            "items-center",
            "justify-start",
            "w-4",
            "select-none",
            "group",
            "border-border",
            "!w-5",
            "-",
            "!hover:bg-foreground",
            "border",
            "h-4",
            "api-modal-tabs-content",
            "inset-0",
            "1",
            "!h-5",
            "overflow-scroll",
            "font-medium",
            "flex",
            "api-modal-tabs",
            "text-sm",
            "h-full",
            "relative",
            "right-4",
            "h-5",
            "text-left",
            "!rounded-b-md",
            "top-2"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            },
            {
              "attributes": {},
              "type": "button"
            },
            {
              "attributes": {},
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "dynamic_list",
            "arrays": [
              "tabsList",
              "operatingSystemTabs",
              "steps"
            ],
            "description": "Dynamic rendering of 3 lists"
          }
        ],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "APITabsComponent",
        "file_path": "frontend/src/modals/apiModal/codeTabs/code-tabs.tsx",
        "component_type": "component",
        "summary": "Platform selection for cURL",
        "jsx_return_statement": "<div className=\"api-modal-tabs inset-0 m-0 h-full overflow-hidden\">\n      <div className=\"flex h-full flex-col gap-4 overflow-hidden\">\n        {/* Main language tabs */}\n        <div className=\"flex flex-row justify-start border-b border-border\">\n          {tabsList.map((tab) => (\n            <Button\n              unstyled\n              key={tab.title}\n              className={`flex h-8 select-none flex-row items-center gap-2 text-nowrap border-b-2 border-border border-b-transparent !py-1 font-medium ${\n                selectedTab === tab.title\n                  ? \"border-b-2 border-black dark:border-b-white\"\n                  : \"text-muted-foreground hover:text-foreground\"\n              } px-3 py-2 text-[13px]`}\n              onClick={() => setSelectedTab(tab.title)}\n              data-testid={`api_tab_${tab.title.toLowerCase()}`}\n            >\n              <IconComponent name={tab.icon} className=\"h-4 w-4\" />\n              <span>{tab.title}</span>\n            </Button>\n          ))}\n        </div>\n\n        {/* Platform selection for cURL */}\n        {selectedTab === \"cURL\" && (\n          <div className=\"flex flex-col gap-4\">\n            <Tabs value={selectedPlatform} onValueChange={setSelectedPlatform}>\n              <TabsList>\n                {operatingSystemTabs.map((tab, index) => (\n                  <TabsTrigger\n                    className=\"flex select-none items-center gap-2\"\n                    key={index}\n                    value={tab.name}\n                  >\n                    <IconComponent name={tab.icon} aria-hidden=\"true\" />\n                    {tab.title}\n                  </TabsTrigger>\n                ))}\n              </TabsList>\n            </Tabs>\n          </div>\n        )}\n\n        {/* Code content */}\n        {currentTab &&\n          (() => {\n            // Work directly with structured data - no parsing needed\n            const codeData = currentTab.code;\n            const hasSteps =\n              typeof codeData === \"object\" &&\n              codeData !== null &&\n              \"steps\" in codeData;\n\n            if (hasSteps) {\n              const steps = (\n                codeData as { steps: { title: string; code: string }[] }\n              ).steps;\n              return (\n                <div className=\"api-modal-tabs-content flex h-full flex-col gap-4 overflow-auto\">\n                  {steps.map((step, index) => (\n                    <div\n                      key={index}\n                      className={\n                        index === steps.length - 1\n                          ? \"flex flex-1 flex-col overflow-hidden\"\n                          : \"\"\n                      }\n                    >\n                      <h4 className=\"mb-2 text-sm font-medium\">{step.title}</h4>\n                      <div\n                        className={`relative flex ${\n                          index === steps.length - 1 ? \"h-full\" : \"\"\n                        } w-full`}\n                      >\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          onClick={() =>\n                            copyToClipboard(step.code, `step${index + 1}`)\n                          }\n                          data-testid={`btn-copy-step${index + 1}`}\n                          className=\"!hover:bg-foreground group absolute right-4 top-2 z-10 select-none\"\n                        >\n                          {copiedStep === `step${index + 1}` ? (\n                            <IconComponent\n                              name=\"Check\"\n                              className=\"h-5 w-5 text-muted-foreground\"\n                            />\n                          ) : (\n                            <IconComponent\n                              name=\"Copy\"\n                              className=\"!h-5 !w-5 text-muted-foreground\"\n                            />\n                          )}\n                        </Button>\n                        <SyntaxHighlighter\n                          showLineNumbers={index > 0}\n                          wrapLongLines={true}\n                          language={currentTab.language}\n                          style={dark ? oneDark : oneLight}\n                          className={`!mt-0 ${\n                            index === steps.length - 1 ? \"h-full\" : \"\"\n                          } w-full overflow-scroll !rounded-b-md border border-border text-left !custom-scroll`}\n                        >\n                          {step.code}\n                        </SyntaxHighlighter>\n                      </div>\n                    </div>\n                  ))}\n                </div>",
        "jsx_simplified": "<div className=\"api-modal-tabs inset-0 m-0 h-full overflow-hidden\">\n      <div className=\"flex h-full flex-col gap-4 overflow-hidden\">\n        {/* Main language tabs */}\n        <div className=\"flex flex-row justify-start border-b border-border\">\n          {tabsList.map((tab) => (\n            <Button\n              unstyled\n              key={tab.title}\n              className={/* complex expression */} px-3 py-2 text-[13px]`}\n              onClick={() => setSelectedTab(tab.title)}\n              data-testid={`api_tab_${tab.title.toLowerCase()}`}\n            >\n              <IconComponent name={tab.icon} className=\"h-4 w-4\" />\n              <span>{tab.title}</span>\n            </Button>\n          ))}\n        </div>\n\n        {/* Platform selection for cURL */}\n        {/* complex expression */} onValueChange={setSelectedPlatform}>\n              <TabsList>\n                {/* complex expression */}\n                    value={tab.name}\n                  >\n                    <IconComponent name={tab.icon} aria-hidden=\"true\" />\n                    {tab.title}\n                  </TabsTrigger>\n                ))}\n              </TabsList>\n            </Tabs>\n          </div>\n        )}\n\n        {/* Code content */}\n        {/* complex expression */}[] }\n              ).steps;\n              return (\n                <div className=\"api-modal-tabs-content flex h-full flex-col gap-4 overflow-auto\">\n                  {steps.map((step, index) => (\n                    <div\n                      key={index}\n                      className={/* complex expression */}\n                    >\n                      <h4 className=\"mb-2 text-sm font-medium\">{step.title}</h4>\n                      <div\n                        className={/* complex expression */} w-full`}\n                      >\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          onClick={() =>\n                            copyToClipboard(step.code, `step${index + 1}`)\n                          }\n                          data-testid={`btn-copy-step${index + 1}`}\n                          className=\"!hover:bg-foreground group absolute right-4 top-2 z-10 select-none\"\n                        >\n                          {copiedStep === `step${index + 1}` ? (\n                            <IconComponent\n                              name=\"Check\"\n                              className=\"h-5 w-5 text-muted-foreground\"\n                            />\n                          ) : (\n                            <IconComponent\n                              name=\"Copy\"\n                              className=\"!h-5 !w-5 text-muted-foreground\"\n                            />\n                          )}\n                        </Button>\n                        <SyntaxHighlighter\n                          showLineNumbers={index > 0}\n                          wrapLongLines={true}\n                          language={currentTab.language}\n                          style={dark ? oneDark : oneLight}\n                          className={/* complex expression */} w-full overflow-scroll !rounded-b-md border border-border text-left !custom-scroll`}\n                        >\n                          {step.code}\n                        </SyntaxHighlighter>\n                      </div>\n                    </div>\n                  ))}\n                </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-syntax-highlighter",
            "items": [
              "Prism as SyntaxHighlighter"
            ],
            "type": "named"
          },
          {
            "source": "react-syntax-highlighter/dist/cjs/styles/prism",
            "items": [
              "oneDark",
              "oneLight",
              ""
            ],
            "type": "named"
          },
          {
            "source": "zustand/react/shallow",
            "items": [
              "useShallow"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/tabs-button",
            "items": [
              "Tabs",
              "TabsList",
              "TabsTrigger"
            ],
            "type": "named"
          },
          {
            "source": "@/hooks/use-is-auto-login",
            "items": [
              "useIsAutoLogin"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/authStore",
            "items": [
              "useAuthStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/tweaksStore",
            "items": [
              "useTweaksStore"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/reactflowUtils",
            "items": [
              "hasStreaming"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "getOS"
            ],
            "type": "named"
          },
          {
            "source": "../../../stores/darkStore",
            "items": [
              "useDarkStore"
            ],
            "type": "named"
          },
          {
            "source": "../utils/filter-tweaks",
            "items": [
              "formatPayloadTweaks"
            ],
            "type": "named"
          },
          {
            "source": "../utils/get-curl-code",
            "items": [
              "getNewCurlCode"
            ],
            "type": "named"
          },
          {
            "source": "../utils/get-js-api-code",
            "items": [
              "getNewJsApiCode"
            ],
            "type": "named"
          },
          {
            "source": "../utils/get-python-api-code",
            "items": [
              "getNewPythonApiCode"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "IconComponent",
          "SyntaxHighlighter",
          "Tabs",
          "TabsList",
          "TabsTrigger"
        ],
        "tailwind_classes_used": [
          "!h-5",
          "!hover:bg-foreground",
          "!w-5",
          "-",
          "1",
          "===",
          "?",
          "absolute",
          "api-modal-tabs",
          "api-modal-tabs-content",
          "border-b",
          "border-border",
          "flex",
          "flex-col",
          "flex-row",
          "font-medium",
          "gap-2",
          "gap-4",
          "group",
          "h-4",
          "h-5",
          "h-full",
          "index",
          "inset-0",
          "items-center",
          "justify-start",
          "m-0",
          "mb-2",
          "overflow-auto",
          "overflow-hidden",
          "right-4",
          "select-none",
          "steps.length",
          "text-muted-foreground",
          "text-sm",
          "top-2",
          "w-4",
          "w-5",
          "z-10"
        ],
        "state_props_referenced": [
          "index",
          "selectedPlatform",
          "setSelectedPlatform",
          "true"
        ],
        "file_size_lines": 311,
        "jsx_size_chars": 4659
      }
    },
    {
      "id": "ni0048",
      "type": "interface",
      "name": "DeleteConfirmationModal",
      "path": "frontend/src/modals/deleteConfirmationModal/index.tsx",
      "category": "modal",
      "description": "interface node: DeleteConfirmationModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "DeleteConfirmationModal",
        "path": "frontend/src/modals/deleteConfirmationModal/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@radix-ui/react-dialog",
              "items": [
                "DialogClose"
              ]
            },
            {
              "source": "lucide-react",
              "items": [
                "Trash2"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/dialog",
              "items": [
                "Dialog",
                "DialogContent",
                "DialogFooter",
                "DialogHeader",
                "DialogTitle",
                "DialogTrigger",
                ""
              ]
            }
          ]
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          },
          "onConfirm": {
            "type": "any",
            "optional": false
          },
          "description": {
            "type": "any",
            "optional": false
          },
          "asChild": {
            "type": "any",
            "optional": false
          },
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          },
          "note = \"\"": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "Dialog",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "DialogFooter",
            "DialogTitle",
            "DialogTrigger",
            "DialogHeader",
            "DialogContent",
            "DialogClose",
            "Dialog",
            "Button",
            "Trash2"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "DeleteConfirmationModal",
        "file_path": "frontend/src/modals/deleteConfirmationModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "Dialog",
              "attributes": {
                "onOpenChange": "setOpen"
              },
              "category": "component"
            },
            {
              "type": "DialogTrigger",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "DialogContent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "DialogHeader",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "DialogTitle",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center"
              },
              "category": "html"
            },
            {
              "type": "Trash2",
              "attributes": {
                "className": "h-6 w-6 pr-1 text-foreground"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pl-2"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pb-3 text-sm"
              },
              "category": "html"
            },
            {
              "type": "br",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "DialogFooter",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "DialogClose",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "DialogClose",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "type": "submit"
              },
              "category": "component"
            }
          ],
          "components": [
            "DialogHeader",
            "DialogTitle",
            "DialogFooter",
            "Dialog",
            "DialogClose",
            "Trash2",
            "Button",
            "DialogTrigger",
            "DialogContent"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Dialog",
            "DialogContent",
            "DialogHeader",
            "DialogTitle",
            "DialogTrigger"
          ],
          "custom": [
            "HTMLButtonElement",
            "Trash2",
            "DialogFooter",
            "DialogClose"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "pr-1",
            "pb-3",
            "flex",
            "text-sm",
            "text-foreground",
            "w-6",
            "h-6",
            "pl-2",
            "items-center",
            "mr-1"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            },
            {
              "attributes": {
                "type": "submit"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "DeleteConfirmationModal",
        "file_path": "frontend/src/modals/deleteConfirmationModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for deleteconfirmation",
        "jsx_return_statement": "<Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild={!children ? true : asChild} tabIndex={-1}>\n        {children ?? <></>}\n      </DialogTrigger>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>\n            <div className=\"flex items-center\">\n              <Trash2\n                className=\"h-6 w-6 pr-1 text-foreground\"\n                strokeWidth={1.5}\n              />\n              <span className=\"pl-2\">Delete</span>\n            </div>\n          </DialogTitle>\n        </DialogHeader>\n        <span className=\"pb-3 text-sm\">\n          This will permanently delete the {description ?? \"flow\"}\n          {note ? \" \" + note : \"\"}.<br></br>This can't be undone.\n        </span>\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button\n              onClick={(e) => e.stopPropagation()}\n              className=\"mr-1\"\n              variant=\"outline\"\n              data-testid=\"btn_cancel_delete_confirmation_modal\"\n            >\n              Cancel\n            </Button>\n          </DialogClose>\n          <DialogClose asChild>\n            <Button\n              type=\"submit\"\n              variant=\"destructive\"\n              onClick={(e) => {\n                onConfirm(e);\n              }}\n              data-testid=\"btn_delete_delete_confirmation_modal\"\n            >\n              Delete\n            </Button>\n          </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>",
        "jsx_simplified": "<Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild={!children ? true : asChild} tabIndex={-1}>\n        {children ?? <></>}\n      </DialogTrigger>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>\n            <div className=\"flex items-center\">\n              <Trash2\n                className=\"h-6 w-6 pr-1 text-foreground\"\n                strokeWidth={1.5}\n              />\n              <span className=\"pl-2\">Delete</span>\n            </div>\n          </DialogTitle>\n        </DialogHeader>\n        <span className=\"pb-3 text-sm\">\n          This will permanently delete the {description ?? \"flow\"}\n          {note ? \" \" + note : \"\"}.<br></br>This can't be undone.\n        </span>\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button\n              onClick={(e) => e.stopPropagation()}\n              className=\"mr-1\"\n              variant=\"outline\"\n              data-testid=\"btn_cancel_delete_confirmation_modal\"\n            >\n              Cancel\n            </Button>\n          </DialogClose>\n          <DialogClose asChild>\n            <Button\n              type=\"submit\"\n              variant=\"destructive\"\n              onClick={handleClick}\n              data-testid=\"btn_delete_delete_confirmation_modal\"\n            >\n              Delete\n            </Button>\n          </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>",
        "imports": [
          {
            "source": "@radix-ui/react-dialog",
            "items": [
              "DialogClose"
            ],
            "type": "named"
          },
          {
            "source": "lucide-react",
            "items": [
              "Trash2"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/dialog",
            "items": [
              "Dialog",
              "DialogContent",
              "DialogFooter",
              "DialogHeader",
              "DialogTitle",
              "DialogTrigger",
              ""
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "Button",
          "Dialog",
          "DialogClose",
          "DialogContent",
          "DialogFooter",
          "DialogHeader",
          "DialogTitle",
          "DialogTrigger",
          "Trash2"
        ],
        "tailwind_classes_used": [
          "flex",
          "h-6",
          "items-center",
          "mr-1",
          "pb-3",
          "pl-2",
          "pr-1",
          "text-foreground",
          "text-sm",
          "w-6"
        ],
        "state_props_referenced": [
          "open",
          "setOpen"
        ],
        "file_size_lines": 78,
        "jsx_size_chars": 1461
      }
    },
    {
      "id": "ni0049",
      "type": "interface",
      "name": "SecretKeyModal",
      "path": "frontend/src/modals/secretKeyModal/index.tsx",
      "category": "modal",
      "description": "interface node: SecretKeyModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "SecretKeyModal",
        "path": "frontend/src/modals/secretKeyModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/customization/feature-flags",
              "items": [
                "ENABLE_DATASTAX_LANGBUILDER"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-generate-token",
              "items": [
                "useGenerateToken"
              ]
            }
          ],
          "local": [
            {
              "source": "../../constants/alerts_constants",
              "items": [
                "COPIED_NOTICE_ALERT"
              ]
            },
            {
              "source": "../../controllers/API",
              "items": [
                "createApiKey"
              ]
            },
            {
              "source": "../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "./components/content-render",
              "items": [
                "ContentRenderKey"
              ]
            },
            {
              "source": "./components/form-key-render",
              "items": [
                "FormKeyRender"
              ]
            },
            {
              "source": "./components/header-render",
              "items": [
                "HeaderRender"
              ]
            }
          ]
        },
        "propDefinitions": {
          "title": {
            "type": "string",
            "optional": true
          },
          "description": {
            "type": "React.ReactNode",
            "optional": true
          },
          "inputLabel": {
            "type": "React.ReactNode",
            "optional": true
          },
          "inputPlaceholder": {
            "type": "string",
            "optional": true
          },
          "buttonText": {
            "type": "string",
            "optional": true
          },
          "generatedKeyMessage": {
            "type": "React.ReactNode",
            "optional": true
          },
          "showIcon": {
            "type": "boolean",
            "optional": true
          },
          "userId": {
            "type": "string",
            "optional": true
          },
          "size": {
            "type": "string",
            "optional": true
          },
          "modalProps": {
            "type": "any",
            "optional": false
          },
          "children": {
            "type": "any",
            "optional": false
          },
          "data": {
            "type": "any",
            "optional": false
          },
          "onCloseModal": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "open": {
            "type": "any",
            "defaultValue": "false"
          },
          "apiKeyName": {
            "type": "any",
            "defaultValue": "data?.apikeyname ?? \"\""
          },
          "apiKeyValue": {
            "type": "any",
            "defaultValue": "\"\""
          },
          "renderKey": {
            "type": "any",
            "defaultValue": "false"
          },
          "textCopied": {
            "type": "any",
            "defaultValue": "true"
          }
        },
        "refs": {
          "inputRef": {
            "type": "HTMLInputElement | null",
            "initialValue": "null"
          }
        },
        "effects": [
          {
            "dependencies": [
              "open"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useAlertStore",
          "useGenerateToken"
        ],
        "eventHandlers": {
          "handleCopyClick": {
            "type": "arrow_function",
            "async": true
          },
          "handleDataStaxKey": {
            "type": "arrow_function",
            "async": true
          },
          "handleOSSKey": {
            "type": "arrow_function",
            "async": false
          },
          "handleAddNewKey": {
            "type": "function_declaration",
            "async": false
          },
          "handleSubmitForm": {
            "type": "function_declaration",
            "async": true
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BaseModal",
            "FormKeyRender",
            "HeaderRender",
            "HTMLInputElement",
            "ContentRenderKey"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "SecretKeyModal",
        "file_path": "frontend/src/modals/secretKeyModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {
                "onSubmit": "handleSubmitForm"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "HeaderRender",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "ContentRenderKey",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "FormKeyRender",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "FormKeyRender",
            "BaseModal",
            "HeaderRender",
            "ContentRenderKey"
          ],
          "ui_patterns": [
            {
              "type": "form",
              "description": "Form with inputs and submit handling"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "HTMLInputElement",
            "BaseModal",
            "HeaderRender",
            "ContentRenderKey",
            "FormKeyRender"
          ],
          "html": []
        },
        "styling": {
          "tailwind_classes": [],
          "layout_patterns": [],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "SecretKeyModal",
        "file_path": "frontend/src/modals/secretKeyModal/index.tsx",
        "component_type": "modal",
        "summary": "Add this interface for the modal props",
        "jsx_return_statement": "<BaseModal\n      onSubmit={handleSubmitForm}\n      size={modalProps?.size ?? \"small-h-full\"}\n      open={open}\n      setOpen={setOpen}\n    >\n      <BaseModal.Trigger asChild>{children}</BaseModal.Trigger>\n      <BaseModal.Header\n        clampDescription={3}\n        description={\n          renderKey ? (\n            <>{modalConfigProps?.generatedKeyMessage}</>\n          ) : (\n            <>{modalConfigProps?.description}</>\n          )\n        }\n      >\n        <HeaderRender\n          title={modalConfigProps?.title}\n          showIcon={modalConfigProps?.showIcon}\n        />\n      </BaseModal.Header>\n      <BaseModal.Content>\n        {renderKey ? (\n          <ContentRenderKey\n            inputLabel={String(modalConfigProps?.inputLabel ?? \"\")}\n            inputRef={inputRef}\n            apiKeyValue={apiKeyValue}\n            handleCopyClick={handleCopyClick}\n            textCopied={textCopied}\n            renderKey={renderKey}\n          />\n        ) : ENABLE_DATASTAX_LANGBUILDER ? (\n          <></>\n        ) : (\n          <FormKeyRender\n            modalProps={modalConfigProps}\n            apiKeyName={apiKeyName}\n            inputRef={inputRef}\n            setApiKeyName={setApiKeyName}\n          />\n        )}\n      </BaseModal.Content>\n      <BaseModal.Footer\n        submit={{\n          label: renderKey ? \"Done\" : (modalConfigProps?.buttonText ?? \"\"),\n        }}\n      />\n    </BaseModal>",
        "jsx_simplified": "<BaseModal\n      onSubmit={handleSubmitForm}\n      size={modalProps?.size ?? \"small-h-full\"}\n      open={open}\n      setOpen={setOpen}\n    >\n      <BaseModal.Trigger asChild>{children}</BaseModal.Trigger>\n      <BaseModal.Header\n        clampDescription={3}\n        description={\n          renderKey ? (\n            <>{modalConfigProps?.generatedKeyMessage}</>\n          ) : (\n            <>{modalConfigProps?.description}</>\n          )\n        }\n      >\n        <HeaderRender\n          title={modalConfigProps?.title}\n          showIcon={modalConfigProps?.showIcon}\n        />\n      </BaseModal.Header>\n      <BaseModal.Content>\n        {/* complex expression */}\n            inputRef={inputRef}\n            apiKeyValue={apiKeyValue}\n            handleCopyClick={handleCopyClick}\n            textCopied={textCopied}\n            renderKey={renderKey}\n          />\n        ) : ENABLE_DATASTAX_LANGBUILDER ? (\n          <></>\n        ) : (\n          <FormKeyRender\n            modalProps={modalConfigProps}\n            apiKeyName={apiKeyName}\n            inputRef={inputRef}\n            setApiKeyName={setApiKeyName}\n          />\n        )}\n      </BaseModal.Content>\n      <BaseModal.Footer\n        submit={{\n          label: renderKey ? \"Done\" : (modalConfigProps?.buttonText ?? \"\"),\n        }}\n      />\n    </BaseModal>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/feature-flags",
            "items": [
              "ENABLE_DATASTAX_LANGBUILDER"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-generate-token",
            "items": [
              "useGenerateToken"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/alerts_constants",
            "items": [
              "COPIED_NOTICE_ALERT"
            ],
            "type": "named"
          },
          {
            "source": "../../controllers/API",
            "items": [
              "createApiKey"
            ],
            "type": "named"
          },
          {
            "source": "../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "./components/content-render",
            "items": [
              "ContentRenderKey"
            ],
            "type": "named"
          },
          {
            "source": "./components/form-key-render",
            "items": [
              "FormKeyRender"
            ],
            "type": "named"
          },
          {
            "source": "./components/header-render",
            "items": [
              "HeaderRender"
            ],
            "type": "named"
          }
        ],
        "props_definition": {
          "name": "ModalConfigProps",
          "definition": "title?: string;\n  description?: React.ReactNode;\n  inputLabel?: React.ReactNode;\n  inputPlaceholder?: string;\n  buttonText?: string;\n  generatedKeyMessage?: React.ReactNode;\n  showIcon?: boolean;",
          "type": "interface"
        },
        "ui_components_used": [
          "BaseModal",
          "ContentRenderKey",
          "FormKeyRender",
          "HeaderRender"
        ],
        "tailwind_classes_used": [],
        "state_props_referenced": [
          "apiKeyName",
          "apiKeyValue",
          "children",
          "handleCopyClick",
          "handleSubmitForm",
          "inputRef",
          "modalConfigProps",
          "open",
          "renderKey",
          "setApiKeyName",
          "setOpen",
          "textCopied"
        ],
        "file_size_lines": 163,
        "jsx_size_chars": 1405
      }
    },
    {
      "id": "ni0050",
      "type": "interface",
      "name": "CodeAreaModal",
      "path": "frontend/src/modals/codeAreaModal/index.tsx",
      "category": "modal",
      "description": "interface node: CodeAreaModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "CodeAreaModal",
        "path": "frontend/src/modals/codeAreaModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/controllers/API/queries/nodes/use-post-validate-code",
              "items": [
                "usePostValidateCode"
              ]
            },
            {
              "source": "@/controllers/API/queries/nodes/use-post-validate-component-code",
              "items": [
                "usePostValidateComponentCode"
              ]
            },
            {
              "source": "@/utils/reactflowUtils",
              "items": [
                "clearHandlesFromAdvancedFields"
              ]
            },
            {
              "source": "react-ace",
              "items": [
                "AceEditor"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/input",
              "items": [
                "Input"
              ]
            },
            {
              "source": "../../constants/alerts_constants",
              "items": [
                "BUG_ALERT",
                "CODE_ERROR_ALERT",
                "CODE_SUCCESS_ALERT",
                "FUNC_ERROR_ALERT",
                "IMPORT_ERROR_ALERT",
                ""
              ]
            },
            {
              "source": "../../constants/constants",
              "items": [
                "CODE_PROMPT_DIALOG_SUBTITLE",
                "EDIT_CODE_TITLE",
                ""
              ]
            },
            {
              "source": "../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "../../stores/darkStore",
              "items": [
                "useDarkStore"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "../confirmationModal",
              "items": [
                "ConfirmationModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "value": {
            "type": "any",
            "optional": false
          },
          "setValue": {
            "type": "any",
            "optional": false
          },
          "nodeClass": {
            "type": "any",
            "optional": false
          },
          "setNodeClass": {
            "type": "any",
            "optional": false
          },
          "children": {
            "type": "any",
            "optional": false
          },
          "dynamic": {
            "type": "any",
            "optional": false
          },
          "readonly = false": {
            "type": "any",
            "optional": false
          },
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          },
          "componentId": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "code": {
            "type": "any",
            "defaultValue": "value"
          },
          "height": {
            "type": "string | null",
            "defaultValue": "null"
          },
          "openConfirmation": {
            "type": "any",
            "defaultValue": "false"
          },
          "error": {
            "type": "{\n    detail: CodeErrorDataTypeAPI;\n  } | null",
            "defaultValue": "null"
          }
        },
        "refs": {
          "codeRef": {
            "type": "ReactAce | null",
            "initialValue": "null"
          }
        },
        "effects": [
          {
            "dependencies": [],
            "description": "Effect with 0 dependencies"
          },
          {
            "dependencies": [
              "openConfirmation"
            ],
            "description": "Effect with 1 dependencies"
          },
          {
            "dependencies": [
              "value",
              "open"
            ],
            "description": "Effect with 2 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "usePostValidateCode",
          "useDarkStore",
          "useAlertStore",
          "usePostValidateComponentCode"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "AceEditor",
            "BaseModal",
            "ConfirmationModal",
            "IconComponent",
            "ReactAce",
            "Input",
            "Button"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "CodeAreaModal",
        "file_path": "frontend/src/modals/codeAreaModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pr-2"
              },
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-6 w-6 pl-1 text-primary"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Input",
              "attributes": {
                "className": "absolute left-[500%] top-[500%]",
                "value": "code"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col transition-all"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "h-full w-full"
              },
              "category": "html"
            },
            {
              "type": "AceEditor",
              "attributes": {
                "value": "code"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": ""
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "mt-5 h-full max-h-[10rem] w-full overflow-y-auto overflow-x-clip text-left custom-scroll"
              },
              "category": "html"
            },
            {
              "type": "h",
              "attributes": {
                "className": "text-lg text-error"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "ml-2 mt-2 w-full text-sm text-destructive word-break-break-word"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "w-full word-break-break-word"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-fit w-full justify-end"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "mt-3",
                "onClick": "processCode",
                "type": "submit",
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "ConfirmationModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "ConfirmationModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "p",
              "attributes": {},
              "category": "html"
            }
          ],
          "components": [
            "Input",
            "AceEditor",
            "BaseModal",
            "IconComponent",
            "ConfirmationModal",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "card",
              "description": "Card-based layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Input"
          ],
          "custom": [
            "ReactAce",
            "BaseModal",
            "IconComponent",
            "AceEditor",
            "ConfirmationModal"
          ],
          "html": [
            "div",
            "span",
            "p",
            "h1"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "rounded-lg",
            "absolute",
            "border-gray-300",
            "word-break-break-word",
            "h-fit",
            "w-full",
            "flex-col",
            "text-error",
            "mt-3",
            "ml-2",
            "transition-all",
            "custom-scroll",
            "max-h-[10rem]",
            "mt-2",
            "border-[1px]",
            "text-lg",
            "w-6",
            "h-6",
            "min-w-full",
            "mt-5",
            "left-[500%]",
            "text-primary",
            "flex",
            "dark:border-gray-600",
            "h-full",
            "overflow-y-auto",
            "text-sm",
            "text-destructive",
            "top-[500%]",
            "pr-2",
            "text-left",
            "justify-end",
            "pl-1",
            "overflow-x-clip"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "dark-mode-support",
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "mt-3",
                "onClick": "processCode",
                "type": "submit",
                "disabled": true
              },
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "className": "absolute left-[500%] top-[500%]",
                "value": "code"
              },
              "type": "text"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "CodeAreaModal",
        "file_path": "frontend/src/modals/codeAreaModal/index.tsx",
        "component_type": "modal",
        "summary": "if nodeClass.template has more fields other than code and dynamic is true",
        "jsx_return_statement": ") => {\n      clearTimeout(delayedFunction);\n    };\n  }, [error, setHeight]);\n\n  useEffect(() => {\n    if (!openConfirmation) {\n      codeRef.current?.editor.focus();\n    }\n  }, [openConfirmation]);\n\n  useEffect(() => {\n    setCode(value);\n  }, [value, open]);\n\n  return (\n    <BaseModal\n      onEscapeKeyDown={(e) => {\n        e.preventDefault();\n        if (code === value) {\n          setOpen(false);\n        } else {\n          if (\n            !(\n              codeRef.current?.editor.completer &&\n              \"popup\" in codeRef.current?.editor.completer &&\n              codeRef.current?.editor.completer.popup &&\n              codeRef.current?.editor.completer.popup.isOpen\n            )\n          ) {\n            setOpenConfirmation(true);\n          }\n        }\n      }}\n      open={open}\n      setOpen={setOpen}\n      size=\"x-large\"\n    >\n      <BaseModal.Trigger>{children}</BaseModal.Trigger>\n      <BaseModal.Header description={CODE_PROMPT_DIALOG_SUBTITLE}>\n        <span className=\"pr-2\"> {EDIT_CODE_TITLE} </span>\n        <IconComponent\n          name=\"prompts\"\n          className=\"h-6 w-6 pl-1 text-primary\"\n          aria-hidden=\"true\"\n        />\n      </BaseModal.Header>\n      <BaseModal.Content overflowHidden={true}>\n        <Input\n          value={code}\n          readOnly\n          className=\"absolute left-[500%] top-[500%]\"\n          id=\"codeValue\"\n        />\n        <div className=\"flex h-full w-full flex-col transition-all\">\n          <div className=\"h-full w-full\">\n            <AceEditor\n              ref={codeRef}\n              readOnly={readonly}\n              value={code}\n              mode=\"python\"\n              setOptions={{ fontFamily: \"monospace\" }}\n              height={height ?? \"100%\"}\n              highlightActiveLine={true}\n              showPrintMargin={false}\n              fontSize={14}\n              showGutter\n              enableLiveAutocompletion\n              theme={dark ? \"twilight\" : \"github\"}\n              name=\"CodeEditor\"\n              onChange={(value) => {\n                setCode(value);\n              }}\n              className=\"h-full min-w-full rounded-lg border-[1px] border-gray-300 custom-scroll dark:border-gray-600\"\n            />\n          </div>\n          <div\n            className={\n              \"whitespace-break-spaces transition-all delay-500\" +\n              (error?.detail?.error !== undefined ? \"h-2/6\" : \"h-0\")\n            }\n          >\n            <div className=\"mt-5 h-full max-h-[10rem] w-full overflow-y-auto overflow-x-clip text-left custom-scroll\">\n              <h1\n                data-testid=\"title_error_code_modal\"\n                className=\"text-lg text-error\"\n              >\n                {error?.detail?.error}\n              </h1>\n              <div className=\"ml-2 mt-2 w-full text-sm text-destructive word-break-break-word\">\n                <span className=\"w-full word-break-break-word\">\n                  {error?.detail?.traceback}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex h-fit w-full justify-end\">\n            <Button\n              className=\"mt-3\"\n              onClick={processCode}\n              type=\"submit\"\n              id=\"checkAndSaveBtn\"\n              disabled={readonly}\n              data-testid=\"checkAndSaveBtn\"\n            >\n              Check & Save\n            </Button>\n          </div>\n        </div>\n        <ConfirmationModal\n          onClose={() => {\n            setOpenConfirmation(false);\n          }}\n          onEscapeKeyDown={(e) => {\n            e.stopPropagation();\n            setOpenConfirmation(false);\n          }}\n          size=\"x-small\"\n          icon=\"AlertTriangle\"\n          confirmationText=\"Check & Save\"\n          cancelText=\"Discard Changes\"\n          open={openConfirmation}\n          onCancel={() => setOpen(false)}\n          onConfirm={() => {\n            processCode();\n            setOpenConfirmation(false);\n          }}\n          title=\"Caution\"\n        >\n          <ConfirmationModal.Content>\n            <p>Are you sure you want to exit without saving your changes?</p>\n          </ConfirmationModal.Content>\n        </ConfirmationModal>\n      </BaseModal.Content>\n    </BaseModal>",
        "jsx_simplified": ") => {\n      clearTimeout(delayedFunction);\n    };\n  }, [error, setHeight]);\n\n  useEffect(() => {\n    if (!openConfirmation) {\n      codeRef.current?.editor.focus();\n    }\n  }, [openConfirmation]);\n\n  useEffect(() => {\n    setCode(value);\n  }, [value, open]);\n\n  return (\n    <BaseModal\n      onEscapeKeyDown={/* complex expression */} else {/* complex expression */}\n        }\n      }}\n      open={open}\n      setOpen={setOpen}\n      size=\"x-large\"\n    >\n      <BaseModal.Trigger>{children}</BaseModal.Trigger>\n      <BaseModal.Header description={CODE_PROMPT_DIALOG_SUBTITLE}>\n        <span className=\"pr-2\"> {EDIT_CODE_TITLE} </span>\n        <IconComponent\n          name=\"prompts\"\n          className=\"h-6 w-6 pl-1 text-primary\"\n          aria-hidden=\"true\"\n        />\n      </BaseModal.Header>\n      <BaseModal.Content overflowHidden={true}>\n        <Input\n          value={code}\n          readOnly\n          className=\"absolute left-[500%] top-[500%]\"\n          id=\"codeValue\"\n        />\n        <div className=\"flex h-full w-full flex-col transition-all\">\n          <div className=\"h-full w-full\">\n            <AceEditor\n              ref={codeRef}\n              readOnly={readonly}\n              value={code}\n              mode=\"python\"\n              setOptions={{ fontFamily: \"monospace\" }}\n              height={height ?? \"100%\"}\n              highlightActiveLine={true}\n              showPrintMargin={false}\n              fontSize={14}\n              showGutter\n              enableLiveAutocompletion\n              theme={dark ? \"twilight\" : \"github\"}\n              name=\"CodeEditor\"\n              onChange={handleClick}\n              className=\"h-full min-w-full rounded-lg border-[1px] border-gray-300 custom-scroll dark:border-gray-600\"\n            />\n          </div>\n          <div\n            className={/* complex expression */}\n          >\n            <div className=\"mt-5 h-full max-h-[10rem] w-full overflow-y-auto overflow-x-clip text-left custom-scroll\">\n              <h1\n                data-testid=\"title_error_code_modal\"\n                className=\"text-lg text-error\"\n              >\n                {error?.detail?.error}\n              </h1>\n              <div className=\"ml-2 mt-2 w-full text-sm text-destructive word-break-break-word\">\n                <span className=\"w-full word-break-break-word\">\n                  {error?.detail?.traceback}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex h-fit w-full justify-end\">\n            <Button\n              className=\"mt-3\"\n              onClick={processCode}\n              type=\"submit\"\n              id=\"checkAndSaveBtn\"\n              disabled={readonly}\n              data-testid=\"checkAndSaveBtn\"\n            >\n              Check & Save\n            </Button>\n          </div>\n        </div>\n        <ConfirmationModal\n          onClose={handleClick}\n          onEscapeKeyDown={handleClick}\n          size=\"x-small\"\n          icon=\"AlertTriangle\"\n          confirmationText=\"Check & Save\"\n          cancelText=\"Discard Changes\"\n          open={openConfirmation}\n          onCancel={() => setOpen(false)}\n          onConfirm={handleClick}\n          title=\"Caution\"\n        >\n          <ConfirmationModal.Content>\n            <p>Are you sure you want to exit without saving your changes?</p>\n          </ConfirmationModal.Content>\n        </ConfirmationModal>\n      </BaseModal.Content>\n    </BaseModal>",
        "imports": [
          {
            "source": "@/controllers/API/queries/nodes/use-post-validate-code",
            "items": [
              "usePostValidateCode"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/nodes/use-post-validate-component-code",
            "items": [
              "usePostValidateComponentCode"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/reactflowUtils",
            "items": [
              "clearHandlesFromAdvancedFields"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-ace",
            "items": [
              "AceEditor"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/input",
            "items": [
              "Input"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/alerts_constants",
            "items": [
              "BUG_ALERT",
              "CODE_ERROR_ALERT",
              "CODE_SUCCESS_ALERT",
              "FUNC_ERROR_ALERT",
              "IMPORT_ERROR_ALERT",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../constants/constants",
            "items": [
              "CODE_PROMPT_DIALOG_SUBTITLE",
              "EDIT_CODE_TITLE",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/darkStore",
            "items": [
              "useDarkStore"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "../confirmationModal",
            "items": [
              "ConfirmationModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "AceEditor",
          "BaseModal",
          "Button",
          "ConfirmationModal",
          "IconComponent",
          "Input"
        ],
        "tailwind_classes_used": [
          "absolute",
          "border-[1px]",
          "border-gray-300",
          "custom-scroll",
          "dark:border-gray-600",
          "flex",
          "flex-col",
          "h-6",
          "h-fit",
          "h-full",
          "justify-end",
          "left-[500%]",
          "max-h-[10rem]",
          "min-w-full",
          "ml-2",
          "mt-2",
          "mt-3",
          "mt-5",
          "overflow-x-clip",
          "overflow-y-auto",
          "pl-1",
          "pr-2",
          "rounded-lg",
          "text-destructive",
          "text-error",
          "text-left",
          "text-lg",
          "text-primary",
          "text-sm",
          "top-[500%]",
          "transition-all",
          "w-6",
          "w-full",
          "word-break-break-word"
        ],
        "state_props_referenced": [
          "CODE_PROMPT_DIALOG_SUBTITLE",
          "EDIT_CODE_TITLE",
          "children",
          "code",
          "codeRef",
          "false",
          "open",
          "openConfirmation",
          "processCode",
          "readonly",
          "setOpen",
          "true"
        ],
        "file_size_lines": 292,
        "jsx_size_chars": 4217
      }
    },
    {
      "id": "ni0051",
      "type": "interface",
      "name": "FileManagerModal",
      "path": "frontend/src/modals/fileManagerModal/index.tsx",
      "category": "modal",
      "description": "interface node: FileManagerModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "FileManagerModal",
        "path": "frontend/src/modals/fileManagerModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "type ReactNode",
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@tanstack/react-query",
              "items": [
                "useQueryClient"
              ]
            },
            {
              "source": "@/stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "./components/dragFilesComponent",
              "items": [
                "DragFilesComponent"
              ]
            },
            {
              "source": "./components/recentFilesComponent",
              "items": [
                "RecentFilesComponent"
              ]
            }
          ]
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          },
          "handleSubmit": {
            "type": "any",
            "optional": false
          },
          "selectedFiles": {
            "type": "any",
            "optional": false
          },
          "disabled": {
            "type": "any",
            "optional": false
          },
          "files": {
            "type": "any",
            "optional": false
          },
          "types": {
            "type": "any",
            "optional": false
          },
          "isList": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "internalOpen": {
            "type": "any",
            "defaultValue": "false"
          },
          "internalSelectedFiles": {
            "type": "string[]",
            "defaultValue": "selectedFiles || [],"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "internalOpen"
            ],
            "description": "Effect with 1 dependencies"
          },
          {
            "dependencies": [
              "internalOpen"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useQueryClient",
          "useAlertStore"
        ],
        "eventHandlers": {
          "handleUpload": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": null,
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "RecentFilesComponent",
            "BaseModal",
            "ForwardedIconComponent",
            "DragFilesComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "FileManagerModal",
        "file_path": "frontend/src/modals/fileManagerModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "flex items-center gap-2 font-medium"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "rounded-md bg-muted p-1.5"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-5 w-5"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-4 overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex shrink-0 flex-col"
              },
              "category": "html"
            },
            {
              "type": "DragFilesComponent",
              "attributes": {
                "onUpload": "handleUpload"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-1 flex-col overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "RecentFilesComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "DragFilesComponent",
            "RecentFilesComponent",
            "BaseModal",
            "ForwardedIconComponent"
          ],
          "ui_patterns": [
            {
              "type": "form",
              "description": "Form with inputs and submit handling"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "BaseModal",
            "ForwardedIconComponent",
            "DragFilesComponent",
            "RecentFilesComponent"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "flex-col",
            "font-medium",
            "flex",
            "gap-2",
            "p-1.5",
            "rounded-md",
            "shrink-0",
            "overflow-hidden",
            "bg-muted",
            "flex-1",
            "h-5",
            "w-5",
            "gap-4",
            "items-center"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "FileManagerModal",
        "file_path": "frontend/src/modals/fileManagerModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for filemanager",
        "jsx_return_statement": "<>\n      <BaseModal\n        size=\"smaller-h-full\"\n        open={!disabled && internalOpen}\n        setOpen={internalSetOpen}\n        onSubmit={() => {\n          if (internalSelectedFiles.length === 0) {\n            setErrorData({\n              title: \"Please select at least one file\",\n            });\n            return;\n          }\n          handleSubmit(internalSelectedFiles);\n          internalSetOpen(false);\n        }}\n      >\n        <BaseModal.Trigger asChild>\n          {children ? children : <></>}\n        </BaseModal.Trigger>\n        <BaseModal.Header description={null}>\n          <span className=\"flex items-center gap-2 font-medium\">\n            <div className=\"rounded-md bg-muted p-1.5\">\n              <ForwardedIconComponent name=\"File\" className=\"h-5 w-5\" />\n            </div>\n            My Files\n          </span>\n        </BaseModal.Header>\n        <BaseModal.Content overflowHidden>\n          <div className=\"flex flex-col gap-4 overflow-hidden\">\n            <div className=\"flex shrink-0 flex-col\">\n              <DragFilesComponent\n                onUpload={handleUpload}\n                types={types}\n                isList={isList ?? false}\n              />\n            </div>\n            <div className=\"flex flex-1 flex-col overflow-hidden\">\n              <RecentFilesComponent\n                files={files}\n                selectedFiles={internalSelectedFiles}\n                setSelectedFiles={setInternalSelectedFiles}\n                types={types}\n                isList={isList ?? false}\n              />\n            </div>\n          </div>\n        </BaseModal.Content>\n\n        <BaseModal.Footer\n          submit={{\n            label: `Select files`,\n            dataTestId: \"select-files-modal-button\",\n          }}\n        ></BaseModal.Footer>\n      </BaseModal>\n    </>",
        "jsx_simplified": "<>\n      <BaseModal\n        size=\"smaller-h-full\"\n        open={!disabled && internalOpen}\n        setOpen={internalSetOpen}\n        onSubmit={/* complex expression */});\n            return;\n          }\n          handleSubmit(internalSelectedFiles);\n          internalSetOpen(false);\n        }}\n      >\n        <BaseModal.Trigger asChild>\n          {children ? children : <></>}\n        </BaseModal.Trigger>\n        <BaseModal.Header description={null}>\n          <span className=\"flex items-center gap-2 font-medium\">\n            <div className=\"rounded-md bg-muted p-1.5\">\n              <ForwardedIconComponent name=\"File\" className=\"h-5 w-5\" />\n            </div>\n            My Files\n          </span>\n        </BaseModal.Header>\n        <BaseModal.Content overflowHidden>\n          <div className=\"flex flex-col gap-4 overflow-hidden\">\n            <div className=\"flex shrink-0 flex-col\">\n              <DragFilesComponent\n                onUpload={handleUpload}\n                types={types}\n                isList={isList ?? false}\n              />\n            </div>\n            <div className=\"flex flex-1 flex-col overflow-hidden\">\n              <RecentFilesComponent\n                files={files}\n                selectedFiles={internalSelectedFiles}\n                setSelectedFiles={setInternalSelectedFiles}\n                types={types}\n                isList={isList ?? false}\n              />\n            </div>\n          </div>\n        </BaseModal.Content>\n\n        <BaseModal.Footer\n          submit={/* complex expression */}}\n        ></BaseModal.Footer>\n      </BaseModal>\n    </>",
        "imports": [
          {
            "source": "@tanstack/react-query",
            "items": [
              "useQueryClient"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "type ReactNode",
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "./components/dragFilesComponent",
            "items": [
              "DragFilesComponent"
            ],
            "type": "default"
          },
          {
            "source": "./components/recentFilesComponent",
            "items": [
              "RecentFilesComponent"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "DragFilesComponent",
          "ForwardedIconComponent",
          "RecentFilesComponent"
        ],
        "tailwind_classes_used": [
          "bg-muted",
          "flex",
          "flex-1",
          "flex-col",
          "font-medium",
          "gap-2",
          "gap-4",
          "h-5",
          "items-center",
          "overflow-hidden",
          "p-1.5",
          "rounded-md",
          "shrink-0",
          "w-5"
        ],
        "state_props_referenced": [
          "files",
          "handleUpload",
          "internalSelectedFiles",
          "internalSetOpen",
          "null",
          "setInternalSelectedFiles",
          "types"
        ],
        "file_size_lines": 113,
        "jsx_size_chars": 1809
      }
    },
    {
      "id": "ni0052",
      "type": "interface",
      "name": "UserManagementModal",
      "path": "frontend/src/modals/userManagementModal/index.tsx",
      "category": "modal",
      "description": "interface node: UserManagementModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "UserManagementModal",
        "path": "frontend/src/modals/userManagementModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useContext",
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "lucide-react",
              "items": [
                "Eye",
                "EyeOff"
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/checkbox",
              "items": [
                "Checkbox"
              ]
            },
            {
              "source": "../../constants/constants",
              "items": [
                "CONTROL_NEW_USER"
              ]
            },
            {
              "source": "../../contexts/authContext",
              "items": [
                "AuthContext"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "title": {
            "type": "any",
            "optional": false
          },
          "titleHeader": {
            "type": "any",
            "optional": false
          },
          "cancelText": {
            "type": "any",
            "optional": false
          },
          "confirmationText": {
            "type": "any",
            "optional": false
          },
          "children": {
            "type": "any",
            "optional": false
          },
          "icon": {
            "type": "any",
            "optional": false
          },
          "data": {
            "type": "any",
            "optional": false
          },
          "index": {
            "type": "any",
            "optional": false
          },
          "onConfirm": {
            "type": "any",
            "optional": false
          },
          "asChild": {
            "type": "any",
            "optional": false
          },
          "target": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "pwdVisible": {
            "type": "any",
            "defaultValue": "false"
          },
          "confirmPwdVisible": {
            "type": "any",
            "defaultValue": "false"
          },
          "open": {
            "type": "any",
            "defaultValue": "false"
          },
          "password": {
            "type": "any",
            "defaultValue": "data?.password ?? \"\""
          },
          "username": {
            "type": "any",
            "defaultValue": "data?.username ?? \"\""
          },
          "confirmPassword": {
            "type": "any",
            "defaultValue": "data?.password ?? \"\""
          },
          "isActive": {
            "type": "any",
            "defaultValue": "data?.is_active ?? false"
          },
          "isSuperUser": {
            "type": "any",
            "defaultValue": "data?.is_superuser ?? false"
          },
          "inputState": {
            "type": "UserInputType",
            "defaultValue": "CONTROL_NEW_USER"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {
          "handleInput": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "UserInputType",
            "BaseModal",
            "Eye",
            "IconComponent",
            "Checkbox",
            "EyeOff",
            "Button"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "UserManagementModal",
        "file_path": "frontend/src/modals/userManagementModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pr-2"
              },
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-6 w-6 pl-1 text-foreground"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "grid gap-5"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "font-medium text-destructive"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "input",
              "attributes": {
                "onChange": "({ target: { value"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-row"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "mr-3 basis-1/2"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid flex"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "ml-1 mr-1 font-medium text-destructive"
              },
              "category": "html"
            },
            {
              "type": "Eye",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "EyeOff",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "input",
              "attributes": {
                "onChange": "({ target: { value"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "basis-1/2"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid flex"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "ml-1 mr-1 font-medium text-destructive"
              },
              "category": "html"
            },
            {
              "type": "Eye",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "EyeOff",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "input",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "field-invalid"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex gap-8"
              },
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid mr-3"
              },
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Checkbox",
              "attributes": {
                "className": "relative top-0.5",
                "value": "isActive"
              },
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "Form",
              "attributes": {
                "className": "data-[invalid]:label-invalid mr-3"
              },
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Checkbox",
              "attributes": {
                "className": "relative top-0.5",
                "value": "isSuperUser"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "float-right"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Form",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "mt-8"
              },
              "category": "component"
            }
          ],
          "components": [
            "Form",
            "EyeOff",
            "BaseModal",
            "Checkbox",
            "Eye",
            "IconComponent",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "form",
              "description": "Form with inputs and submit handling"
            },
            {
              "type": "grid",
              "description": "Grid layout structure"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Checkbox"
          ],
          "custom": [
            "UserInputType",
            "BaseModal",
            "IconComponent",
            "Form",
            "Eye",
            "EyeOff"
          ],
          "html": [
            "div",
            "span",
            "input"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "field-invalid",
            "data-[invalid]:label-invalid",
            "float-right",
            "top-0.5",
            "flex-row",
            "mt-8",
            "text-foreground",
            "gap-5",
            "primary-input",
            "w-6",
            "h-6",
            "mr-1",
            "cursor-pointer",
            "font-medium",
            "flex",
            "basis-1/2",
            "relative",
            "text-destructive",
            "mr-3",
            "grid",
            "pr-2",
            "h-5",
            "gap-8",
            "ml-1",
            "pl-1"
          ],
          "layout_patterns": [
            "flexbox",
            "grid"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            },
            {
              "attributes": {
                "className": "mt-8"
              },
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "onChange": "({ target: { value"
              },
              "type": "text"
            },
            {
              "attributes": {
                "onChange": "({ target: { value"
              },
              "type": "text"
            },
            {
              "attributes": {},
              "type": "text"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "UserManagementModal",
        "file_path": "frontend/src/modals/userManagementModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for usermanagement",
        "jsx_return_statement": "<BaseModal size=\"medium-h-full\" open={open} setOpen={setOpen}>\n      <BaseModal.Trigger asChild={asChild}>{children}</BaseModal.Trigger>\n      <BaseModal.Header description={titleHeader}>\n        <span className=\"pr-2\">{title}</span>\n        <IconComponent\n          name={icon}\n          className=\"h-6 w-6 pl-1 text-foreground\"\n          aria-hidden=\"true\"\n        />\n      </BaseModal.Header>\n      <BaseModal.Content>\n        <Form.Root\n          onSubmit={(event) => {\n            if (password !== confirmPassword) {\n              event.preventDefault();\n              return;\n            }\n            resetForm();\n            onConfirm(1, inputState);\n            setOpen(false);\n            event.preventDefault();\n          }}\n        >\n          <div className=\"grid gap-5\">\n            <Form.Field name=\"username\">\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"baseline\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Form.Label className=\"data-[invalid]:label-invalid\">\n                  Username{\" \"}\n                  <span className=\"font-medium text-destructive\">*</span>\n                </Form.Label>\n              </div>\n              <Form.Control asChild>\n                <input\n                  onChange={({ target: { value } }) => {\n                    handleInput({ target: { name: \"username\", value } });\n                    setUserName(value);\n                  }}\n                  value={username}\n                  className=\"primary-input\"\n                  required\n                  placeholder=\"Username\"\n                />\n              </Form.Control>\n              <Form.Message match=\"valueMissing\" className=\"field-invalid\">\n                Please enter your username\n              </Form.Message>\n            </Form.Field>\n\n            <div className=\"flex flex-row\">\n              <div className=\"mr-3 basis-1/2\">\n                <Form.Field\n                  name=\"password\"\n                  serverInvalid={password != confirmPassword}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"baseline\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <Form.Label className=\"data-[invalid]:label-invalid flex\">\n                      Password{\" \"}\n                      <span className=\"ml-1 mr-1 font-medium text-destructive\">\n                        *\n                      </span>\n                      {pwdVisible && (\n                        <Eye\n                          onClick={() => setPwdVisible(!pwdVisible)}\n                          className=\"h-5 cursor-pointer\"\n                          strokeWidth={1.5}\n                        />\n                      )}\n                      {!pwdVisible && (\n                        <EyeOff\n                          onClick={() => setPwdVisible(!pwdVisible)}\n                          className=\"h-5 cursor-pointer\"\n                          strokeWidth={1.5}\n                        />\n                      )}\n                    </Form.Label>\n                  </div>\n                  <Form.Control asChild>\n                    <input\n                      onChange={({ target: { value } }) => {\n                        handleInput({ target: { name: \"password\", value } });\n                        setPassword(value);\n                      }}\n                      value={password}\n                      className=\"primary-input\"\n                      required={data ? false : true}\n                      type={pwdVisible ? \"text\" : \"password\"}\n                    />\n                  </Form.Control>\n\n                  <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                    Please enter a password\n                  </Form.Message>\n\n                  {password != confirmPassword && (\n                    <Form.Message className=\"field-invalid\">\n                      Passwords do not match\n                    </Form.Message>\n                  )}\n                </Form.Field>\n              </div>\n\n              <div className=\"basis-1/2\">\n                <Form.Field\n                  name=\"confirmpassword\"\n                  serverInvalid={password != confirmPassword}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"baseline\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <Form.Label className=\"data-[invalid]:label-invalid flex\">\n                      Confirm password{\" \"}\n                      <span className=\"ml-1 mr-1 font-medium text-destructive\">\n                        *\n                      </span>\n                      {confirmPwdVisible && (\n                        <Eye\n                          onClick={() =>\n                            setConfirmPwdVisible(!confirmPwdVisible)\n                          }\n                          className=\"h-5 cursor-pointer\"\n                          strokeWidth={1.5}\n                        />\n                      )}\n                      {!confirmPwdVisible && (\n                        <EyeOff\n                          onClick={() =>\n                            setConfirmPwdVisible(!confirmPwdVisible)\n                          }\n                          className=\"h-5 cursor-pointer\"\n                          strokeWidth={1.5}\n                        />\n                      )}\n                    </Form.Label>\n                  </div>\n                  <Form.Control asChild>\n                    <input\n                      onChange={(input) => {\n                        setConfirmPassword(input.target.value);\n                      }}\n                      value={confirmPassword}\n                      className=\"primary-input\"\n                      required={data ? false : true}\n                      type={confirmPwdVisible ? \"text\" : \"password\"}\n                    />\n                  </Form.Control>\n                  <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                    Please confirm your password\n                  </Form.Message>\n                </Form.Field>\n              </div>\n            </div>\n            <div className=\"flex gap-8\">\n              <Form.Field name=\"is_active\">\n                <div>\n                  <Form.Label className=\"data-[invalid]:label-invalid mr-3\">\n                    Active\n                  </Form.Label>\n                  <Form.Control asChild>\n                    <Checkbox\n                      value={isActive}\n                      checked={isActive}\n                      id=\"is_active\"\n                      className=\"relative top-0.5\"\n                      onCheckedChange={(value) => {\n                        handleInput({ target: { name: \"is_active\", value } });\n                        setIsActive(value);\n                      }}\n                    />\n                  </Form.Control>\n                </div>\n              </Form.Field>\n              {userData?.is_superuser && (\n                <Form.Field name=\"is_superuser\">\n                  <div>\n                    <Form.Label className=\"data-[invalid]:label-invalid mr-3\">\n                      Superuser\n                    </Form.Label>\n                    <Form.Control asChild>\n                      <Checkbox\n                        checked={isSuperUser}\n                        value={isSuperUser}\n                        id=\"is_superuser\"\n                        className=\"relative top-0.5\"\n                        onCheckedChange={(value) => {\n                          handleInput({\n                            target: { name: \"is_superuser\", value },\n                          });\n                          setIsSuperUser(value);\n                        }}\n                      />\n                    </Form.Control>\n                  </div>\n                </Form.Field>\n              )}\n            </div>\n          </div>\n\n          <div className=\"float-right\">\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setOpen(false);\n              }}\n              className=\"mr-3\"\n            >\n              {cancelText}\n            </Button>\n\n            <Form.Submit asChild>\n              <Button className=\"mt-8\">{confirmationText}</Button>\n            </Form.Submit>\n          </div>\n        </Form.Root>\n      </BaseModal.Content>\n    </BaseModal>",
        "jsx_simplified": "<BaseModal size=\"medium-h-full\" open={open} setOpen={setOpen}>\n      <BaseModal.Trigger asChild={asChild}>{children}</BaseModal.Trigger>\n      <BaseModal.Header description={titleHeader}>\n        <span className=\"pr-2\">{title}</span>\n        <IconComponent\n          name={icon}\n          className=\"h-6 w-6 pl-1 text-foreground\"\n          aria-hidden=\"true\"\n        />\n      </BaseModal.Header>\n      <BaseModal.Content>\n        <Form.Root\n          onSubmit={/* complex expression */}\n            resetForm();\n            onConfirm(1, inputState);\n            setOpen(false);\n            event.preventDefault();\n          }}\n        >\n          <div className=\"grid gap-5\">\n            <Form.Field name=\"username\">\n              <div\n                style={/* complex expression */}}\n              >\n                <Form.Label className=\"data-[invalid]:label-invalid\">\n                  Username{\" \"}\n                  <span className=\"font-medium text-destructive\">*</span>\n                </Form.Label>\n              </div>\n              <Form.Control asChild>\n                <input\n                  onChange={({ target: { value } }) => {\n                    handleInput({ target: { name: \"username\", value } });\n                    setUserName(value);\n                  }}\n                  value={username}\n                  className=\"primary-input\"\n                  required\n                  placeholder=\"Username\"\n                />\n              </Form.Control>\n              <Form.Message match=\"valueMissing\" className=\"field-invalid\">\n                Please enter your username\n              </Form.Message>\n            </Form.Field>\n\n            <div className=\"flex flex-row\">\n              <div className=\"mr-3 basis-1/2\">\n                <Form.Field\n                  name=\"password\"\n                  serverInvalid={password != confirmPassword}\n                >\n                  <div\n                    style={/* complex expression */}}\n                  >\n                    <Form.Label className=\"data-[invalid]:label-invalid flex\">\n                      Password{\" \"}\n                      <span className=\"ml-1 mr-1 font-medium text-destructive\">\n                        *\n                      </span>\n                      {/* complex expression */}\n                          className=\"h-5 cursor-pointer\"\n                          strokeWidth={1.5}\n                        />\n                      )}\n                      {/* complex expression */}\n                          className=\"h-5 cursor-pointer\"\n                          strokeWidth={1.5}\n                        />\n                      )}\n                    </Form.Label>\n                  </div>\n                  <Form.Control asChild>\n                    <input\n                      onChange={({ target: { value } }) => {\n                        handleInput({ target: { name: \"password\", value } });\n                        setPassword(value);\n                      }}\n                      value={password}\n                      className=\"primary-input\"\n                      required={data ? false : true}\n                      type={pwdVisible ? \"text\" : \"password\"}\n                    />\n                  </Form.Control>\n\n                  <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                    Please enter a password\n                  </Form.Message>\n\n                  {/* complex expression */}\n                </Form.Field>\n              </div>\n\n              <div className=\"basis-1/2\">\n                <Form.Field\n                  name=\"confirmpassword\"\n                  serverInvalid={password != confirmPassword}\n                >\n                  <div\n                    style={/* complex expression */}}\n                  >\n                    <Form.Label className=\"data-[invalid]:label-invalid flex\">\n                      Confirm password{\" \"}\n                      <span className=\"ml-1 mr-1 font-medium text-destructive\">\n                        *\n                      </span>\n                      {/* complex expression */}\n                          className=\"h-5 cursor-pointer\"\n                          strokeWidth={1.5}\n                        />\n                      )}\n                      {/* complex expression */}\n                          className=\"h-5 cursor-pointer\"\n                          strokeWidth={1.5}\n                        />\n                      )}\n                    </Form.Label>\n                  </div>\n                  <Form.Control asChild>\n                    <input\n                      onChange={handleClick}\n                      value={confirmPassword}\n                      className=\"primary-input\"\n                      required={data ? false : true}\n                      type={confirmPwdVisible ? \"text\" : \"password\"}\n                    />\n                  </Form.Control>\n                  <Form.Message className=\"field-invalid\" match=\"valueMissing\">\n                    Please confirm ",
        "imports": [
          {
            "source": "@radix-ui/react-form",
            "items": [
              "* as Form"
            ],
            "type": "namespace"
          },
          {
            "source": "lucide-react",
            "items": [
              "Eye",
              "EyeOff"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useContext",
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/checkbox",
            "items": [
              "Checkbox"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/constants",
            "items": [
              "CONTROL_NEW_USER"
            ],
            "type": "named"
          },
          {
            "source": "../../contexts/authContext",
            "items": [
              "AuthContext"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "Button",
          "Checkbox",
          "Eye",
          "EyeOff",
          "Form",
          "IconComponent"
        ],
        "tailwind_classes_used": [
          "basis-1/2",
          "cursor-pointer",
          "data-[invalid]:label-invalid",
          "field-invalid",
          "flex",
          "flex-row",
          "float-right",
          "font-medium",
          "gap-5",
          "gap-8",
          "grid",
          "h-5",
          "h-6",
          "ml-1",
          "mr-1",
          "mr-3",
          "mt-8",
          "pl-1",
          "pr-2",
          "primary-input",
          "relative",
          "text-destructive",
          "text-foreground",
          "top-0.5",
          "w-6"
        ],
        "state_props_referenced": [
          "asChild",
          "cancelText",
          "children",
          "confirmPassword",
          "confirmationText",
          "icon",
          "isActive",
          "isSuperUser",
          "open",
          "password",
          "setOpen",
          "title",
          "titleHeader",
          "username"
        ],
        "file_size_lines": 302,
        "jsx_size_chars": 8622
      }
    },
    {
      "id": "ni0053",
      "type": "interface",
      "name": "EmbedModal",
      "path": "frontend/src/modals/EmbedModal/embed-modal.tsx",
      "category": "modal",
      "description": "interface node: EmbedModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "EmbedModal",
        "path": "frontend/src/modals/EmbedModal/embed-modal.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "react-syntax-highlighter",
              "items": [
                "Prism as SyntaxHighlighter"
              ]
            },
            {
              "source": "react-syntax-highlighter/dist/cjs/styles/prism",
              "items": [
                "oneDark",
                "oneLight",
                ""
              ]
            },
            {
              "source": "@/stores/darkStore",
              "items": [
                "useDarkStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../apiModal/utils/get-widget-code",
              "items": [
                "getWidgetCode"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          },
          "flowId": {
            "type": "any",
            "optional": false
          },
          "flowName": {
            "type": "any",
            "optional": false
          },
          "isAuth": {
            "type": "any",
            "optional": false
          },
          "tweaksBuildedObject": {
            "type": "any",
            "optional": false
          },
          "activeTweaks": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "isCopied": {
            "type": "boolean",
            "defaultValue": "false"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useDarkStore"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "BaseModal",
            "IconComponent",
            "SyntaxHighlighter"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "EmbedModal",
        "file_path": "frontend/src/modals/EmbedModal/embed-modal.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center gap-2 text-base font-semibold"
              },
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "icon-size"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "relative flex h-full w-full"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "!hover:bg-foreground group absolute right-2 top-2",
                "onClick": "copyToClipboard"
              },
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-5 w-5 text-muted-foreground"
              },
              "category": "component"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "!h-5 !w-5 text-muted-foreground"
              },
              "category": "component"
            },
            {
              "type": "SyntaxHighlighter",
              "attributes": {
                "className": "!mt-0 h-full w-full overflow-scroll !rounded-b-md border border-border text-left !custom-scroll"
              },
              "category": "component"
            }
          ],
          "components": [
            "BaseModal",
            "IconComponent",
            "SyntaxHighlighter",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "BaseModal",
            "IconComponent",
            "SyntaxHighlighter"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "right-2",
            "top-2",
            "!custom-scroll",
            "text-muted-foreground",
            "absolute",
            "!mt-0",
            "icon-size",
            "w-full",
            "gap-2",
            "w-5",
            "items-center",
            "text-base",
            "group",
            "border-border",
            "!hover:bg-foreground",
            "border",
            "!h-5",
            "overflow-scroll",
            "flex",
            "h-full",
            "relative",
            "h-5",
            "text-left",
            "!rounded-b-md",
            "font-semibold",
            "!w-5"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "!hover:bg-foreground group absolute right-2 top-2",
                "onClick": "copyToClipboard"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "EmbedModal",
        "file_path": "frontend/src/modals/EmbedModal/embed-modal.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for embed",
        "jsx_return_statement": "<BaseModal open={open} setOpen={setOpen} size=\"retangular\">\n      <BaseModal.Header>\n        <div className=\"flex items-center gap-2 text-base font-semibold\">\n          <IconComponent name=\"Columns2\" className=\"icon-size\" />\n          Embed into site\n        </div>\n      </BaseModal.Header>\n      <BaseModal.Content className=\"\">\n        <div className=\"relative flex h-full w-full\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={copyToClipboard}\n            data-testid=\"btn-copy-code\"\n            className=\"!hover:bg-foreground group absolute right-2 top-2\"\n          >\n            {isCopied ? (\n              <IconComponent\n                name=\"Check\"\n                className=\"h-5 w-5 text-muted-foreground\"\n              />\n            ) : (\n              <IconComponent\n                name=\"Copy\"\n                className=\"!h-5 !w-5 text-muted-foreground\"\n              />\n            )}\n          </Button>\n          <SyntaxHighlighter\n            showLineNumbers={true}\n            wrapLongLines={true}\n            language=\"html\"\n            style={isDark ? oneDark : oneLight}\n            className=\"!mt-0 h-full w-full overflow-scroll !rounded-b-md border border-border text-left !custom-scroll\"\n          >\n            {embedCode}\n          </SyntaxHighlighter>\n        </div>\n      </BaseModal.Content>\n    </BaseModal>",
        "jsx_simplified": "<BaseModal open={open} setOpen={setOpen} size=\"retangular\">\n      <BaseModal.Header>\n        <div className=\"flex items-center gap-2 text-base font-semibold\">\n          <IconComponent name=\"Columns2\" className=\"icon-size\" />\n          Embed into site\n        </div>\n      </BaseModal.Header>\n      <BaseModal.Content className=\"\">\n        <div className=\"relative flex h-full w-full\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={copyToClipboard}\n            data-testid=\"btn-copy-code\"\n            className=\"!hover:bg-foreground group absolute right-2 top-2\"\n          >\n            {/* complex expression */}\n          </Button>\n          <SyntaxHighlighter\n            showLineNumbers={true}\n            wrapLongLines={true}\n            language=\"html\"\n            style={isDark ? oneDark : oneLight}\n            className=\"!mt-0 h-full w-full overflow-scroll !rounded-b-md border border-border text-left !custom-scroll\"\n          >\n            {embedCode}\n          </SyntaxHighlighter>\n        </div>\n      </BaseModal.Content>\n    </BaseModal>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-syntax-highlighter",
            "items": [
              "Prism as SyntaxHighlighter"
            ],
            "type": "named"
          },
          {
            "source": "react-syntax-highlighter/dist/cjs/styles/prism",
            "items": [
              "oneDark",
              "oneLight",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/stores/darkStore",
            "items": [
              "useDarkStore"
            ],
            "type": "named"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../apiModal/utils/get-widget-code",
            "items": [
              "getWidgetCode"
            ],
            "type": "default"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": {
          "name": "EmbedModalProps",
          "definition": "open: boolean;\n  setOpen: (open: boolean) => void;\n  flowId: string;\n  flowName: string;\n  isAuth: boolean;\n  tweaksBuildedObject: {",
          "type": "interface"
        },
        "ui_components_used": [
          "BaseModal",
          "Button",
          "IconComponent",
          "SyntaxHighlighter"
        ],
        "tailwind_classes_used": [
          "!custom-scroll",
          "!h-5",
          "!hover:bg-foreground",
          "!mt-0",
          "!rounded-b-md",
          "!w-5",
          "absolute",
          "border",
          "border-border",
          "flex",
          "font-semibold",
          "gap-2",
          "group",
          "h-5",
          "h-full",
          "icon-size",
          "items-center",
          "overflow-scroll",
          "relative",
          "right-2",
          "text-base",
          "text-left",
          "text-muted-foreground",
          "top-2",
          "w-5",
          "w-full"
        ],
        "state_props_referenced": [
          "copyToClipboard",
          "embedCode",
          "open",
          "setOpen",
          "true"
        ],
        "file_size_lines": 99,
        "jsx_size_chars": 1383
      }
    },
    {
      "id": "ni0054",
      "type": "interface",
      "name": "ShareModal",
      "path": "frontend/src/modals/shareModal/index.tsx",
      "category": "modal",
      "description": "interface node: ShareModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "ShareModal",
        "path": "frontend/src/modals/shareModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "type ReactNode",
                "useEffect",
                "useMemo",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "lodash",
              "items": [
                "cloneDeep"
              ]
            },
            {
              "source": "@/hooks/flows/use-save-flow",
              "items": [
                "useSaveFlow"
              ]
            },
            {
              "source": "@/stores/utilityStore",
              "items": [
                "useUtilityStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/common/tagsSelectorComponent",
              "items": [
                "TagsSelector"
              ]
            },
            {
              "source": "../../components/core/editFlowSettingsComponent",
              "items": [
                "EditFlowSettings"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/checkbox",
              "items": [
                "Checkbox"
              ]
            },
            {
              "source": "../../controllers/API",
              "items": [
                "getStoreComponents",
                "saveFlowStore",
                "updateFlowStore",
                ""
              ]
            },
            {
              "source": "../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "../../stores/darkStore",
              "items": [
                "useDarkStore"
              ]
            },
            {
              "source": "../../stores/storeStore",
              "items": [
                "useStoreStore"
              ]
            },
            {
              "source": "../../utils/reactflowUtils",
              "items": [
                "downloadNode",
                "removeApiKeys",
                "removeFileNameFromComponents",
                ""
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "../confirmationModal",
              "items": [
                "ConfirmationModal"
              ]
            },
            {
              "source": "../exportModal",
              "items": [
                "ExportModal"
              ]
            },
            {
              "source": "./utils/get-tags-ids",
              "items": [
                "getTagsIds"
              ]
            }
          ]
        },
        "propDefinitions": {
          "component": {
            "type": "any",
            "optional": false
          },
          "is_component": {
            "type": "any",
            "optional": false
          },
          "children": {
            "type": "any",
            "optional": false
          },
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          },
          "disabled": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "openConfirmationModal": {
            "type": "any",
            "defaultValue": "false"
          },
          "sharePublic": {
            "type": "any",
            "defaultValue": "true"
          },
          "selectedTags": {
            "type": "string[]",
            "defaultValue": "[]"
          },
          "unavaliableNames": {
            "type": "\n    { id: string; name: string }[]\n  ",
            "defaultValue": "[]"
          },
          "loadingNames": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useAlertStore",
          "useStoreStore",
          "useSaveFlow",
          "useUtilityStore",
          "useDarkStore"
        ],
        "eventHandlers": {
          "handleShareComponent": {
            "type": "arrow_function",
            "async": true
          },
          "handleUpdateComponent": {
            "type": "arrow_function",
            "async": false
          },
          "handleExportComponent": {
            "type": "arrow_function",
            "async": false
          },
          "handleGetNames": {
            "type": "function_declaration",
            "async": true
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": null,
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "ConfirmationModal",
            "BaseModal",
            "Checkbox",
            "IconComponent",
            "TagsSelector",
            "ExportModal",
            "Button",
            "EditFlowSettings"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "ShareModal",
        "file_path": "frontend/src/modals/shareModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "ConfirmationModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "ConfirmationModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "br",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-xs text-destructive"
              },
              "category": "html"
            }
          ],
          "components": [
            "ConfirmationModal"
          ],
          "ui_patterns": [
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Checkbox"
          ],
          "custom": [
            "ConfirmationModal",
            "BaseModal",
            "IconComponent",
            "EditFlowSettings",
            "TagsSelector",
            "ExportModal"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "mb-2",
            "rounded-lg",
            "-m-0.5",
            "space-x-2",
            "text-xs",
            "export-modal-save-api",
            "w-full",
            "p-4",
            "gap-2",
            "mt-3",
            "text-foreground",
            "items-center",
            "w-4",
            "border-border",
            "border",
            "w-6",
            "h-6",
            "h-4",
            "mt-5",
            "flex",
            "h-8",
            "text-sm",
            "text-destructive",
            "pr-2"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "gap-2",
                "type": "button"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "gap-2",
                "type": "button"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "ShareModal",
        "file_path": "frontend/src/modals/shareModal/index.tsx",
        "component_type": "modal",
        "summary": "remove file names from flows before sharing",
        "jsx_return_statement": "<>\n        <ConfirmationModal\n          open={openConfirmationModal}\n          title={`Replace`}\n          cancelText=\"Cancel\"\n          confirmationText=\"Replace\"\n          size={\"x-small\"}\n          icon={\"SaveAll\"}\n          index={6}\n          onConfirm={() => {\n            handleUpdateComponent();\n            setOpenConfirmationModal(false);\n          }}\n          onCancel={() => {\n            setOpenConfirmationModal(false);\n          }}\n        >\n          <ConfirmationModal.Content>\n            <span>\n              It seems {name} already exists. Do you want to replace it with the\n              current?\n            </span>\n            <br></br>\n            <span className=\"text-xs text-destructive\">\n              Note: This action is irreversible.\n            </span>\n          </ConfirmationModal.Content>\n        </ConfirmationModal>\n      </>",
        "jsx_simplified": "<>\n        <ConfirmationModal\n          open={openConfirmationModal}\n          title={`Replace`}\n          cancelText=\"Cancel\"\n          confirmationText=\"Replace\"\n          size={\"x-small\"}\n          icon={\"SaveAll\"}\n          index={6}\n          onConfirm={handleClick}\n          onCancel={handleClick}\n        >\n          <ConfirmationModal.Content>\n            <span>\n              It seems {name} already exists. Do you want to replace it with the\n              current?\n            </span>\n            <br></br>\n            <span className=\"text-xs text-destructive\">\n              Note: This action is irreversible.\n            </span>\n          </ConfirmationModal.Content>\n        </ConfirmationModal>\n      </>",
        "imports": [
          {
            "source": "lodash",
            "items": [
              "cloneDeep"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "type ReactNode",
              "useEffect",
              "useMemo",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/hooks/flows/use-save-flow",
            "items": [
              "useSaveFlow"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/utilityStore",
            "items": [
              "useUtilityStore"
            ],
            "type": "named"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/tagsSelectorComponent",
            "items": [
              "TagsSelector"
            ],
            "type": "named"
          },
          {
            "source": "../../components/core/editFlowSettingsComponent",
            "items": [
              "EditFlowSettings"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/checkbox",
            "items": [
              "Checkbox"
            ],
            "type": "named"
          },
          {
            "source": "../../controllers/API",
            "items": [
              "getStoreComponents",
              "saveFlowStore",
              "updateFlowStore",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/darkStore",
            "items": [
              "useDarkStore"
            ],
            "type": "named"
          },
          {
            "source": "../../stores/storeStore",
            "items": [
              "useStoreStore"
            ],
            "type": "named"
          },
          {
            "source": "../../utils/reactflowUtils",
            "items": [
              "downloadNode",
              "removeApiKeys",
              "removeFileNameFromComponents",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "../confirmationModal",
            "items": [
              "ConfirmationModal"
            ],
            "type": "default"
          },
          {
            "source": "../exportModal",
            "items": [
              "ExportModal"
            ],
            "type": "default"
          },
          {
            "source": "./utils/get-tags-ids",
            "items": [
              "getTagsIds"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "ConfirmationModal"
        ],
        "tailwind_classes_used": [
          "text-destructive",
          "text-xs"
        ],
        "state_props_referenced": [
          "name",
          "openConfirmationModal"
        ],
        "file_size_lines": 305,
        "jsx_size_chars": 863
      }
    },
    {
      "id": "ni0055",
      "type": "interface",
      "name": "TemplatesModal",
      "path": "frontend/src/modals/templatesModal/index.tsx",
      "category": "modal",
      "description": "interface node: TemplatesModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "TemplatesModal",
        "path": "frontend/src/modals/templatesModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "useParams"
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/components/ui/sidebar",
              "items": [
                "SidebarProvider"
              ]
            },
            {
              "source": "@/customization/hooks/use-custom-navigate",
              "items": [
                "useCustomNavigate"
              ]
            },
            {
              "source": "@/customization/utils/analytics",
              "items": [
                "track"
              ]
            },
            {
              "source": "@/hooks/flows/use-add-flow",
              "items": [
                "useAddFlow"
              ]
            }
          ],
          "local": [
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "./components/GetStartedComponent",
              "items": [
                "GetStartedComponent"
              ]
            },
            {
              "source": "./components/navComponent",
              "items": [
                "Nav"
              ]
            },
            {
              "source": "./components/TemplateContentComponent",
              "items": [
                "TemplateContentComponent"
              ]
            }
          ]
        },
        "propDefinitions": {
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "currentTab": {
            "type": "any",
            "defaultValue": "\"get-started\""
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useParams",
          "useAddFlow",
          "useCustomNavigate"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BaseModal",
            "ForwardedIconComponent",
            "Nav",
            "GetStartedComponent",
            "TemplateContentComponent",
            "Button",
            "SidebarProvider"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "TemplatesModal",
        "file_path": "frontend/src/modals/templatesModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {
                "className": "p-0"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {
                "className": "flex flex-col p-0"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full"
              },
              "category": "html"
            },
            {
              "type": "SidebarProvider",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "Nav",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "main",
              "attributes": {
                "className": "flex flex-1 flex-col gap-4 overflow-auto p-6 md:gap-8"
              },
              "category": "html"
            },
            {
              "type": "GetStartedComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "TemplateContentComponent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full flex-col justify-between gap-4 pb-4 sm:flex-row sm:items-center"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col items-start justify-center"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "font-semibold"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "text-sm text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "SidebarProvider",
            "GetStartedComponent",
            "BaseModal",
            "TemplateContentComponent",
            "Nav",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "BaseModal",
            "SidebarProvider",
            "Nav",
            "GetStartedComponent",
            "TemplateContentComponent",
            "ForwardedIconComponent"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "sm:items-center",
            "text-muted-foreground",
            "gap-4",
            "flex-col",
            "w-full",
            "justify-center",
            "overflow-auto",
            "flex-1",
            "justify-between",
            "w-4",
            "p-6",
            "p-0",
            "items-start",
            "shrink-0",
            "sm:flex-row",
            "pb-4",
            "h-4",
            "flex",
            "text-sm",
            "h-full",
            "md:gap-8",
            "font-semibold"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "TemplatesModal",
        "file_path": "frontend/src/modals/templatesModal/index.tsx",
        "component_type": "modal",
        "summary": "Define categories and their items",
        "jsx_return_statement": "<BaseModal size=\"templates\" open={open} setOpen={setOpen} className=\"p-0\">\n      <BaseModal.Content className=\"flex flex-col p-0\">\n        <div className=\"flex h-full\">\n          <SidebarProvider width=\"15rem\" defaultOpen={false}>\n            <Nav\n              categories={categories}\n              currentTab={currentTab}\n              setCurrentTab={setCurrentTab}\n            />\n            <main className=\"flex flex-1 flex-col gap-4 overflow-auto p-6 md:gap-8\">\n              {currentTab === \"get-started\" ? (\n                <GetStartedComponent />\n              ) : (\n                <TemplateContentComponent\n                  currentTab={currentTab}\n                  categories={categories.flatMap((category) => category.items)}\n                />\n              )}\n              <BaseModal.Footer>\n                <div className=\"flex w-full flex-col justify-between gap-4 pb-4 sm:flex-row sm:items-center\">\n                  <div className=\"flex flex-col items-start justify-center\">\n                    <div className=\"font-semibold\">Start from scratch</div>\n                    <div className=\"text-sm text-muted-foreground\">\n                      Begin with a fresh flow to build from scratch.\n                    </div>\n                  </div>\n                  <Button\n                    onClick={() => {\n                      addFlow().then((id) => {\n                        navigate(\n                          `/flow/${id}${folderId ? `/folder/${folderId}` : \"\"}`,",
        "jsx_simplified": "<BaseModal size=\"templates\" open={open} setOpen={setOpen} className=\"p-0\">\n      <BaseModal.Content className=\"flex flex-col p-0\">\n        <div className=\"flex h-full\">\n          <SidebarProvider width=\"15rem\" defaultOpen={false}>\n            <Nav\n              categories={categories}\n              currentTab={currentTab}\n              setCurrentTab={setCurrentTab}\n            />\n            <main className=\"flex flex-1 flex-col gap-4 overflow-auto p-6 md:gap-8\">\n              {/* complex expression */}\n                  categories={categories.flatMap((category) => category.items)}\n                />\n              )}\n              <BaseModal.Footer>\n                <div className=\"flex w-full flex-col justify-between gap-4 pb-4 sm:flex-row sm:items-center\">\n                  <div className=\"flex flex-col items-start justify-center\">\n                    <div className=\"font-semibold\">Start from scratch</div>\n                    <div className=\"text-sm text-muted-foreground\">\n                      Begin with a fresh flow to build from scratch.\n                    </div>\n                  </div>\n                  <Button\n                    onClick={/* complex expression */}${folderId ? `/folder/${folderId}` : \"\"}`,",
        "imports": [
          {
            "source": "react",
            "items": [
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "useParams"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/sidebar",
            "items": [
              "SidebarProvider"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/hooks/use-custom-navigate",
            "items": [
              "useCustomNavigate"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/utils/analytics",
            "items": [
              "track"
            ],
            "type": "named"
          },
          {
            "source": "@/hooks/flows/use-add-flow",
            "items": [
              "useAddFlow"
            ],
            "type": "default"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "./components/GetStartedComponent",
            "items": [
              "GetStartedComponent"
            ],
            "type": "default"
          },
          {
            "source": "./components/navComponent",
            "items": [
              "Nav"
            ],
            "type": "named"
          },
          {
            "source": "./components/TemplateContentComponent",
            "items": [
              "TemplateContentComponent"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "Button",
          "GetStartedComponent",
          "Nav",
          "SidebarProvider",
          "TemplateContentComponent"
        ],
        "tailwind_classes_used": [
          "flex",
          "flex-1",
          "flex-col",
          "font-semibold",
          "gap-4",
          "h-full",
          "items-start",
          "justify-between",
          "justify-center",
          "md:gap-8",
          "overflow-auto",
          "p-0",
          "p-6",
          "pb-4",
          "sm:flex-row",
          "sm:items-center",
          "text-muted-foreground",
          "text-sm",
          "w-full"
        ],
        "state_props_referenced": [
          "categories",
          "currentTab",
          "false",
          "folderId",
          "id",
          "open",
          "setCurrentTab",
          "setOpen"
        ],
        "file_size_lines": 114,
        "jsx_size_chars": 1485
      }
    },
    {
      "id": "ni0056",
      "type": "interface",
      "name": "FlowSettingsModal",
      "path": "frontend/src/modals/flowSettingsModal/index.tsx",
      "category": "modal",
      "description": "interface node: FlowSettingsModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "FlowSettingsModal",
        "path": "frontend/src/modals/flowSettingsModal/index.tsx",
        "imports": {
          "react": [],
          "libraries": [
            {
              "source": "@/components/core/flowSettingsComponent",
              "items": [
                "FlowSettingsComponent"
              ]
            }
          ],
          "local": [
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          },
          "flowData": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {},
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BaseModal",
            "FlowSettingsComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "FlowSettingsModal",
        "file_path": "frontend/src/modals/flowSettingsModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {
                "className": "p-4"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-base font-semibold"
              },
              "category": "html"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "FlowSettingsComponent",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "FlowSettingsComponent",
            "BaseModal"
          ],
          "ui_patterns": [
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "BaseModal",
            "FlowSettingsComponent"
          ],
          "html": [
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "font-semibold",
            "text-base",
            "p-4"
          ],
          "layout_patterns": [],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "FlowSettingsModal",
        "file_path": "frontend/src/modals/flowSettingsModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for flowsettings",
        "jsx_return_statement": "<BaseModal\n      open={open}\n      setOpen={setOpen}\n      size=\"small-update\"\n      className=\"p-4\"\n    >\n      <BaseModal.Header>\n        <span className=\"text-base font-semibold\">Flow Details</span>\n      </BaseModal.Header>\n      <BaseModal.Content>\n        <FlowSettingsComponent\n          flowData={flowData}\n          close={() => setOpen(false)}\n          open={open}\n        />\n      </BaseModal.Content>\n    </BaseModal>",
        "jsx_simplified": "<BaseModal\n      open={open}\n      setOpen={setOpen}\n      size=\"small-update\"\n      className=\"p-4\"\n    >\n      <BaseModal.Header>\n        <span className=\"text-base font-semibold\">Flow Details</span>\n      </BaseModal.Header>\n      <BaseModal.Content>\n        <FlowSettingsComponent\n          flowData={flowData}\n          close={() => setOpen(false)}\n          open={open}\n        />\n      </BaseModal.Content>\n    </BaseModal>",
        "imports": [
          {
            "source": "@/components/core/flowSettingsComponent",
            "items": [
              "FlowSettingsComponent"
            ],
            "type": "default"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "FlowSettingsComponent"
        ],
        "tailwind_classes_used": [
          "font-semibold",
          "p-4",
          "text-base"
        ],
        "state_props_referenced": [
          "flowData",
          "open",
          "setOpen"
        ],
        "file_size_lines": 30,
        "jsx_size_chars": 430
      }
    },
    {
      "id": "ni0057",
      "type": "interface",
      "name": "QueryModal",
      "path": "frontend/src/modals/queryModal/index.tsx",
      "category": "modal",
      "description": "interface node: QueryModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "QueryModal",
        "path": "frontend/src/modals/queryModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [],
          "local": [
            {
              "source": "../../components/ui/textarea",
              "items": [
                "Textarea"
              ]
            },
            {
              "source": "../../constants/constants",
              "items": [
                "EDIT_TEXT_PLACEHOLDER",
                "TEXT_DIALOG_TITLE",
                ""
              ]
            },
            {
              "source": "../../utils/reactflowUtils",
              "items": [
                "handleKeyDown"
              ]
            },
            {
              "source": "../../utils/utils",
              "items": [
                "classNames"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "value": {
            "type": "any",
            "optional": false
          },
          "setValue": {
            "type": "any",
            "optional": false
          },
          "title": {
            "type": "any",
            "optional": false
          },
          "description": {
            "type": "any",
            "optional": false
          },
          "placeholder": {
            "type": "any",
            "optional": false
          },
          "children": {
            "type": "any",
            "optional": false
          },
          "disabled": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "modalOpen": {
            "type": "any",
            "defaultValue": "false"
          },
          "inputValue": {
            "type": "any",
            "defaultValue": "value"
          }
        },
        "refs": {
          "textRef": {
            "type": "HTMLTextAreaElement",
            "initialValue": "null"
          }
        },
        "effects": [
          {
            "dependencies": [
              "value",
              "modalOpen"
            ],
            "description": "Effect with 2 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "HTMLTextAreaElement",
            "BaseModal",
            "Textarea"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "QueryModal",
        "file_path": "frontend/src/modals/queryModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full items-start gap-3"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "BaseModal",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "classNames("
              },
              "category": "html"
            },
            {
              "type": "Textarea",
              "attributes": {
                "className": "form-input h-full min-h-28 w-full overflow-auto rounded-lg focus-visible:ring-1",
                "value": "inputValue"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "p",
              "attributes": {
                "className": "text-sm text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "BaseModal",
            "Textarea"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Textarea"
          ],
          "custom": [
            "HTMLTextAreaElement",
            "BaseModal"
          ],
          "html": [
            "div",
            "span",
            "p"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "form-input",
            "w-full",
            "flex-col",
            "classNames(",
            "gap-2",
            "flex",
            "overflow-auto",
            "text-sm",
            "items-start",
            "h-full",
            "rounded-lg",
            "text-muted-foreground",
            "gap-3",
            "min-h-28",
            "focus-visible:ring-1"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "QueryModal",
        "file_path": "frontend/src/modals/queryModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for query",
        "jsx_return_statement": "<BaseModal\n      onChangeOpenModal={(open) => {}}\n      open={modalOpen}\n      setOpen={setModalOpen}\n      size=\"small-query\"\n    >\n      <BaseModal.Trigger disable={disabled} asChild>\n        {children}\n      </BaseModal.Trigger>\n      <BaseModal.Header>\n        <div className=\"flex w-full items-start gap-3\">\n          <div className=\"flex\">\n            <span data-testid=\"modal-title\">{title ?? TEXT_DIALOG_TITLE}</span>\n          </div>\n        </div>\n      </BaseModal.Header>\n      <BaseModal.Content className=\"flex flex-col gap-2\" overflowHidden>\n        <div className={classNames(\"flex h-full w-full rounded-lg border\")}>\n          <Textarea\n            ref={textRef}\n            className=\"form-input h-full min-h-28 w-full overflow-auto rounded-lg focus-visible:ring-1\"\n            value={inputValue}\n            onChange={(event) => {\n              setInputValue(event.target.value);\n            }}\n            placeholder={placeholder ?? EDIT_TEXT_PLACEHOLDER}\n            onKeyDown={(e) => {\n              handleKeyDown(e, value, \"\");\n            }}\n            id={\"text-area-modal\"}\n            data-testid={\"text-area-modal\"}\n          />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <p className=\"text-sm text-muted-foreground\">{description}</p>\n        </div>\n      </BaseModal.Content>\n      <BaseModal.Footer\n        submit={{\n          label: \"Apply\",\n          dataTestId: \"genericModalBtnSave\",\n          onClick: () => {\n            setValue(inputValue);\n            setModalOpen(false);\n          },\n        }}\n      />\n    </BaseModal>",
        "jsx_simplified": "<BaseModal\n      onChangeOpenModal={handleClick}\n      open={modalOpen}\n      setOpen={setModalOpen}\n      size=\"small-query\"\n    >\n      <BaseModal.Trigger disable={disabled} asChild>\n        {children}\n      </BaseModal.Trigger>\n      <BaseModal.Header>\n        <div className=\"flex w-full items-start gap-3\">\n          <div className=\"flex\">\n            <span data-testid=\"modal-title\">{title ?? TEXT_DIALOG_TITLE}</span>\n          </div>\n        </div>\n      </BaseModal.Header>\n      <BaseModal.Content className=\"flex flex-col gap-2\" overflowHidden>\n        <div className={classNames(\"flex h-full w-full rounded-lg border\")}>\n          <Textarea\n            ref={textRef}\n            className=\"form-input h-full min-h-28 w-full overflow-auto rounded-lg focus-visible:ring-1\"\n            value={inputValue}\n            onChange={handleClick}\n            placeholder={placeholder ?? EDIT_TEXT_PLACEHOLDER}\n            onKeyDown={handleClick}\n            id={\"text-area-modal\"}\n            data-testid={\"text-area-modal\"}\n          />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <p className=\"text-sm text-muted-foreground\">{description}</p>\n        </div>\n      </BaseModal.Content>\n      <BaseModal.Footer\n        submit={/* complex expression */},\n        }}\n      />\n    </BaseModal>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/textarea",
            "items": [
              "Textarea"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/constants",
            "items": [
              "EDIT_TEXT_PLACEHOLDER",
              "TEXT_DIALOG_TITLE",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../utils/reactflowUtils",
            "items": [
              "handleKeyDown"
            ],
            "type": "named"
          },
          {
            "source": "../../utils/utils",
            "items": [
              "classNames"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "Textarea"
        ],
        "tailwind_classes_used": [
          "classNames(",
          "flex",
          "flex-col",
          "focus-visible:ring-1",
          "form-input",
          "gap-2",
          "gap-3",
          "h-full",
          "items-start",
          "min-h-28",
          "overflow-auto",
          "rounded-lg",
          "text-muted-foreground",
          "text-sm",
          "w-full"
        ],
        "state_props_referenced": [
          "children",
          "description",
          "disabled",
          "inputValue",
          "modalOpen",
          "setModalOpen",
          "textRef"
        ],
        "file_size_lines": 79,
        "jsx_size_chars": 1591
      }
    },
    {
      "id": "ni0058",
      "type": "interface",
      "name": "PromptModal",
      "path": "frontend/src/modals/promptModal/index.tsx",
      "category": "modal",
      "description": "interface node: PromptModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "PromptModal",
        "path": "frontend/src/modals/promptModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/controllers/API/queries/nodes/use-post-validate-prompt",
              "items": [
                "usePostValidatePrompt"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/common/sanitizedHTMLWrapper",
              "items": [
                "SanitizedHTMLWrapper"
              ]
            },
            {
              "source": "../../components/common/shadTooltipComponent",
              "items": [
                "ShadTooltip"
              ]
            },
            {
              "source": "../../components/ui/badge",
              "items": [
                "Badge"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/textarea",
              "items": [
                "Textarea"
              ]
            },
            {
              "source": "../../constants/alerts_constants",
              "items": [
                "BUG_ALERT",
                "PROMPT_ERROR_ALERT",
                "PROMPT_SUCCESS_ALERT",
                "TEMP_NOTICE_ALERT",
                ""
              ]
            },
            {
              "source": "../../constants/constants",
              "items": [
                "EDIT_TEXT_PLACEHOLDER",
                "INVALID_CHARACTERS",
                "MAX_WORDS_HIGHLIGHT",
                "regexHighlight",
                ""
              ]
            },
            {
              "source": "../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "../../utils/reactflowUtils",
              "items": [
                "handleKeyDown"
              ]
            },
            {
              "source": "../../utils/utils",
              "items": [
                "classNames"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "./utils/var-highlight-html",
              "items": [
                "varHighlightHTML"
              ]
            }
          ]
        },
        "propDefinitions": {
          "field_name = \"\"": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          },
          "setValue": {
            "type": "any",
            "optional": false
          },
          "nodeClass": {
            "type": "any",
            "optional": false
          },
          "setNodeClass": {
            "type": "any",
            "optional": false
          },
          "children": {
            "type": "any",
            "optional": false
          },
          "disabled": {
            "type": "any",
            "optional": false
          },
          "id = \"\"": {
            "type": "any",
            "optional": false
          },
          "readonly = false": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "modalOpen": {
            "type": "any",
            "defaultValue": "false"
          },
          "inputValue": {
            "type": "any",
            "defaultValue": "value"
          },
          "isEdit": {
            "type": "any",
            "defaultValue": "true"
          },
          "clickPosition": {
            "type": "any",
            "defaultValue": "{ x: 0, y: 0 }"
          },
          "scrollPosition": {
            "type": "any",
            "defaultValue": "0"
          }
        },
        "refs": {
          "divRef": {
            "type": "any",
            "initialValue": "null"
          },
          "_divRefPrompt": {
            "type": "any",
            "initialValue": "null"
          },
          "previewRef": {
            "type": "HTMLDivElement",
            "initialValue": "null"
          },
          "textareaRef": {
            "type": "HTMLTextAreaElement",
            "initialValue": "null"
          }
        },
        "effects": [
          {
            "dependencies": [
              "inputValue"
            ],
            "description": "Effect with 1 dependencies"
          },
          {
            "dependencies": [
              "value",
              "modalOpen"
            ],
            "description": "Effect with 2 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "usePostValidatePrompt",
          "useAlertStore"
        ],
        "eventHandlers": {
          "handlePreviewClick": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BaseModal",
            "IconComponent",
            "Badge",
            "ShadTooltip",
            "HTMLTextAreaElement",
            "Textarea",
            "Button",
            "SanitizedHTMLWrapper",
            "HTMLDivElement"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "PromptModal",
        "file_path": "frontend/src/modals/promptModal/index.tsx",
        "jsx_structure": {
          "elements": [],
          "components": [],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Badge",
            "Textarea"
          ],
          "custom": [
            "Set",
            "HTMLDivElement",
            "HTMLTextAreaElement",
            "BaseModal",
            "IconComponent",
            "SanitizedHTMLWrapper",
            "ShadTooltip"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "form-input",
            "classNames(",
            "text-muted-foreground",
            "rounded-lg",
            "getClassByNumberLength()",
            "max-w-[40vw]",
            "font-semibold",
            "text-xs",
            "pl-2",
            "truncate",
            "focus-visible:ring-1",
            "cursor-default",
            "w-full",
            "bottom-[1px]",
            "max-h-20",
            "gap-2",
            "custom-scroll",
            "flex-1",
            "justify-between",
            "mt-2",
            "items-center",
            "w-4",
            "border-0",
            "items-start",
            "shrink-0",
            "mr-2",
            "w-6",
            "h-6",
            "h-4",
            "flex-wrap",
            "resize-none",
            "p-1",
            "pr-1",
            "mb-auto",
            "text-primary",
            "flex",
            "text-md",
            "overflow-y-auto",
            "h-full",
            "text-sm",
            "relative",
            "gap-3",
            "+",
            "items-end"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "disabled": true
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "list"
      },
      "ui_uidl_complete": {
        "component_name": "PromptModal",
        "file_path": "frontend/src/modals/promptModal/index.tsx",
        "component_type": "modal",
        "summary": "Match *any* brace run around an identifier",
        "jsx_return_statement": "literal +\n        varHighlightHTML({ name: varName }) +\n        literal.replace(/\\{/g, \"}\") // same amount of closing braces",
        "jsx_simplified": "literal +\n        varHighlightHTML({ name: varName }) +\n        literal.replace(/\\{/g, \"}\") // same amount of closing braces",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/nodes/use-post-validate-prompt",
            "items": [
              "usePostValidatePrompt"
            ],
            "type": "named"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/sanitizedHTMLWrapper",
            "items": [
              "SanitizedHTMLWrapper"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/shadTooltipComponent",
            "items": [
              "ShadTooltip"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/badge",
            "items": [
              "Badge"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/textarea",
            "items": [
              "Textarea"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/alerts_constants",
            "items": [
              "BUG_ALERT",
              "PROMPT_ERROR_ALERT",
              "PROMPT_SUCCESS_ALERT",
              "TEMP_NOTICE_ALERT",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../constants/constants",
            "items": [
              "EDIT_TEXT_PLACEHOLDER",
              "INVALID_CHARACTERS",
              "MAX_WORDS_HIGHLIGHT",
              "regexHighlight",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../utils/reactflowUtils",
            "items": [
              "handleKeyDown"
            ],
            "type": "named"
          },
          {
            "source": "../../utils/utils",
            "items": [
              "classNames"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "./utils/var-highlight-html",
            "items": [
              "varHighlightHTML"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [],
        "tailwind_classes_used": [],
        "state_props_referenced": [],
        "file_size_lines": 343,
        "jsx_size_chars": 124
      }
    },
    {
      "id": "ni0059",
      "type": "interface",
      "name": "IOModal",
      "path": "frontend/src/modals/IOModal/playground-modal.tsx",
      "category": "modal",
      "description": "interface node: IOModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "IOModal",
        "path": "frontend/src/modals/IOModal/playground-modal.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useCallback",
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/assets/LangbuilderLogocolor.svg?react",
              "items": [
                "LangbuilderLogoColor"
              ]
            },
            {
              "source": "uuid",
              "items": [
                "v5 as uuidv5"
              ]
            },
            {
              "source": "zustand/react/shallow",
              "items": [
                "useShallow"
              ]
            },
            {
              "source": "@/components/core/appHeaderComponent/components/ThemeButtons",
              "items": [
                "ThemeButtons"
              ]
            },
            {
              "source": "@/controllers/API/queries/messages",
              "items": [
                "useDeleteMessages",
                "useGetMessagesQuery",
                ""
              ]
            },
            {
              "source": "@/controllers/API/queries/messages/use-delete-sessions",
              "items": [
                "useDeleteSession"
              ]
            },
            {
              "source": "@/controllers/API/queries/messages/use-get-sessions-from-flow",
              "items": [
                "useGetSessionsFromFlowQuery"
              ]
            },
            {
              "source": "@/customization/feature-flags",
              "items": [
                "ENABLE_PUBLISH"
              ]
            },
            {
              "source": "@/customization/utils/analytics",
              "items": [
                "track"
              ]
            },
            {
              "source": "@/customization/utils/custom-open-new-tab",
              "items": [
                "customOpenNewTab"
              ]
            },
            {
              "source": "@/customization/utils/urls",
              "items": [
                "LangbuilderButtonRedirectTarget"
              ]
            },
            {
              "source": "@/stores/utilityStore",
              "items": [
                "useUtilityStore"
              ]
            },
            {
              "source": "@/utils/styleUtils",
              "items": [
                "swatchColors"
              ]
            }
          ],
          "local": [
            {
              "source": "../../assets/LangbuilderLogoColor.svg?react",
              "items": [
                "LangbuilderLogoColor"
              ]
            },
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/common/shadTooltipComponent",
              "items": [
                "ShadTooltip"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            },
            {
              "source": "../../stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "../../stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "../../stores/messagesStore",
              "items": [
                "useMessagesStore"
              ]
            },
            {
              "source": "../../utils/utils",
              "items": [
                "cn",
                "getNumberFromString"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "./components/chat-view-wrapper",
              "items": [
                "ChatViewWrapper"
              ]
            },
            {
              "source": "./components/chatView/chatInput/components/voice-assistant/helpers/create-new-session-name",
              "items": [
                "createNewSessionName"
              ]
            },
            {
              "source": "./components/selected-view-field",
              "items": [
                "SelectedViewField"
              ]
            },
            {
              "source": "./components/sidebar-open-view",
              "items": [
                "SidebarOpenView"
              ]
            }
          ]
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          },
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          },
          "disable": {
            "type": "any",
            "optional": false
          },
          "isPlayground": {
            "type": "any",
            "optional": false
          },
          "canvasOpen": {
            "type": "any",
            "optional": false
          },
          "playgroundPage": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "sidebarOpen": {
            "type": "any",
            "defaultValue": "true"
          },
          "visibleSession": {
            "type": "string | undefined",
            "defaultValue": "currentFlowId,"
          },
          "selectedViewField": {
            "type": "\n    { type: string; id: string } | undefined\n  ",
            "defaultValue": "startView("
          },
          "sessions": {
            "type": "string[]",
            "defaultValue": "[]"
          },
          "sessionId": {
            "type": "string",
            "defaultValue": "currentFlowId"
          },
          "hasInitialized": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {
          "prevVisibleSessionRef": {
            "type": "string | undefined",
            "initialValue": "visibleSession"
          }
        },
        "effects": [
          {
            "dependencies": [
              "open"
            ],
            "description": "Effect with 1 dependencies"
          },
          {
            "dependencies": [
              "open"
            ],
            "description": "Effect with 1 dependencies"
          },
          {
            "dependencies": [
              "playgroundPage",
              "messages"
            ],
            "description": "Effect with 2 dependencies"
          },
          {
            "dependencies": [
              "visibleSession"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useAlertStore",
          "useDeleteSession",
          "useMessagesStore",
          "useFlowStore",
          "useGetMessagesQuery",
          "useUtilityStore",
          "useFlowsManagerStore",
          "useGetSessionsFromFlowQuery"
        ],
        "eventHandlers": {
          "handleRefetchAndSetSession": {
            "type": "arrow_function",
            "async": true
          },
          "handleResize": {
            "type": "arrow_function",
            "async": false
          },
          "handleDeleteSession": {
            "type": "function_declaration",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BaseModal",
            "IconComponent",
            "ShadTooltip",
            "SidebarOpenView",
            "ThemeButtons",
            "LangbuilderLogoColor",
            "SelectedViewField",
            "Button",
            "ChatViewWrapper"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "IOModal",
        "file_path": "frontend/src/modals/IOModal/playground-modal.tsx",
        "jsx_structure": {
          "elements": [],
          "components": [],
          "ui_patterns": [
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "BaseModal",
            "IconComponent",
            "ShadTooltip",
            "SidebarOpenView",
            "ThemeButtons",
            "LangbuilderLogoColor",
            "SelectedViewField",
            "ChatViewWrapper"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "h-12",
            "align-middle",
            "flex-grow",
            "!rounded-xl",
            "bg-background",
            "rounded",
            "left-0",
            "absolute",
            "md:block",
            "hidden",
            "truncate",
            "swatchColors[swatchIndex],",
            "!rounded-[12px]",
            "w-full",
            "flex-col",
            "p-1`,",
            "gap-2",
            "px-2",
            "justify-center",
            "py-4",
            "flex-max-width",
            "transition-all",
            "shadow-lg",
            "pb-8",
            "w-8",
            "bottom-2",
            "justify-between",
            "min-w-96",
            "items-center",
            "scale-150",
            "border-t",
            "w-12",
            "left-4",
            "border-border",
            "p-0",
            "h-3.5",
            "bottom-6",
            "cn(",
            "!p-4",
            ")",
            "flex",
            "`flex",
            "h-8",
            "!p-0",
            "h-[18px]",
            "h-full",
            "text-sm",
            "text-ring",
            "w-[18px]",
            "gap-8",
            "font-semibold",
            "w-3.5"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "flex h-8 w-8 items-center justify-center !p-0"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "w-full !rounded-xl shadow-lg",
                "onClick": "LangbuilderButtonClick"
              },
              "type": "button"
            },
            {
              "attributes": {
                "className": "h-12 w-12 !rounded-xl !p-4 shadow-lg",
                "onClick": "LangbuilderButtonClick"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "IOModal",
        "file_path": "frontend/src/modals/IOModal/playground-modal.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for io",
        "jsx_return_statement": ") => {\n      setIOModalOpen(false);\n    };\n  }, [open]);\n\n  function handleDeleteSession(session_id: string) {\n    // Update UI optimistically\n    if (visibleSession === session_id) {\n      const remainingSessions = sessions.filter((s) => s !== session_id);\n      if (remainingSessions.length > 0) {\n        setvisibleSession(remainingSessions[0]);\n      } else {\n        setvisibleSession(currentFlowId);\n      }\n    }\n\n    // Delete the session (which will delete all associated messages on the backend)\n    deleteSessionFunction(\n      { sessionId: session_id },\n      {\n        onSuccess: () => {\n          // Remove the session from local state\n          deleteSession(session_id);\n\n          // Remove all messages for this session from local state\n          const messageIdsToRemove = messages\n            .filter((msg) => msg.session_id === session_id)\n            .map((msg) => msg.id);\n\n          if (messageIdsToRemove.length > 0) {\n            removeMessages(messageIdsToRemove);\n          }\n\n          setSuccessData({\n            title: \"Session deleted successfully.\",\n          });\n        },\n        onError: () => {\n          // Revert optimistic UI update on error\n          if (visibleSession !== session_id) {\n            setvisibleSession(session_id);\n          }\n\n          setErrorData({\n            title: \"Error deleting session.\",\n          });\n        },\n      },",
        "jsx_simplified": ") => {\n      setIOModalOpen(false);\n    };\n  }, [open]);\n\n  function handleDeleteSession(session_id: string) {/* complex expression */} else {\n        setvisibleSession(currentFlowId);\n      }\n    }\n\n    // Delete the session (which will delete all associated messages on the backend)\n    deleteSessionFunction(\n      { sessionId: session_id },\n      {/* complex expression */}\n\n          setSuccessData({\n            title: \"Session deleted successfully.\",\n          });\n        },\n        onError: () => {/* complex expression */}\n\n          setErrorData({\n            title: \"Error deleting session.\",\n          });\n        },\n      },",
        "imports": [
          {
            "source": "@/assets/LangbuilderLogocolor.svg?react",
            "items": [
              "LangbuilderLogoColor"
            ],
            "type": "default"
          },
          {
            "source": "react",
            "items": [
              "useCallback",
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "uuid",
            "items": [
              "v5 as uuidv5"
            ],
            "type": "named"
          },
          {
            "source": "zustand/react/shallow",
            "items": [
              "useShallow"
            ],
            "type": "named"
          },
          {
            "source": "@/components/core/appHeaderComponent/components/ThemeButtons",
            "items": [
              "ThemeButtons"
            ],
            "type": "default"
          },
          {
            "source": "@/controllers/API/queries/messages",
            "items": [
              "useDeleteMessages",
              "useGetMessagesQuery",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/messages/use-delete-sessions",
            "items": [
              "useDeleteSession"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/messages/use-get-sessions-from-flow",
            "items": [
              "useGetSessionsFromFlowQuery"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/feature-flags",
            "items": [
              "ENABLE_PUBLISH"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/utils/analytics",
            "items": [
              "track"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/utils/custom-open-new-tab",
            "items": [
              "customOpenNewTab"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/utils/urls",
            "items": [
              "LangbuilderButtonRedirectTarget"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/utilityStore",
            "items": [
              "useUtilityStore"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/styleUtils",
            "items": [
              "swatchColors"
            ],
            "type": "named"
          },
          {
            "source": "../../assets/LangbuilderLogoColor.svg?react",
            "items": [
              "LangbuilderLogoColor"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/shadTooltipComponent",
            "items": [
              "ShadTooltip"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "../../stores/messagesStore",
            "items": [
              "useMessagesStore"
            ],
            "type": "named"
          },
          {
            "source": "../../utils/utils",
            "items": [
              "cn",
              "getNumberFromString"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "./components/chat-view-wrapper",
            "items": [
              "ChatViewWrapper"
            ],
            "type": "named"
          },
          {
            "source": "./components/chatView/chatInput/components/voice-assistant/helpers/create-new-session-name",
            "items": [
              "createNewSessionName"
            ],
            "type": "named"
          },
          {
            "source": "./components/selected-view-field",
            "items": [
              "SelectedViewField"
            ],
            "type": "named"
          },
          {
            "source": "./components/sidebar-open-view",
            "items": [
              "SidebarOpenView"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [],
        "tailwind_classes_used": [],
        "state_props_referenced": [],
        "file_size_lines": 503,
        "jsx_size_chars": 1391
      }
    },
    {
      "id": "ni0060",
      "type": "interface",
      "name": "UpdateComponentModal",
      "path": "frontend/src/modals/updateComponentModal/index.tsx",
      "category": "modal",
      "description": "interface node: UpdateComponentModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "UpdateComponentModal",
        "path": "frontend/src/modals/updateComponentModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/core/parameterRenderComponent/components/tableComponent",
              "items": [
                "TableComponent"
              ]
            },
            {
              "source": "@/components/ui/checkbox",
              "items": [
                "Checkbox"
              ]
            },
            {
              "source": "@/pages/MainPage/hooks/use-handle-duplicate",
              "items": [
                "useDuplicateFlows"
              ]
            },
            {
              "source": "@/stores/flowStore",
              "items": [
                "useFlowStore"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": [
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          },
          "onUpdateNode": {
            "type": "any",
            "optional": false
          },
          "children": {
            "type": "any",
            "optional": false
          },
          "components": {
            "type": "any",
            "optional": false
          },
          "isMultiple = false": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "backupFlow": {
            "type": "boolean",
            "defaultValue": "true"
          },
          "loading": {
            "type": "boolean",
            "defaultValue": "false"
          }
        },
        "refs": {
          "agGrid": {
            "type": "AgGridReact",
            "initialValue": "null"
          }
        },
        "effects": [
          {
            "dependencies": [
              "open"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useFlowStore",
          "useDuplicateFlows"
        ],
        "eventHandlers": {
          "handleUpdate": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "div",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "AgGridReact",
            "Checkbox",
            "BaseModal",
            "ForwardedIconComponent",
            "TableComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "UpdateComponentModal",
        "file_path": "frontend/src/modals/updateComponentModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center gap-3"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-4 w-4"
              },
              "category": "component"
            }
          ],
          "components": [
            "ForwardedIconComponent"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Checkbox"
          ],
          "custom": [
            "Set",
            "AgGridReact",
            "ForwardedIconComponent",
            "BaseModal",
            "TableComponent"
          ],
          "html": [
            "div",
            "span",
            "p"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "text-muted-foreground",
            "ag-no-selection",
            "text-accent-amber-foreground",
            "flex-col",
            "-mx-4",
            "max-h-[200px]",
            "overflow-x-hidden",
            "items-center",
            "w-4",
            "select-none",
            "bg-muted",
            "h-4",
            "gap-6",
            "cn(",
            "py-3",
            "cursor-pointer",
            "flex",
            "ag-tool-mode",
            "px-4",
            "text-sm",
            "overflow-y-auto",
            "gap-3",
            "font-semibold"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "table",
            "columns": [],
            "has_pagination": false
          }
        ],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "UpdateComponentModal",
        "file_path": "frontend/src/modals/updateComponentModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for updatecomponent",
        "jsx_return_statement": "<div className=\"flex items-center gap-3\">\n            {params.data.icon && (\n              <ForwardedIconComponent\n                name={params.data.icon}\n                className=\"h-4 w-4\"\n              />\n            )}\n            {params.value}\n          </div>",
        "jsx_simplified": "<div className=\"flex items-center gap-3\">\n            {params.data.icon && (\n              <ForwardedIconComponent\n                name={params.data.icon}\n                className=\"h-4 w-4\"\n              />\n            )}\n            {params.value}\n          </div>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/parameterRenderComponent/components/tableComponent",
            "items": [
              "TableComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/checkbox",
            "items": [
              "Checkbox"
            ],
            "type": "named"
          },
          {
            "source": "@/pages/MainPage/hooks/use-handle-duplicate",
            "items": [
              "useDuplicateFlows"
            ],
            "type": "default"
          },
          {
            "source": "@/stores/flowStore",
            "items": [
              "useFlowStore"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "ForwardedIconComponent"
        ],
        "tailwind_classes_used": [
          "flex",
          "gap-3",
          "h-4",
          "items-center",
          "w-4"
        ],
        "state_props_referenced": [],
        "file_size_lines": 227,
        "jsx_size_chars": 266
      }
    },
    {
      "id": "ni0061",
      "type": "interface",
      "name": "SaveChangesModal",
      "path": "frontend/src/modals/saveChangesModal/index.tsx",
      "category": "modal",
      "description": "interface node: SaveChangesModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "SaveChangesModal",
        "path": "frontend/src/modals/saveChangesModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "lodash",
              "items": [
                "truncate"
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/ui/loading",
              "items": [
                "Loading"
              ]
            }
          ],
          "local": [
            {
              "source": "../confirmationModal",
              "items": [
                "ConfirmationModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "onSave": {
            "type": "any",
            "optional": false
          },
          "onProceed": {
            "type": "any",
            "optional": false
          },
          "onCancel": {
            "type": "any",
            "optional": false
          },
          "flowName": {
            "type": "any",
            "optional": false
          },
          "lastSaved": {
            "type": "any",
            "optional": false
          },
          "autoSave": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "saving": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "ConfirmationModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "ConfirmationModal",
            "ForwardedIconComponent",
            "Loading"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "SaveChangesModal",
        "file_path": "frontend/src/modals/saveChangesModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "ConfirmationModal",
              "attributes": {
                "onClose": "onCancel",
                "onText": "autoSave ? undefined : \"Save and Exit\""
              },
              "category": "component"
            },
            {
              "type": "ConfirmationModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "mb-4 flex w-full items-center gap-3 rounded-md bg-muted px-4 py-2 text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "Loading",
              "attributes": {
                "className": "h-5 w-5"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "mb-4 flex w-full items-center gap-3 rounded-md bg-yellow-100 px-4 py-2 text-yellow-800 dark:bg-yellow-900/40 dark:text-yellow-100"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-5 w-5"
              },
              "category": "component"
            },
            {
              "type": "a",
              "attributes": {
                "className": "text-secondary underline"
              },
              "category": "html"
            }
          ],
          "components": [
            "Loading",
            "ForwardedIconComponent",
            "ConfirmationModal"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "ConfirmationModal",
            "Loading",
            "ForwardedIconComponent"
          ],
          "html": [
            "div"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "text-secondary",
            "w-full",
            "underline",
            "text-yellow-800",
            "dark:bg-yellow-900/40",
            "flex",
            "rounded-md",
            "px-4",
            "mb-4",
            "py-2",
            "text-muted-foreground",
            "dark:text-yellow-100",
            "bg-muted",
            "bg-yellow-100",
            "h-5",
            "w-5",
            "gap-3",
            "items-center"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "dark-mode-support",
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "SaveChangesModal",
        "file_path": "frontend/src/modals/saveChangesModal/index.tsx",
        "component_type": "modal",
        "summary": "docs.langbuilder.org/configuration-auto-save\"",
        "jsx_return_statement": "<ConfirmationModal\n      open={true}\n      onClose={onCancel}\n      destructiveCancel\n      title={\n        (autoSave ? \"Flow\" : truncate(flowName, { length: 32 })) +\n        \" has unsaved changes\"\n      }\n      cancelText={autoSave ? undefined : \"Exit anyway\"}\n      confirmationText={autoSave ? undefined : \"Save and Exit\"}\n      onConfirm={\n        autoSave\n          ? undefined\n          : () => {\n              setSaving(true);\n              onSave();\n            }\n      }\n      onCancel={onProceed}\n      loading={autoSave ? true : saving}\n      size=\"x-small\"\n    >\n      <ConfirmationModal.Content>\n        {autoSave ? (\n          <div className=\"mb-4 flex w-full items-center gap-3 rounded-md bg-muted px-4 py-2 text-muted-foreground\">\n            <Loading className=\"h-5 w-5\" />\n            Saving your changes...\n          </div>\n        ) : (\n          <>\n            <div className=\"mb-4 flex w-full items-center gap-3 rounded-md bg-yellow-100 px-4 py-2 text-yellow-800 dark:bg-yellow-900/40 dark:text-yellow-100\">\n              <ForwardedIconComponent name=\"Info\" className=\"h-5 w-5\" />\n              Last saved: {lastSaved ?? \"Never\"}\n            </div>\n            Unsaved changes will be permanently lost.{\" \"}\n            <a\n              target=\"_blank\"\n              className=\"text-secondary underline\"\n              href=\"https://docs.langbuilder.org/configuration-auto-save\"\n              rel=\"noopener\"\n            >\n              Enable auto-saving\n            </a>{\" \"}\n            to avoid losing progress.\n          </>\n        )}\n      </ConfirmationModal.Content>\n    </ConfirmationModal>",
        "jsx_simplified": "<ConfirmationModal\n      open={true}\n      onClose={onCancel}\n      destructiveCancel\n      title={\n        (autoSave ? \"Flow\" : truncate(flowName, { length: 32 })) +\n        \" has unsaved changes\"\n      }\n      cancelText={autoSave ? undefined : \"Exit anyway\"}\n      confirmationText={autoSave ? undefined : \"Save and Exit\"}\n      onConfirm={/* complex expression */}\n      }\n      onCancel={onProceed}\n      loading={autoSave ? true : saving}\n      size=\"x-small\"\n    >\n      <ConfirmationModal.Content>\n        {/* complex expression */}\n            </div>\n            Unsaved changes will be permanently lost.{\" \"}\n            <a\n              target=\"_blank\"\n              className=\"text-secondary underline\"\n              href=\"https://docs.langbuilder.org/configuration-auto-save\"\n              rel=\"noopener\"\n            >\n              Enable auto-saving\n            </a>{\" \"}\n            to avoid losing progress.\n          </>\n        )}\n      </ConfirmationModal.Content>\n    </ConfirmationModal>",
        "imports": [
          {
            "source": "lodash",
            "items": [
              "truncate"
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/loading",
            "items": [
              "Loading"
            ],
            "type": "default"
          },
          {
            "source": "../confirmationModal",
            "items": [
              "ConfirmationModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "ConfirmationModal",
          "ForwardedIconComponent",
          "Loading"
        ],
        "tailwind_classes_used": [
          "bg-muted",
          "bg-yellow-100",
          "dark:bg-yellow-900/40",
          "dark:text-yellow-100",
          "flex",
          "gap-3",
          "h-5",
          "items-center",
          "mb-4",
          "px-4",
          "py-2",
          "rounded-md",
          "text-muted-foreground",
          "text-secondary",
          "text-yellow-800",
          "underline",
          "w-5",
          "w-full"
        ],
        "state_props_referenced": [
          "true"
        ],
        "file_size_lines": 73,
        "jsx_size_chars": 1620
      }
    },
    {
      "id": "ni0062",
      "type": "interface",
      "name": "AddMcpServerModal",
      "path": "frontend/src/modals/addMcpServerModal/index.tsx",
      "category": "modal",
      "description": "interface node: AddMcpServerModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "AddMcpServerModal",
        "path": "frontend/src/modals/addMcpServerModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@tanstack/react-query",
              "items": [
                "useIsFetching",
                "usePrefetchQuery",
                "useQueryClient",
                ""
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "ForwardedIconComponent"
              ]
            },
            {
              "source": "@/components/common/shadTooltipComponent",
              "items": [
                "ShadTooltip"
              ]
            },
            {
              "source": "@/components/core/parameterRenderComponent/components/inputListComponent",
              "items": [
                "InputListComponent"
              ]
            },
            {
              "source": "@/components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "@/components/ui/input",
              "items": [
                "Input"
              ]
            },
            {
              "source": "@/components/ui/label",
              "items": [
                "Label"
              ]
            },
            {
              "source": "@/components/ui/tabs-button",
              "items": [
                "Tabs",
                "TabsContent",
                "TabsList",
                "TabsTrigger",
                ""
              ]
            },
            {
              "source": "@/components/ui/textarea",
              "items": [
                "Textarea"
              ]
            },
            {
              "source": "@/constants/constants",
              "items": [
                "MAX_MCP_SERVER_NAME_LENGTH"
              ]
            },
            {
              "source": "@/controllers/API/queries/mcp/use-add-mcp-server",
              "items": [
                "useAddMCPServer"
              ]
            },
            {
              "source": "@/controllers/API/queries/mcp/use-patch-mcp-server",
              "items": [
                "usePatchMCPServer"
              ]
            },
            {
              "source": "@/customization/components/custom-link",
              "items": [
                "CustomLink"
              ]
            },
            {
              "source": "@/modals/baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "@/modals/IOModal/components/IOFieldView/components/key-pair-input",
              "items": [
                "IOKeyPairInput"
              ]
            },
            {
              "source": "@/utils/mcpUtils",
              "items": [
                "extractMcpServersFromJson"
              ]
            },
            {
              "source": "@/utils/stringManipulation",
              "items": [
                "parseString"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "cn"
              ]
            }
          ],
          "local": []
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          },
          "initialData": {
            "type": "any",
            "optional": false
          },
          "open": {
            "type": "any",
            "optional": false
          },
          "setOpen": {
            "type": "any",
            "optional": false
          },
          "onSuccess": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "type": {
            "type": "any",
            "defaultValue": "initialData ? (initialData.command ? \"STDIO\" : \"SSE\""
          },
          "jsonValue": {
            "type": "any",
            "defaultValue": "\"\""
          },
          "error": {
            "type": "string | null",
            "defaultValue": "\"Error downloading file: File _mcp_servers.json not found in flow 7e93e2c5-b979-49c0-b01b-4f4111d9230d\","
          },
          "stdioName": {
            "type": "any",
            "defaultValue": "initialData?.name || \"\""
          },
          "stdioCommand": {
            "type": "any",
            "defaultValue": "initialData?.command || \"\""
          },
          "stdioArgs": {
            "type": "string[]",
            "defaultValue": "initialData?.args || [\"\"],"
          },
          "stdioEnv": {
            "type": "any",
            "defaultValue": "initialData?.env || []"
          },
          "sseName": {
            "type": "any",
            "defaultValue": "initialData?.name || \"\""
          },
          "sseUrl": {
            "type": "any",
            "defaultValue": "initialData?.url || \"\""
          },
          "sseEnv": {
            "type": "any",
            "defaultValue": "initialData?.env || []"
          },
          "sseHeaders": {
            "type": "any",
            "defaultValue": "initialData?.headers || []"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "open"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "usePatchMCPServer",
          "useQueryClient",
          "useAddMCPServer"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BaseModal",
            "CustomLink",
            "ForwardedIconComponent",
            "TabsList",
            "ShadTooltip",
            "TabsTrigger",
            "InputListComponent",
            "Textarea",
            "Tabs",
            "Input",
            "IOKeyPairInput",
            "Button",
            "Label",
            "TabsContent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "AddMcpServerModal",
        "file_path": "frontend/src/modals/addMcpServerModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {
                "className": "!p-0",
                "onSubmit": "submitForm"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {
                "className": "flex flex-col justify-between overflow-hidden"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-3 p-4 tracking-normal"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex items-center gap-2 text-sm font-medium"
              },
              "category": "html"
            },
            {
              "type": "ForwardedIconComponent",
              "attributes": {
                "className": "h-4 w-4 text-primary"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-mmd font-normal text-muted-foreground"
              },
              "category": "html"
            },
            {
              "type": "CustomLink",
              "attributes": {
                "className": "underline"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col gap-4 overflow-hidden"
              },
              "category": "html"
            },
            {
              "type": "Tabs",
              "attributes": {
                "className": "w-full",
                "onValueChange": "changeType"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "px-4"
              },
              "category": "html"
            },
            {
              "type": "TabsList",
              "attributes": {
                "className": "mb-4 grid w-full grid-cols-3"
              },
              "category": "component"
            },
            {
              "type": "TabsTrigger",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "TabsTrigger",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "TabsTrigger",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "relative flex max-h-[280px] min-h-[280px] w-full flex-1 flex-col gap-2 overflow-y-auto border-y p-4 pt-2"
              },
              "category": "html"
            },
            {
              "type": "ShadTooltip",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "cn("
              },
              "category": "html"
            },
            {
              "type": "TabsContent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "Label",
              "attributes": {
                "className": "!text-mmd"
              },
              "category": "component"
            },
            {
              "type": "Textarea",
              "attributes": {
                "value": "jsonValue"
              },
              "category": "component"
            },
            {
              "type": "TabsContent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-4"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "Label",
              "attributes": {
                "className": "flex items-start gap-1 !text-mmd"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-red-500"
              },
              "category": "html"
            },
            {
              "type": "Input",
              "attributes": {
                "value": "stdioName"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "Label",
              "attributes": {
                "className": "flex items-start gap-1 !text-mmd"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-red-500"
              },
              "category": "html"
            },
            {
              "type": "Input",
              "attributes": {
                "value": "stdioCommand"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "Label",
              "attributes": {
                "className": "!text-mmd"
              },
              "category": "component"
            },
            {
              "type": "InputListComponent",
              "attributes": {
                "value": "stdioArgs"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "Label",
              "attributes": {
                "className": "!text-mmd"
              },
              "category": "component"
            },
            {
              "type": "IOKeyPairInput",
              "attributes": {
                "onChange": "setStdioEnv",
                "value": "stdioEnv"
              },
              "category": "component"
            },
            {
              "type": "TabsContent",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-4"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "Label",
              "attributes": {
                "className": "flex items-start gap-1 !text-mmd"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-red-500"
              },
              "category": "html"
            },
            {
              "type": "Input",
              "attributes": {
                "value": "sseName"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "Label",
              "attributes": {
                "className": "flex items-start gap-1 !text-mmd"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-red-500"
              },
              "category": "html"
            },
            {
              "type": "Input",
              "attributes": {
                "value": "sseUrl"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "Label",
              "attributes": {
                "className": "!text-mmd"
              },
              "category": "component"
            },
            {
              "type": "IOKeyPairInput",
              "attributes": {
                "onChange": "setSseHeaders",
                "value": "sseHeaders"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex flex-col gap-2"
              },
              "category": "html"
            },
            {
              "type": "Label",
              "attributes": {
                "className": "!text-mmd"
              },
              "category": "component"
            },
            {
              "type": "IOKeyPairInput",
              "attributes": {
                "onChange": "setSseEnv",
                "value": "sseEnv"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex justify-end gap-2 p-4"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-mmd font-normal"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "onClick": "submitForm"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "text-mmd"
              },
              "category": "html"
            }
          ],
          "components": [
            "TabsContent",
            "Label",
            "Textarea",
            "Input",
            "ForwardedIconComponent",
            "BaseModal",
            "IOKeyPairInput",
            "CustomLink",
            "InputListComponent",
            "Button",
            "ShadTooltip",
            "TabsTrigger",
            "TabsList",
            "Tabs"
          ],
          "ui_patterns": [
            {
              "type": "form",
              "description": "Form with inputs and submit handling"
            },
            {
              "type": "grid",
              "description": "Grid layout structure"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Input",
            "Tabs",
            "TabsList",
            "TabsTrigger",
            "TabsContent",
            "Label",
            "Textarea"
          ],
          "custom": [
            "BaseModal",
            "ForwardedIconComponent",
            "CustomLink",
            "ShadTooltip",
            "InputListComponent",
            "IOKeyPairInput"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "min-h-[280px]",
            "!text-mmd",
            "pt-2",
            "text-muted-foreground",
            "overflow-hidden",
            "gap-4",
            "flex-col",
            "w-full",
            "p-4",
            "gap-2",
            "gap-1",
            "flex-1",
            "justify-between",
            "items-center",
            "w-4",
            "font-mono",
            "grid-cols-3",
            "font-normal",
            "max-h-[280px]",
            "text-mmd",
            "items-start",
            "border-y",
            "h-4",
            "tracking-normal",
            "underline",
            "cn(",
            "font-medium",
            "flex",
            "!p-0",
            "text-primary",
            "min-h-[225px]",
            "text-sm",
            "h-full",
            "px-4",
            "mb-4",
            "relative",
            "overflow-y-auto",
            "grid",
            "justify-end",
            "gap-3",
            "text-red-500"
          ],
          "layout_patterns": [
            "flexbox",
            "grid"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            },
            {
              "attributes": {
                "onClick": "submitForm"
              },
              "type": "button"
            }
          ],
          "inputs": [
            {
              "attributes": {
                "value": "stdioName"
              },
              "type": "text"
            },
            {
              "attributes": {
                "value": "stdioCommand"
              },
              "type": "text"
            },
            {
              "attributes": {
                "value": "sseName"
              },
              "type": "text"
            },
            {
              "attributes": {
                "value": "sseUrl"
              },
              "type": "text"
            }
          ],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "dynamic_list",
            "arrays": [
              "servers",
              "servers",
              "servers"
            ],
            "description": "Dynamic rendering of 3 lists"
          }
        ],
        "primary_layout": "grid"
      },
      "ui_uidl_complete": {
        "component_name": "AddMcpServerModal",
        "file_path": "frontend/src/modals/addMcpServerModal/index.tsx",
        "component_type": "modal",
        "summary": "TODO IMPLEMENT FORM LOGIC",
        "jsx_return_statement": "<BaseModal\n      open={open}\n      setOpen={setOpen}\n      size=\"x-small\"\n      onSubmit={submitForm}\n      className=\"!p-0\"\n    >\n      <BaseModal.Trigger>{children}</BaseModal.Trigger>\n      <BaseModal.Content className=\"flex flex-col justify-between overflow-hidden\">\n        <div className=\"flex h-full w-full flex-col overflow-hidden\">\n          <div className=\"flex flex-col gap-3 p-4 tracking-normal\">\n            <div className=\"flex items-center gap-2 text-sm font-medium\">\n              <ForwardedIconComponent\n                name=\"Mcp\"\n                className=\"h-4 w-4 text-primary\"\n                aria-hidden=\"true\"\n              />\n              {initialData ? \"Update MCP Server\" : \"Add MCP Server\"}\n            </div>\n            <span className=\"text-mmd font-normal text-muted-foreground\">\n              Save MCP Servers. Manage added servers in{\" \"}\n              <CustomLink className=\"underline\" to=\"/settings/mcp-servers\">\n                settings\n              </CustomLink>\n              .\n            </span>\n          </div>\n          <div className=\"flex h-full w-full flex-col gap-4 overflow-hidden\">\n            <Tabs\n              defaultValue={type}\n              onValueChange={changeType}\n              className=\"w-full\"\n            >\n              <div className=\"px-4\">\n                <TabsList className=\"mb-4 grid w-full grid-cols-3\">\n                  <TabsTrigger\n                    disabled={!!initialData && type !== \"JSON\"}\n                    data-testid=\"json-tab\"\n                    value=\"JSON\"\n                  >\n                    JSON\n                  </TabsTrigger>\n                  <TabsTrigger\n                    data-testid=\"stdio-tab\"\n                    disabled={!!initialData && type !== \"STDIO\"}\n                    value=\"STDIO\"\n                  >\n                    STDIO\n                  </TabsTrigger>\n                  <TabsTrigger\n                    data-testid=\"sse-tab\"\n                    disabled={!!initialData && type !== \"SSE\"}\n                    value=\"SSE\"\n                  >\n                    SSE\n                  </TabsTrigger>\n                </TabsList>\n              </div>\n              <div\n                className=\"relative flex max-h-[280px] min-h-[280px] w-full flex-1 flex-col gap-2 overflow-y-auto border-y p-4 pt-2\"\n                id=\"global-variable-modal-inputs\"\n              >\n                {error && (\n                  <ShadTooltip content={error}>\n                    <div\n                      className={cn(\n                        \"absolute right-4 top-4 truncate text-xs font-medium text-red-500\",\n                        type === \"JSON\" ? \"w-3/5\" : \"w-4/5\",\n                      )}\n                    >\n                      {error}\n                    </div>\n                  </ShadTooltip>\n                )}\n                <TabsContent value=\"JSON\">\n                  <div className=\"flex flex-col gap-2\">\n                    <Label className=\"!text-mmd\">Paste in JSON config</Label>\n                    <Textarea\n                      value={jsonValue}\n                      data-testid=\"json-input\"\n                      onChange={(e) => setJsonValue(e.target.value)}\n                      className=\"min-h-[225px] font-mono text-mmd\"\n                      placeholder=\"Paste in JSON config to add server\"\n                      disabled={isPending}\n                    />\n                  </div>\n                </TabsContent>\n                <TabsContent value=\"STDIO\">\n                  <div className=\"flex flex-col gap-4\">\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"flex items-start gap-1 !text-mmd\">\n                        Name <span className=\"text-red-500\">*</span>\n                      </Label>\n                      <Input\n                        value={stdioName}\n                        onChange={(e) => setStdioName(e.target.value)}\n                        placeholder=\"Type server name...\"\n                        data-testid=\"stdio-name-input\"\n                        disabled={isPending}\n                      />\n                    </div>\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"flex items-start gap-1 !text-mmd\">\n                        Command<span className=\"text-red-500\">*</span>\n                      </Label>\n                      <Input\n                        value={stdioCommand}\n                        onChange={(e) => setStdioCommand(e.target.value)}\n                        placeholder=\"Type command...\"\n                        data-testid=\"stdio-command-input\"\n                        disabled={isPending}\n                      />\n                    </div>\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"!text-mmd\">Arguments</Label>\n                      <InputListComponent\n                        value={stdioArgs}\n                        handleOnNewValue={({ value }) => setStdioArgs(value)}\n                        disabled={isPending}\n                        placeholder=\"Type argument...\"\n                        listAddLabel=\"Add Argument\"\n                        editNode={false}\n                        id=\"stdio-args\"\n                        data-testid=\"stdio-args-input\"\n                      />\n                    </div>\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"!text-mmd\">Environment Variables</Label>\n                      <IOKeyPairInput\n                        value={stdioEnv}\n                        onChange={setStdioEnv}\n                        duplicateKey={false}\n                        isList={true}\n                        isInputField={true}\n                        testId=\"stdio-env\"\n                      />\n                    </div>\n                  </div>\n                </TabsContent>\n                <TabsContent value=\"SSE\">\n                  <div className=\"flex flex-col gap-4\">\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"flex items-start gap-1 !text-mmd\">\n                        Name<span className=\"text-red-500\">*</span>\n                      </Label>\n                      <Input\n                        value={sseName}\n                        onChange={(e) => setSseName(e.target.value)}\n                        placeholder=\"Name\"\n                        data-testid=\"sse-name-input\"\n                        disabled={isPending}\n                      />\n                    </div>\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"flex items-start gap-1 !text-mmd\">\n                        SSE URL<span className=\"text-red-500\">*</span>\n                      </Label>\n                      <Input\n                        value={sseUrl}\n                        onChange={(e) => setSseUrl(e.target.value)}\n                        placeholder=\"SSE URL\"\n                        data-testid=\"sse-url-input\"\n                        disabled={isPending}\n                      />\n                    </div>\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"!text-mmd\">Headers</Label>\n                      <IOKeyPairInput\n                        value={sseHeaders}\n                        onChange={setSseHeaders}\n                        duplicateKey={false}\n                        isList={true}\n                        isInputField={true}\n                        testId=\"sse-headers\"\n                      />\n                    </div>\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"!text-mmd\">Environment Variables</Label>\n                      <IOKeyPairInput\n                        value={sseEnv}\n                        onChange={setSseEnv}\n                        duplicateKey={false}\n                        isList={true}\n                        isInputField={true}\n                        testId=\"sse-env\"\n                      />\n                    </div>\n                  </div>\n                </TabsContent>\n              </div>\n            </Tabs>\n          </div>\n        </div>\n        <div className=\"flex justify-end gap-2 p-4\">\n          <Button variant=\"outline\" size=\"sm\" onClick={() => setOpen(false)}>\n            <span className=\"text-mmd font-normal\">Cancel</span>\n          </Button>\n          <Button\n            size=\"sm\"\n            onClick={submitForm}\n            data-testid=\"add-mcp-server-button\"\n            loading={isPending}\n          >\n            <span className=\"text-mmd\">\n              {initialData ? \"Update Server\" : \"Add Server\"}\n            </span>\n          </Button>\n        </div>\n      </BaseModal.Content>\n    </BaseModal>",
        "jsx_simplified": "<BaseModal\n      open={open}\n      setOpen={setOpen}\n      size=\"x-small\"\n      onSubmit={submitForm}\n      className=\"!p-0\"\n    >\n      <BaseModal.Trigger>{children}</BaseModal.Trigger>\n      <BaseModal.Content className=\"flex flex-col justify-between overflow-hidden\">\n        <div className=\"flex h-full w-full flex-col overflow-hidden\">\n          <div className=\"flex flex-col gap-3 p-4 tracking-normal\">\n            <div className=\"flex items-center gap-2 text-sm font-medium\">\n              <ForwardedIconComponent\n                name=\"Mcp\"\n                className=\"h-4 w-4 text-primary\"\n                aria-hidden=\"true\"\n              />\n              {initialData ? \"Update MCP Server\" : \"Add MCP Server\"}\n            </div>\n            <span className=\"text-mmd font-normal text-muted-foreground\">\n              Save MCP Servers. Manage added servers in{\" \"}\n              <CustomLink className=\"underline\" to=\"/settings/mcp-servers\">\n                settings\n              </CustomLink>\n              .\n            </span>\n          </div>\n          <div className=\"flex h-full w-full flex-col gap-4 overflow-hidden\">\n            <Tabs\n              defaultValue={type}\n              onValueChange={changeType}\n              className=\"w-full\"\n            >\n              <div className=\"px-4\">\n                <TabsList className=\"mb-4 grid w-full grid-cols-3\">\n                  <TabsTrigger\n                    disabled={!!initialData && type !== \"JSON\"}\n                    data-testid=\"json-tab\"\n                    value=\"JSON\"\n                  >\n                    JSON\n                  </TabsTrigger>\n                  <TabsTrigger\n                    data-testid=\"stdio-tab\"\n                    disabled={!!initialData && type !== \"STDIO\"}\n                    value=\"STDIO\"\n                  >\n                    STDIO\n                  </TabsTrigger>\n                  <TabsTrigger\n                    data-testid=\"sse-tab\"\n                    disabled={!!initialData && type !== \"SSE\"}\n                    value=\"SSE\"\n                  >\n                    SSE\n                  </TabsTrigger>\n                </TabsList>\n              </div>\n              <div\n                className=\"relative flex max-h-[280px] min-h-[280px] w-full flex-1 flex-col gap-2 overflow-y-auto border-y p-4 pt-2\"\n                id=\"global-variable-modal-inputs\"\n              >\n                {error && (\n                  <ShadTooltip content={error}>\n                    <div\n                      className={/* complex expression */}\n                    >\n                      {error}\n                    </div>\n                  </ShadTooltip>\n                )}\n                <TabsContent value=\"JSON\">\n                  <div className=\"flex flex-col gap-2\">\n                    <Label className=\"!text-mmd\">Paste in JSON config</Label>\n                    <Textarea\n                      value={jsonValue}\n                      data-testid=\"json-input\"\n                      onChange={(e) => setJsonValue(e.target.value)}\n                      className=\"min-h-[225px] font-mono text-mmd\"\n                      placeholder=\"Paste in JSON config to add server\"\n                      disabled={isPending}\n                    />\n                  </div>\n                </TabsContent>\n                <TabsContent value=\"STDIO\">\n                  <div className=\"flex flex-col gap-4\">\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"flex items-start gap-1 !text-mmd\">\n                        Name <span className=\"text-red-500\">*</span>\n                      </Label>\n                      <Input\n                        value={stdioName}\n                        onChange={(e) => setStdioName(e.target.value)}\n                        placeholder=\"Type server name...\"\n                        data-testid=\"stdio-name-input\"\n                        disabled={isPending}\n                      />\n                    </div>\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"flex items-start gap-1 !text-mmd\">\n                        Command<span className=\"text-red-500\">*</span>\n                      </Label>\n                      <Input\n                        value={stdioCommand}\n                        onChange={(e) => setStdioCommand(e.target.value)}\n                        placeholder=\"Type command...\"\n                        data-testid=\"stdio-command-input\"\n                        disabled={isPending}\n                      />\n                    </div>\n                    <div className=\"flex flex-col gap-2\">\n                      <Label className=\"!text-mmd\">Arguments</Label>\n                      <InputListComponent\n                        value={stdioArgs}\n                        handleOnNewValue={({ value }) => setStdioArgs(value)}\n                        disabled={isPending}\n                        placeholder=\"Type argument...\"\n                        listA",
        "imports": [
          {
            "source": "@tanstack/react-query",
            "items": [
              "useIsFetching",
              "usePrefetchQuery",
              "useQueryClient",
              ""
            ],
            "type": "named"
          },
          {
            "source": "react",
            "items": [
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "ForwardedIconComponent"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/shadTooltipComponent",
            "items": [
              "ShadTooltip"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/parameterRenderComponent/components/inputListComponent",
            "items": [
              "InputListComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/input",
            "items": [
              "Input"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/label",
            "items": [
              "Label"
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/tabs-button",
            "items": [
              "Tabs",
              "TabsContent",
              "TabsList",
              "TabsTrigger",
              ""
            ],
            "type": "named"
          },
          {
            "source": "@/components/ui/textarea",
            "items": [
              "Textarea"
            ],
            "type": "named"
          },
          {
            "source": "@/constants/constants",
            "items": [
              "MAX_MCP_SERVER_NAME_LENGTH"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/mcp/use-add-mcp-server",
            "items": [
              "useAddMCPServer"
            ],
            "type": "named"
          },
          {
            "source": "@/controllers/API/queries/mcp/use-patch-mcp-server",
            "items": [
              "usePatchMCPServer"
            ],
            "type": "named"
          },
          {
            "source": "@/customization/components/custom-link",
            "items": [
              "CustomLink"
            ],
            "type": "named"
          },
          {
            "source": "@/modals/baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "@/modals/IOModal/components/IOFieldView/components/key-pair-input",
            "items": [
              "IOKeyPairInput"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/mcpUtils",
            "items": [
              "extractMcpServersFromJson"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/stringManipulation",
            "items": [
              "parseString"
            ],
            "type": "named"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "cn"
            ],
            "type": "named"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "Button",
          "CustomLink",
          "ForwardedIconComponent",
          "IOKeyPairInput",
          "Input",
          "InputListComponent",
          "Label",
          "ShadTooltip",
          "Tabs",
          "TabsContent",
          "TabsList",
          "TabsTrigger",
          "Textarea"
        ],
        "tailwind_classes_used": [
          "!p-0",
          "!text-mmd",
          "border-y",
          "cn(",
          "flex",
          "flex-1",
          "flex-col",
          "font-medium",
          "font-mono",
          "font-normal",
          "gap-1",
          "gap-2",
          "gap-3",
          "gap-4",
          "grid",
          "grid-cols-3",
          "h-4",
          "h-full",
          "items-center",
          "items-start",
          "justify-between",
          "justify-end",
          "max-h-[280px]",
          "mb-4",
          "min-h-[225px]",
          "min-h-[280px]",
          "overflow-hidden",
          "overflow-y-auto",
          "p-4",
          "pt-2",
          "px-4",
          "relative",
          "text-mmd",
          "text-muted-foreground",
          "text-primary",
          "text-red-500",
          "text-sm",
          "tracking-normal",
          "underline",
          "w-4",
          "w-full"
        ],
        "state_props_referenced": [
          "changeType",
          "children",
          "error",
          "false",
          "isPending",
          "jsonValue",
          "open",
          "setOpen",
          "setSseEnv",
          "setSseHeaders",
          "setStdioEnv",
          "sseEnv",
          "sseHeaders",
          "sseName",
          "sseUrl",
          "stdioArgs",
          "stdioCommand",
          "stdioEnv",
          "stdioName",
          "submitForm"
        ],
        "file_size_lines": 449,
        "jsx_size_chars": 8806
      }
    },
    {
      "id": "ni0063",
      "type": "interface",
      "name": "ComponentTextModal",
      "path": "frontend/src/modals/textAreaModal/index.tsx",
      "category": "modal",
      "description": "interface node: ComponentTextModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "ComponentTextModal",
        "path": "frontend/src/modals/textAreaModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../../components/ui/textarea",
              "items": [
                "Textarea"
              ]
            },
            {
              "source": "../../constants/constants",
              "items": [
                "EDIT_TEXT_PLACEHOLDER",
                "TEXT_DIALOG_TITLE",
                ""
              ]
            },
            {
              "source": "../../utils/reactflowUtils",
              "items": [
                "handleKeyDown"
              ]
            },
            {
              "source": "../../utils/utils",
              "items": [
                "classNames"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "value": {
            "type": "any",
            "optional": false
          },
          "setValue": {
            "type": "any",
            "optional": false
          },
          "children": {
            "type": "any",
            "optional": false
          },
          "disabled": {
            "type": "any",
            "optional": false
          },
          "readonly = false": {
            "type": "any",
            "optional": false
          },
          "password": {
            "type": "any",
            "optional": false
          },
          "changeVisibility": {
            "type": "any",
            "optional": false
          },
          "onCloseModal": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "modalOpen": {
            "type": "any",
            "defaultValue": "false"
          },
          "inputValue": {
            "type": "any",
            "defaultValue": "value"
          }
        },
        "refs": {
          "textRef": {
            "type": "HTMLTextAreaElement",
            "initialValue": "null"
          }
        },
        "effects": [
          {
            "dependencies": [
              "value",
              "modalOpen"
            ],
            "description": "Effect with 2 dependencies"
          },
          {
            "dependencies": [
              "modalOpen"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BaseModal",
            "IconComponent",
            "HTMLTextAreaElement",
            "Textarea",
            "Button"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "ComponentTextModal",
        "file_path": "frontend/src/modals/textAreaModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full items-start gap-3"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex"
              },
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-6 w-6 pr-1 text-primary"
              },
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pl-2"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "button",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-6 w-6 cursor-pointer text-primary"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "classNames("
              },
              "category": "html"
            },
            {
              "type": "Textarea",
              "attributes": {
                "className": "form-input h-full w-full resize-none overflow-auto rounded-lg focus-visible:ring-1",
                "value": "inputValue"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full shrink-0 items-end justify-end"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "disabled": true
              },
              "category": "component"
            }
          ],
          "components": [
            "BaseModal",
            "IconComponent",
            "Textarea",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button",
            "Textarea"
          ],
          "custom": [
            "HTMLTextAreaElement",
            "BaseModal",
            "IconComponent"
          ],
          "html": [
            "div",
            "span",
            "button"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "form-input",
            "classNames(",
            "rounded-lg",
            "pl-2",
            "focus-visible:ring-1",
            "w-full",
            "overflow-auto",
            "items-start",
            "shrink-0",
            "w-6",
            "h-6",
            "cursor-pointer",
            "resize-none",
            "pr-1",
            "text-primary",
            "flex",
            "h-full",
            "justify-end",
            "gap-3",
            "items-end"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {},
              "type": "button"
            },
            {
              "attributes": {
                "disabled": true
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "modal"
      },
      "ui_uidl_complete": {
        "component_name": "ComponentTextModal",
        "file_path": "frontend/src/modals/textAreaModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for componenttext",
        "jsx_return_statement": "<BaseModal\n      onChangeOpenModal={(open) => {}}\n      open={modalOpen}\n      setOpen={setModalOpen}\n      size=\"x-large\"\n    >\n      <BaseModal.Trigger disable={disabled} asChild>\n        {children}\n      </BaseModal.Trigger>\n      <BaseModal.Header>\n        <div className=\"flex w-full items-start gap-3\">\n          <div className=\"flex\">\n            <IconComponent\n              name={\"FileText\"}\n              className=\"h-6 w-6 pr-1 text-primary\"\n              aria-hidden=\"true\"\n            />\n            <span className=\"pl-2\" data-testid=\"modal-title\">\n              {TEXT_DIALOG_TITLE}\n            </span>\n          </div>\n          {password !== undefined && (\n            <div>\n              <button\n                onClick={() => {\n                  if (changeVisibility) changeVisibility();\n                }}\n              >\n                <IconComponent\n                  name={password ? \"Eye\" : \"EyeOff\"}\n                  className=\"h-6 w-6 cursor-pointer text-primary\"\n                />\n              </button>\n            </div>\n          )}\n        </div>\n      </BaseModal.Header>\n      <BaseModal.Content overflowHidden>\n        <div className={classNames(\"flex h-full w-full rounded-lg border\")}>\n          <Textarea\n            password={password}\n            ref={textRef}\n            className=\"form-input h-full w-full resize-none overflow-auto rounded-lg focus-visible:ring-1\"\n            value={inputValue}\n            onChange={(event) => {\n              setInputValue(event.target.value);\n            }}\n            placeholder={EDIT_TEXT_PLACEHOLDER}\n            onKeyDown={(e) => {\n              handleKeyDown(e, value, \"\");\n            }}\n            readOnly={readonly}\n            id={\"text-area-modal\"}\n            data-testid={\"text-area-modal\"}\n          />\n        </div>\n      </BaseModal.Content>\n      <BaseModal.Footer>\n        <div className=\"flex w-full shrink-0 items-end justify-end\">\n          <Button\n            data-testid=\"genericModalBtnSave\"\n            id=\"genericModalBtnSave\"\n            disabled={readonly}\n            onClick={() => {\n              setValue(inputValue);\n              setModalOpen(false);\n            }}\n            type=\"submit\"\n          >\n            Finish Editing\n          </Button>\n        </div>\n      </BaseModal.Footer>\n    </BaseModal>",
        "jsx_simplified": "<BaseModal\n      onChangeOpenModal={handleClick}\n      open={modalOpen}\n      setOpen={setModalOpen}\n      size=\"x-large\"\n    >\n      <BaseModal.Trigger disable={disabled} asChild>\n        {children}\n      </BaseModal.Trigger>\n      <BaseModal.Header>\n        <div className=\"flex w-full items-start gap-3\">\n          <div className=\"flex\">\n            <IconComponent\n              name={\"FileText\"}\n              className=\"h-6 w-6 pr-1 text-primary\"\n              aria-hidden=\"true\"\n            />\n            <span className=\"pl-2\" data-testid=\"modal-title\">\n              {TEXT_DIALOG_TITLE}\n            </span>\n          </div>\n          {/* complex expression */}\n              >\n                <IconComponent\n                  name={password ? \"Eye\" : \"EyeOff\"}\n                  className=\"h-6 w-6 cursor-pointer text-primary\"\n                />\n              </button>\n            </div>\n          )}\n        </div>\n      </BaseModal.Header>\n      <BaseModal.Content overflowHidden>\n        <div className={classNames(\"flex h-full w-full rounded-lg border\")}>\n          <Textarea\n            password={password}\n            ref={textRef}\n            className=\"form-input h-full w-full resize-none overflow-auto rounded-lg focus-visible:ring-1\"\n            value={inputValue}\n            onChange={handleClick}\n            placeholder={EDIT_TEXT_PLACEHOLDER}\n            onKeyDown={handleClick}\n            readOnly={readonly}\n            id={\"text-area-modal\"}\n            data-testid={\"text-area-modal\"}\n          />\n        </div>\n      </BaseModal.Content>\n      <BaseModal.Footer>\n        <div className=\"flex w-full shrink-0 items-end justify-end\">\n          <Button\n            data-testid=\"genericModalBtnSave\"\n            id=\"genericModalBtnSave\"\n            disabled={readonly}\n            onClick={handleClick}\n            type=\"submit\"\n          >\n            Finish Editing\n          </Button>\n        </div>\n      </BaseModal.Footer>\n    </BaseModal>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../../components/ui/textarea",
            "items": [
              "Textarea"
            ],
            "type": "named"
          },
          {
            "source": "../../constants/constants",
            "items": [
              "EDIT_TEXT_PLACEHOLDER",
              "TEXT_DIALOG_TITLE",
              ""
            ],
            "type": "named"
          },
          {
            "source": "../../utils/reactflowUtils",
            "items": [
              "handleKeyDown"
            ],
            "type": "named"
          },
          {
            "source": "../../utils/utils",
            "items": [
              "classNames"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "Button",
          "IconComponent",
          "Textarea"
        ],
        "tailwind_classes_used": [
          "classNames(",
          "cursor-pointer",
          "flex",
          "focus-visible:ring-1",
          "form-input",
          "gap-3",
          "h-6",
          "h-full",
          "items-end",
          "items-start",
          "justify-end",
          "overflow-auto",
          "pl-2",
          "pr-1",
          "resize-none",
          "rounded-lg",
          "shrink-0",
          "text-primary",
          "w-6",
          "w-full"
        ],
        "state_props_referenced": [
          "EDIT_TEXT_PLACEHOLDER",
          "TEXT_DIALOG_TITLE",
          "children",
          "disabled",
          "inputValue",
          "modalOpen",
          "password",
          "readonly",
          "setModalOpen",
          "textRef"
        ],
        "file_size_lines": 114,
        "jsx_size_chars": 2328
      }
    },
    {
      "id": "ni0064",
      "type": "interface",
      "name": "DictAreaModal",
      "path": "frontend/src/modals/dictAreaModal/index.tsx",
      "category": "modal",
      "description": "interface node: DictAreaModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "DictAreaModal",
        "path": "frontend/src/modals/dictAreaModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useEffect",
                "useRef",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "@/stores/alertStore",
              "items": [
                "useAlertStore"
              ]
            }
          ],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/core/jsonEditor",
              "items": [
                "JsonEditor"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          },
          "onChange": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          },
          "disabled = false": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "open": {
            "type": "any",
            "defaultValue": "false"
          }
        },
        "refs": {
          "jsonEditorRef": {
            "type": "VanillaJsonEditor | null",
            "initialValue": "null"
          }
        },
        "effects": [],
        "contexts": [],
        "customHooks": [
          "useAlertStore"
        ],
        "eventHandlers": {
          "handleSubmit": {
            "type": "arrow_function",
            "async": false
          },
          "handleChangeType": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "span",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BaseModal",
            "JsonEditor",
            "IconComponent",
            "VanillaJsonEditor"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "DictAreaModal",
        "file_path": "frontend/src/modals/dictAreaModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {},
              "category": "html"
            }
          ],
          "components": [],
          "ui_patterns": []
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "VanillaJsonEditor",
            "BaseModal",
            "IconComponent",
            "JsonEditor"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "underline",
            "w-full",
            "cursor-pointer",
            "flex-col",
            "overflow-visible",
            "text-primary",
            "flex",
            "h-auto",
            "min-h-[500px]",
            "overflow-auto",
            "h-full",
            "transition-all",
            "w-6",
            "h-6",
            "pr-2",
            "pl-1",
            "h-[500px]"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "DictAreaModal",
        "file_path": "frontend/src/modals/dictAreaModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for dictarea",
        "jsx_return_statement": "<span>\n        Customize your dictionary, adding or editing key-value pairs as needed.\n        Supports adding new{\" \"}\n        <span\n          onClick={() => handleChangeType(\"object\")}\n          className=\"cursor-pointer underline\"\n        >\n          objects &#123; &#125;\n        </span>{\" \"}\n        or{\" \"}\n        <span\n          onClick={() => handleChangeType(\"array\")}\n          className=\"cursor-pointer underline\"\n        >\n          arrays [].\n        </span>\n      </span>",
        "jsx_simplified": "<span>\n        Customize your dictionary, adding or editing key-value pairs as needed.\n        Supports adding new{\" \"}\n        <span\n          onClick={() => handleChangeType(\"object\")}\n          className=\"cursor-pointer underline\"\n        >\n          objects &#123; &#125;\n        </span>{\" \"}\n        or{\" \"}\n        <span\n          onClick={() => handleChangeType(\"array\")}\n          className=\"cursor-pointer underline\"\n        >\n          arrays [].\n        </span>\n      </span>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useEffect",
              "useRef",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/alertStore",
            "items": [
              "useAlertStore"
            ],
            "type": "default"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/core/jsonEditor",
            "items": [
              "JsonEditor"
            ],
            "type": "default"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [],
        "tailwind_classes_used": [
          "cursor-pointer",
          "underline"
        ],
        "state_props_referenced": [],
        "file_size_lines": 136,
        "jsx_size_chars": 486
      }
    },
    {
      "id": "ni0065",
      "type": "interface",
      "name": "TextModal",
      "path": "frontend/src/modals/textModal/index.tsx",
      "category": "modal",
      "description": "interface node: TextModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "TextModal",
        "path": "frontend/src/modals/textModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useState"
              ]
            }
          ],
          "libraries": [],
          "local": [
            {
              "source": "../../components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "../../components/ui/button",
              "items": [
                "Button"
              ]
            },
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            },
            {
              "source": "./components/textEditorArea",
              "items": [
                "TextEditorArea"
              ]
            }
          ]
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          },
          "value": {
            "type": "any",
            "optional": false
          },
          "setValue": {
            "type": "any",
            "optional": false
          },
          "editable = false": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "open": {
            "type": "any",
            "defaultValue": "false"
          },
          "internalValue": {
            "type": "any",
            "defaultValue": "value"
          }
        },
        "refs": {},
        "effects": [],
        "contexts": [],
        "customHooks": [],
        "eventHandlers": {
          "handleEscapeKeyDown": {
            "type": "arrow_function",
            "async": false
          }
        },
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "Button",
            "BaseModal",
            "IconComponent",
            "TextEditorArea"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "TextModal",
        "file_path": "frontend/src/modals/textModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {
                "onEscapeKeyDown": "handleEscapeKeyDown"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {
                "className": "h-full"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pr-2"
              },
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "h-6 w-6 pl-1 text-primary"
              },
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-full w-full flex-col transition-all"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "h-[370px]"
              },
              "category": "html"
            },
            {
              "type": "TextEditorArea",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full justify-end gap-2 pt-2"
              },
              "category": "html"
            },
            {
              "type": "Button",
              "attributes": {
                "className": "flex gap-2 px-3"
              },
              "category": "component"
            }
          ],
          "components": [
            "TextEditorArea",
            "BaseModal",
            "IconComponent",
            "Button"
          ],
          "ui_patterns": [
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [
            "Button"
          ],
          "custom": [
            "BaseModal",
            "IconComponent",
            "TextEditorArea"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "w-full",
            "flex-col",
            "pt-2",
            "text-primary",
            "flex",
            "gap-2",
            "h-full",
            "transition-all",
            "px-3",
            "w-6",
            "h-6",
            "pr-2",
            "justify-end",
            "pl-1",
            "h-[370px]"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [
            "consistent-spacing"
          ],
          "color_scheme": [
            "color-theming"
          ]
        },
        "interactive_elements": {
          "buttons": [
            {
              "attributes": {
                "className": "flex gap-2 px-3"
              },
              "type": "button"
            }
          ],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [],
        "primary_layout": "flexbox"
      },
      "ui_uidl_complete": {
        "component_name": "TextModal",
        "file_path": "frontend/src/modals/textModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for text",
        "jsx_return_statement": "<BaseModal\n      size=\"medium-h-full\"\n      open={open}\n      setOpen={setOpen}\n      onEscapeKeyDown={handleEscapeKeyDown}\n    >\n      <BaseModal.Trigger className=\"h-full\">{children}</BaseModal.Trigger>\n      <BaseModal.Header description={\"\"}>\n        <span className=\"pr-2\">View Text</span>\n        <IconComponent\n          name=\"Type\"\n          className=\"h-6 w-6 pl-1 text-primary\"\n          aria-hidden=\"true\"\n        />\n      </BaseModal.Header>\n      <BaseModal.Content>\n        <div className=\"flex h-full w-full flex-col transition-all\">\n          <div className=\"h-[370px]\">\n            <TextEditorArea\n              readonly={!editable}\n              onChange={(text) => setInternalValue(text)}\n              value={internalValue}\n              resizable={false}\n              left={false}\n            />\n          </div>\n        </div>\n      </BaseModal.Content>\n      <BaseModal.Footer>\n        <div className=\"flex w-full justify-end gap-2 pt-2\">\n          {editable && (\n            <Button\n              className=\"flex gap-2 px-3\"\n              onClick={() => {\n                setValue(internalValue);\n                setOpen(false);\n              }}\n            >\n              Save\n            </Button>\n          )}\n        </div>\n      </BaseModal.Footer>\n    </BaseModal>",
        "jsx_simplified": "<BaseModal\n      size=\"medium-h-full\"\n      open={open}\n      setOpen={setOpen}\n      onEscapeKeyDown={handleEscapeKeyDown}\n    >\n      <BaseModal.Trigger className=\"h-full\">{children}</BaseModal.Trigger>\n      <BaseModal.Header description={\"\"}>\n        <span className=\"pr-2\">View Text</span>\n        <IconComponent\n          name=\"Type\"\n          className=\"h-6 w-6 pl-1 text-primary\"\n          aria-hidden=\"true\"\n        />\n      </BaseModal.Header>\n      <BaseModal.Content>\n        <div className=\"flex h-full w-full flex-col transition-all\">\n          <div className=\"h-[370px]\">\n            <TextEditorArea\n              readonly={!editable}\n              onChange={(text) => setInternalValue(text)}\n              value={internalValue}\n              resizable={false}\n              left={false}\n            />\n          </div>\n        </div>\n      </BaseModal.Content>\n      <BaseModal.Footer>\n        <div className=\"flex w-full justify-end gap-2 pt-2\">\n          {/* complex expression */}\n            >\n              Save\n            </Button>\n          )}\n        </div>\n      </BaseModal.Footer>\n    </BaseModal>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "../../components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "../../components/ui/button",
            "items": [
              "Button"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          },
          {
            "source": "./components/textEditorArea",
            "items": [
              "TextEditorArea"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "Button",
          "IconComponent",
          "TextEditorArea"
        ],
        "tailwind_classes_used": [
          "flex",
          "flex-col",
          "gap-2",
          "h-6",
          "h-[370px]",
          "h-full",
          "justify-end",
          "pl-1",
          "pr-2",
          "pt-2",
          "px-3",
          "text-primary",
          "transition-all",
          "w-6",
          "w-full"
        ],
        "state_props_referenced": [
          "children",
          "false",
          "handleEscapeKeyDown",
          "internalValue",
          "open",
          "setOpen"
        ],
        "file_size_lines": 78,
        "jsx_size_chars": 1296
      }
    },
    {
      "id": "ni0066",
      "type": "interface",
      "name": "FlowLogsModal",
      "path": "frontend/src/modals/flowLogsModal/index.tsx",
      "category": "modal",
      "description": "interface node: FlowLogsModal (Modal component)",
      "uidl_definition_conceptual": {
        "name": "FlowLogsModal",
        "path": "frontend/src/modals/flowLogsModal/index.tsx",
        "imports": {
          "react": [
            {
              "source": "react",
              "items": [
                "useCallback",
                "useEffect",
                "useState"
              ]
            }
          ],
          "libraries": [
            {
              "source": "react-router-dom",
              "items": [
                "useSearchParams"
              ]
            },
            {
              "source": "@/components/common/genericIconComponent",
              "items": [
                "IconComponent"
              ]
            },
            {
              "source": "@/components/common/paginatorComponent",
              "items": [
                "PaginatorComponent"
              ]
            },
            {
              "source": "@/components/core/parameterRenderComponent/components/tableComponent",
              "items": [
                "TableComponent"
              ]
            },
            {
              "source": "@/controllers/API/queries/transactions",
              "items": [
                "useGetTransactionsQuery"
              ]
            },
            {
              "source": "@/stores/flowsManagerStore",
              "items": [
                "useFlowsManagerStore"
              ]
            },
            {
              "source": "@/utils/utils",
              "items": [
                "convertUTCToLocalTimezone"
              ]
            }
          ],
          "local": [
            {
              "source": "../baseModal",
              "items": [
                "BaseModal"
              ]
            }
          ]
        },
        "propDefinitions": {
          "children": {
            "type": "any",
            "optional": false
          }
        },
        "stateDefinitions": {
          "open": {
            "type": "any",
            "defaultValue": "false"
          },
          "pageIndex": {
            "type": "any",
            "defaultValue": "1"
          },
          "pageSize": {
            "type": "any",
            "defaultValue": "20"
          },
          "rows": {
            "type": "any",
            "defaultValue": "[]"
          }
        },
        "refs": {},
        "effects": [
          {
            "dependencies": [
              "open"
            ],
            "description": "Effect with 1 dependencies"
          }
        ],
        "contexts": [],
        "customHooks": [
          "useFlowsManagerStore",
          "useGetTransactionsQuery"
        ],
        "eventHandlers": {},
        "jsx": {
          "hasReturn": true,
          "rootElement": "BaseModal",
          "conditionalRendering": [],
          "loops": [],
          "components": [
            "BaseModal",
            "IconComponent",
            "PaginatorComponent",
            "ColDef",
            "TableComponent"
          ]
        }
      },
      "ui_uidl": {
        "component_name": "FlowLogsModal",
        "file_path": "frontend/src/modals/flowLogsModal/index.tsx",
        "jsx_structure": {
          "elements": [
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex w-full justify-between"
              },
              "category": "html"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-fit w-32 items-center"
              },
              "category": "html"
            },
            {
              "type": "span",
              "attributes": {
                "className": "pr-2"
              },
              "category": "html"
            },
            {
              "type": "IconComponent",
              "attributes": {
                "className": "mr-2 h-4 w-4"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex h-fit w-32 items-center"
              },
              "category": "html"
            },
            {
              "type": "BaseModal",
              "attributes": {},
              "category": "component"
            },
            {
              "type": "TableComponent",
              "attributes": {
                "className": "h-max-full h-full w-full"
              },
              "category": "component"
            },
            {
              "type": "div",
              "attributes": {
                "className": "flex justify-end px-3 py-4"
              },
              "category": "html"
            },
            {
              "type": "PaginatorComponent",
              "attributes": {},
              "category": "component"
            }
          ],
          "components": [
            "TableComponent",
            "BaseModal",
            "IconComponent",
            "PaginatorComponent"
          ],
          "ui_patterns": [
            {
              "type": "table",
              "description": "Data table display"
            },
            {
              "type": "grid",
              "description": "Grid layout structure"
            },
            {
              "type": "flex",
              "description": "Flexbox layout"
            },
            {
              "type": "modal",
              "description": "Modal/Dialog component"
            },
            {
              "type": "tabs",
              "description": "Tabbed interface"
            }
          ]
        },
        "ui_components": {
          "shadcn": [],
          "custom": [
            "Array",
            "ColDef",
            "BaseModal",
            "IconComponent",
            "TableComponent",
            "PaginatorComponent"
          ],
          "html": [
            "div",
            "span"
          ]
        },
        "styling": {
          "tailwind_classes": [
            "h-fit",
            "w-full",
            "w-4",
            "flex",
            "py-4",
            "w-32",
            "mr-2",
            "h-max-full",
            "h-full",
            "px-3",
            "pr-2",
            "h-4",
            "justify-end",
            "justify-between",
            "items-center"
          ],
          "layout_patterns": [
            "flexbox"
          ],
          "spacing_patterns": [],
          "color_scheme": []
        },
        "interactive_elements": {
          "buttons": [],
          "inputs": [],
          "forms": [],
          "links": []
        },
        "data_display_patterns": [
          {
            "type": "table",
            "columns": [],
            "has_pagination": true
          },
          {
            "type": "dynamic_list",
            "arrays": [
              "rows",
              "columns"
            ],
            "description": "Dynamic rendering of 2 lists"
          }
        ],
        "primary_layout": "table"
      },
      "ui_uidl_complete": {
        "component_name": "FlowLogsModal",
        "file_path": "frontend/src/modals/flowLogsModal/index.tsx",
        "component_type": "modal",
        "summary": "Modal dialog for flowlogs",
        "jsx_return_statement": "<BaseModal open={open} setOpen={setOpen} size=\"x-large\">\n      <BaseModal.Trigger asChild>{children}</BaseModal.Trigger>\n      <BaseModal.Header description=\"Inspect component executions.\">\n        <div className=\"flex w-full justify-between\">\n          <div className=\"flex h-fit w-32 items-center\">\n            <span className=\"pr-2\">Logs</span>\n            <IconComponent name=\"ScrollText\" className=\"mr-2 h-4 w-4\" />\n          </div>\n          <div className=\"flex h-fit w-32 items-center\"></div>\n        </div>\n      </BaseModal.Header>\n      <BaseModal.Content>\n        <TableComponent\n          key={\"Executions\"}\n          readOnlyEdit\n          className=\"h-max-full h-full w-full\"\n          pagination={false}\n          columnDefs={columns}\n          autoSizeStrategy={{ type: \"fitGridWidth\" }}\n          rowData={rows}\n          headerHeight={rows.length === 0 ? 0 : undefined}\n        ></TableComponent>\n        {!isLoading && (data?.pagination.total ?? 0) >= 10 && (\n          <div className=\"flex justify-end px-3 py-4\">\n            <PaginatorComponent\n              pageIndex={data?.pagination.page ?? 1}\n              pageSize={data?.pagination.size ?? 10}\n              rowsCount={[12, 24, 48, 96]}\n              totalRowsCount={data?.pagination.total ?? 0}\n              paginate={handlePageChange}\n              pages={data?.pagination.pages}\n            />\n          </div>\n        )}\n      </BaseModal.Content>\n    </BaseModal>",
        "jsx_simplified": "<BaseModal open={open} setOpen={setOpen} size=\"x-large\">\n      <BaseModal.Trigger asChild>{children}</BaseModal.Trigger>\n      <BaseModal.Header description=\"Inspect component executions.\">\n        <div className=\"flex w-full justify-between\">\n          <div className=\"flex h-fit w-32 items-center\">\n            <span className=\"pr-2\">Logs</span>\n            <IconComponent name=\"ScrollText\" className=\"mr-2 h-4 w-4\" />\n          </div>\n          <div className=\"flex h-fit w-32 items-center\"></div>\n        </div>\n      </BaseModal.Header>\n      <BaseModal.Content>\n        <TableComponent\n          key={\"Executions\"}\n          readOnlyEdit\n          className=\"h-max-full h-full w-full\"\n          pagination={false}\n          columnDefs={columns}\n          autoSizeStrategy={{ type: \"fitGridWidth\" }}\n          rowData={rows}\n          headerHeight={rows.length === 0 ? 0 : undefined}\n        ></TableComponent>\n        {/* complex expression */}\n              pageSize={data?.pagination.size ?? 10}\n              rowsCount={[12, 24, 48, 96]}\n              totalRowsCount={data?.pagination.total ?? 0}\n              paginate={handlePageChange}\n              pages={data?.pagination.pages}\n            />\n          </div>\n        )}\n      </BaseModal.Content>\n    </BaseModal>",
        "imports": [
          {
            "source": "react",
            "items": [
              "useCallback",
              "useEffect",
              "useState"
            ],
            "type": "named"
          },
          {
            "source": "react-router-dom",
            "items": [
              "useSearchParams"
            ],
            "type": "named"
          },
          {
            "source": "@/components/common/genericIconComponent",
            "items": [
              "IconComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/common/paginatorComponent",
            "items": [
              "PaginatorComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/components/core/parameterRenderComponent/components/tableComponent",
            "items": [
              "TableComponent"
            ],
            "type": "default"
          },
          {
            "source": "@/controllers/API/queries/transactions",
            "items": [
              "useGetTransactionsQuery"
            ],
            "type": "named"
          },
          {
            "source": "@/stores/flowsManagerStore",
            "items": [
              "useFlowsManagerStore"
            ],
            "type": "default"
          },
          {
            "source": "@/utils/utils",
            "items": [
              "convertUTCToLocalTimezone"
            ],
            "type": "named"
          },
          {
            "source": "../baseModal",
            "items": [
              "BaseModal"
            ],
            "type": "default"
          }
        ],
        "props_definition": null,
        "ui_components_used": [
          "BaseModal",
          "IconComponent",
          "PaginatorComponent",
          "TableComponent"
        ],
        "tailwind_classes_used": [
          "flex",
          "h-4",
          "h-fit",
          "h-full",
          "h-max-full",
          "items-center",
          "justify-between",
          "justify-end",
          "mr-2",
          "pr-2",
          "px-3",
          "py-4",
          "w-32",
          "w-4",
          "w-full"
        ],
        "state_props_referenced": [
          "children",
          "columns",
          "false",
          "handlePageChange",
          "open",
          "rows",
          "setOpen"
        ],
        "file_size_lines": 100,
        "jsx_size_chars": 1448
      }
    },
    {
      "id": "ns0001",
      "type": "schema",
      "name": "User",
      "description": "Represents an authenticated user in the LangBuilder system with associated flows, API keys, variables, and folders. Users can have superuser privileges and track various opt-in actions.",
      "path": "src/backend/base/langbuilder/services/database/models/user/model.py",
      "graphql_schema_physical": "\"\"\"User entity - Core authentication and user management\n\nRepresents a user account with authentication, authorization, and relationship tracking.\nUsers own flows, folders, variables, and API keys. Supports profile customization,\nactivity tracking, and opt-in feature tracking.\n\"\"\"\n\ntype User {\n  \"Unique identifier for the user\"\n  id: UUID!\n  \n  \"Unique username for authentication\"\n  username: String!\n  \n  \"Hashed password for authentication\"\n  password: String!\n  \n  \"Optional profile image URL or path\"\n  profile_image: String\n  \n  \"Indicates if the user account is active\"\n  is_active: Boolean!\n  \n  \"Indicates if the user has superuser privileges\"\n  is_superuser: Boolean!\n  \n  \"Timestamp when the user account was created\"\n  create_at: DateTime!\n  \n  \"Timestamp when the user account was last updated\"\n  updated_at: DateTime!\n  \n  \"Timestamp of the user's last login\"\n  last_login_at: DateTime\n  \n  \"Store API key for marketplace integration\"\n  store_api_key: String\n  \n  \"User opt-in preferences and actions\"\n  optins: UserOptin\n  \n  \"API keys associated with this user\"\n  api_keys: [ApiKey!]!\n  \n  \"Flows created by this user\"\n  flows: [Flow!]!\n  \n  \"Global variables owned by this user\"\n  variables: [Variable!]!\n  \n  \"Folders/projects owned by this user\"\n  folders: [Folder!]!\n}\n\n\"\"\"User opt-in tracking for various features and actions\"\"\"\ntype UserOptin {\n  \"User has starred the GitHub repository\"\n  github_starred: Boolean!\n  \n  \"User has dismissed the dialog\"\n  dialog_dismissed: Boolean!\n  \n  \"User has clicked the Discord link\"\n  discord_clicked: Boolean!\n}\n\n\"\"\"Input type for creating a new user\"\"\"\ninput UserCreateInput {\n  \"Username for the new user (must be unique)\"\n  username: String!\n  \n  \"Password for the new user\"\n  password: String!\n  \n  \"Optional opt-in preferences\"\n  optins: UserOptinInput\n}\n\n\"\"\"Input type for updating a user\"\"\"\ninput UserUpdateInput {\n  \"New username (must be unique if changed)\"\n  username: String\n  \n  \"New profile image URL\"\n  profile_image: String\n  \n  \"New password\"\n  password: String\n  \n  \"Update active status\"\n  is_active: Boolean\n  \n  \"Update superuser status\"\n  is_superuser: Boolean\n  \n  \"Update last login timestamp\"\n  last_login_at: DateTime\n  \n  \"Update opt-in preferences\"\n  optins: UserOptinInput\n}\n\ninput UserOptinInput {\n  github_starred: Boolean\n  dialog_dismissed: Boolean\n  discord_clicked: Boolean\n}"
    },
    {
      "id": "ns0002",
      "type": "schema",
      "name": "Flow",
      "description": "Represents a visual workflow/flow in LangBuilder. Flows contain nodes and edges defining the logic pipeline, can be components or full applications, and support webhooks, MCP integration, and various access types. Each flow belongs to a user and optionally to a folder.",
      "path": "src/backend/base/langbuilder/services/database/models/flow/model.py",
      "graphql_schema_physical": "\"\"\"Flow entity - Visual workflow/pipeline representation\n\nRepresents a complete workflow with nodes and edges, supporting component reuse,\nwebhook endpoints, MCP server integration, and public/private access control.\nFlows can be locked for editing and support rich metadata (icons, colors, tags).\n\"\"\"\n\ntype Flow {\n  \"Unique identifier for the flow\"\n  id: UUID!\n  \n  \"Name of the flow (must be unique per user)\"\n  name: String!\n  \n  \"Optional description of the flow's purpose\"\n  description: String\n  \n  \"Icon representation (emoji or lucide icon name)\"\n  icon: String\n  \n  \"Background color for the icon (hex format #RRGGBB)\"\n  icon_bg_color: String\n  \n  \"Gradient style for visual representation\"\n  gradient: String\n  \n  \"Flow data structure containing nodes and edges\"\n  data: FlowData\n  \n  \"Indicates if this flow is a reusable component\"\n  is_component: Boolean\n  \n  \"Timestamp of last update\"\n  updated_at: DateTime\n  \n  \"Indicates if flow can be accessed via webhook endpoint\"\n  webhook: Boolean\n  \n  \"URL-safe endpoint name for API access (alphanumeric, hyphens, underscores)\"\n  endpoint_name: String\n  \n  \"Tags for categorization and search\"\n  tags: [String!]\n  \n  \"Indicates if the flow is locked from editing\"\n  locked: Boolean\n  \n  \"Indicates if flow is exposed in MCP (Model Context Protocol) server\"\n  mcp_enabled: Boolean\n  \n  \"Name of the MCP action associated with this flow\"\n  action_name: String\n  \n  \"Description of the MCP action\"\n  action_description: String\n  \n  \"Access control type for the flow\"\n  access_type: AccessType!\n  \n  \"ID of the user who owns this flow\"\n  user_id: UUID\n  \n  \"User who owns this flow\"\n  user: User\n  \n  \"ID of the folder containing this flow\"\n  folder_id: UUID\n  \n  \"Folder containing this flow\"\n  folder: Folder\n  \n  \"Filesystem path for file-based flows\"\n  fs_path: String\n}\n\n\"\"\"Flow data structure containing the visual graph\"\"\"\ntype FlowData {\n  \"List of nodes in the flow\"\n  nodes: [FlowNode!]!\n  \n  \"List of edges connecting nodes\"\n  edges: [FlowEdge!]!\n}\n\n\"\"\"Node in a flow graph\"\"\"\ntype FlowNode {\n  \"Unique node identifier within the flow\"\n  id: String!\n  \n  \"Node type/class\"\n  type: String!\n  \n  \"Node configuration and data\"\n  data: JSON!\n  \n  \"Visual position of the node\"\n  position: Position\n}\n\n\"\"\"Edge connecting two nodes in a flow\"\"\"\ntype FlowEdge {\n  \"Unique edge identifier\"\n  id: String!\n  \n  \"Source node ID\"\n  source: String!\n  \n  \"Target node ID\"\n  target: String!\n  \n  \"Source handle ID\"\n  sourceHandle: String\n  \n  \"Target handle ID\"\n  targetHandle: String\n}\n\n\"\"\"2D position for visual layout\"\"\"\ntype Position {\n  x: Float!\n  y: Float!\n}\n\n\"\"\"Access control enum for flows\"\"\"\nenum AccessType {\n  \"Flow is private to the owner\"\n  PRIVATE\n  \n  \"Flow is publicly accessible\"\n  PUBLIC\n}\n\n\"\"\"Input type for creating a new flow\"\"\"\ninput FlowCreateInput {\n  name: String!\n  description: String\n  icon: String\n  icon_bg_color: String\n  gradient: String\n  data: JSON\n  is_component: Boolean\n  webhook: Boolean\n  endpoint_name: String\n  tags: [String!]\n  locked: Boolean\n  mcp_enabled: Boolean\n  action_name: String\n  action_description: String\n  access_type: AccessType\n  user_id: UUID\n  folder_id: UUID\n  fs_path: String\n}\n\n\"\"\"Input type for updating a flow\"\"\"\ninput FlowUpdateInput {\n  name: String\n  description: String\n  data: JSON\n  folder_id: UUID\n  endpoint_name: String\n  mcp_enabled: Boolean\n  locked: Boolean\n  action_name: String\n  action_description: String\n  access_type: AccessType\n  fs_path: String\n}"
    },
    {
      "id": "ns0003",
      "type": "schema",
      "name": "Folder",
      "description": "Represents a folder/project for organizing flows. Folders support hierarchical nesting with parent-child relationships and can have authentication settings. Each folder belongs to a user and can contain multiple flows.",
      "path": "src/backend/base/langbuilder/services/database/models/folder/model.py",
      "graphql_schema_physical": "\"\"\"Folder entity - Organizational unit for flows\n\nRepresents a folder/project that contains and organizes flows. Supports hierarchical\nnesting, custom authentication settings, and ownership tracking. Folders can have\nparent-child relationships for complex organizational structures.\n\"\"\"\n\ntype Folder {\n  \"Unique identifier for the folder\"\n  id: UUID!\n  \n  \"Name of the folder (must be unique per user)\"\n  name: String!\n  \n  \"Optional description of the folder's purpose\"\n  description: String\n  \n  \"Authentication settings for the folder/project\"\n  auth_settings: FolderAuthSettings\n  \n  \"ID of the parent folder (null for root folders)\"\n  parent_id: UUID\n  \n  \"Parent folder (for nested folder structures)\"\n  parent: Folder\n  \n  \"Child folders nested under this folder\"\n  children: [Folder!]!\n  \n  \"ID of the user who owns this folder\"\n  user_id: UUID\n  \n  \"User who owns this folder\"\n  user: User!\n  \n  \"Flows contained in this folder\"\n  flows: [Flow!]!\n}\n\n\"\"\"Authentication settings for a folder/project\"\"\"\ntype FolderAuthSettings {\n  \"Custom authentication configuration as JSON\"\n  settings: JSON\n}\n\n\"\"\"Input type for creating a new folder\"\"\"\ninput FolderCreateInput {\n  \"Name of the folder (must be unique per user)\"\n  name: String!\n  \n  \"Optional description\"\n  description: String\n  \n  \"Optional authentication settings\"\n  auth_settings: JSON\n  \n  \"Optional parent folder ID for nesting\"\n  parent_id: UUID\n  \n  \"Optional list of component IDs to include\"\n  components_list: [UUID!]\n  \n  \"Optional list of flow IDs to include\"\n  flows_list: [UUID!]\n}\n\n\"\"\"Input type for updating a folder\"\"\"\ninput FolderUpdateInput {\n  \"New name for the folder\"\n  name: String\n  \n  \"New description\"\n  description: String\n  \n  \"New parent folder ID\"\n  parent_id: UUID\n  \n  \"Updated list of component IDs\"\n  components: [UUID!]\n  \n  \"Updated list of flow IDs\"\n  flows: [UUID!]\n  \n  \"Updated authentication settings\"\n  auth_settings: JSON\n}"
    },
    {
      "id": "ns0004",
      "type": "schema",
      "name": "MessageTable",
      "description": "Represents a message in a chat/conversation session. Messages track sender information, content with rich text support, file attachments, properties, and content blocks. Messages are associated with specific flows and sessions.",
      "path": "src/backend/base/langbuilder/services/database/models/message/model.py",
      "graphql_schema_physical": "\"\"\"Message entity - Chat/conversation message\n\nRepresents a message in a conversation or chat session. Supports rich content including\ntext, files, properties, content blocks, and error/edit tracking. Messages are associated\nwith flows and sessions for context.\n\"\"\"\n\ntype Message {\n  \"Unique identifier for the message\"\n  id: UUID!\n  \n  \"Timestamp when the message was sent\"\n  timestamp: DateTime!\n  \n  \"Sender identifier (user, bot, system, etc.)\"\n  sender: String!\n  \n  \"Display name of the sender\"\n  sender_name: String!\n  \n  \"Session ID for grouping related messages\"\n  session_id: String!\n  \n  \"Message text content\"\n  text: String!\n  \n  \"List of file paths/URLs attached to the message\"\n  files: [String!]!\n  \n  \"Indicates if this message represents an error\"\n  error: Boolean!\n  \n  \"Indicates if this message is an edited version\"\n  edit: Boolean!\n  \n  \"Additional properties for the message\"\n  properties: MessageProperties!\n  \n  \"Category of the message (message, system, error, etc.)\"\n  category: String!\n  \n  \"Rich content blocks for structured message content\"\n  content_blocks: [ContentBlock!]!\n  \n  \"ID of the flow this message is associated with\"\n  flow_id: UUID\n}\n\n\"\"\"Message properties for metadata and context\"\"\"\ntype MessageProperties {\n  \"Source of the message\"\n  source: MessageSource\n  \n  \"Icon for the message\"\n  icon: String\n  \n  \"Background color\"\n  background_color: String\n  \n  \"Additional metadata as JSON\"\n  metadata: JSON\n}\n\n\"\"\"Source information for a message\"\"\"\ntype MessageSource {\n  \"Source ID\"\n  id: String\n  \n  \"Display name of the source\"\n  display_name: String\n  \n  \"Source type\"\n  type: String\n}\n\n\"\"\"Content block for rich message content\"\"\"\ntype ContentBlock {\n  \"Type of content block\"\n  type: String!\n  \n  \"Title of the block\"\n  title: String\n  \n  \"Content of the block\"\n  content: JSON!\n  \n  \"Additional properties\"\n  properties: JSON\n}\n\n\"\"\"Input type for creating a new message\"\"\"\ninput MessageCreateInput {\n  \"Sender identifier\"\n  sender: String!\n  \n  \"Sender display name\"\n  sender_name: String!\n  \n  \"Session ID\"\n  session_id: String!\n  \n  \"Message text\"\n  text: String!\n  \n  \"Optional file attachments\"\n  files: [String!]\n  \n  \"Is this an error message?\"\n  error: Boolean\n  \n  \"Is this an edited message?\"\n  edit: Boolean\n  \n  \"Message properties\"\n  properties: JSON\n  \n  \"Message category\"\n  category: String\n  \n  \"Content blocks\"\n  content_blocks: [JSON!]\n  \n  \"Associated flow ID\"\n  flow_id: UUID\n}\n\n\"\"\"Input type for updating a message\"\"\"\ninput MessageUpdateInput {\n  text: String\n  sender: String\n  sender_name: String\n  session_id: String\n  files: [String!]\n  edit: Boolean\n  error: Boolean\n  properties: JSON\n}"
    },
    {
      "id": "ns0005",
      "type": "schema",
      "name": "ApiKey",
      "description": "Represents an API key for authentication and authorization. Tracks usage statistics, creation date, last usage, and active status. Each API key belongs to a specific user and can be deactivated without deletion.",
      "path": "src/backend/base/langbuilder/services/database/models/api_key/model.py",
      "graphql_schema_physical": "\"\"\"ApiKey entity - API authentication key\n\nRepresents an API key for authenticating API requests. Tracks usage statistics,\nactive status, and creation/usage timestamps. Keys can be masked for security\nand belong to a specific user account.\n\"\"\"\n\ntype ApiKey {\n  \"Unique identifier for the API key\"\n  id: UUID!\n  \n  \"Optional name/label for the API key\"\n  name: String\n  \n  \"The actual API key value (masked in read operations)\"\n  api_key: String!\n  \n  \"Timestamp when the key was created\"\n  created_at: DateTime!\n  \n  \"Timestamp when the key was last used\"\n  last_used_at: DateTime\n  \n  \"Total number of times this key has been used\"\n  total_uses: Int!\n  \n  \"Indicates if the API key is currently active\"\n  is_active: Boolean!\n  \n  \"ID of the user who owns this API key\"\n  user_id: UUID!\n  \n  \"User who owns this API key\"\n  user: User!\n}\n\n\"\"\"Input type for creating a new API key\"\"\"\ninput ApiKeyCreateInput {\n  \"Optional name for the API key\"\n  name: String\n  \n  \"Custom API key value (auto-generated if not provided)\"\n  api_key: String\n  \n  \"User ID (optional, defaults to current user)\"\n  user_id: UUID\n}\n\n\"\"\"Input type for updating an API key\"\"\"\ninput ApiKeyUpdateInput {\n  \"Update the name\"\n  name: String\n  \n  \"Update active status\"\n  is_active: Boolean\n}"
    },
    {
      "id": "ns0006",
      "type": "schema",
      "name": "Variable",
      "description": "Represents a global variable or credential. Variables store encrypted values with optional default fields and type classification. Each variable belongs to a user and supports both simple variables and secure credentials.",
      "path": "src/backend/base/langbuilder/services/database/models/variable/model.py",
      "graphql_schema_physical": "\"\"\"Variable entity - Global variable/credential storage\n\nRepresents a global variable or credential with encrypted value storage. Supports\ntyped variables (generic or credential) with optional default fields for structured data.\nVariables are user-scoped and track creation/update timestamps.\n\"\"\"\n\ntype Variable {\n  \"Unique identifier for the variable\"\n  id: UUID!\n  \n  \"Name of the variable (must be unique per user)\"\n  name: String!\n  \n  \"Encrypted value of the variable (masked for credential type)\"\n  value: String!\n  \n  \"Optional default fields for structured variables\"\n  default_fields: [String!]\n  \n  \"Type of variable (generic or credential)\"\n  type: String\n  \n  \"Timestamp when the variable was created\"\n  created_at: DateTime\n  \n  \"Timestamp when the variable was last updated\"\n  updated_at: DateTime\n  \n  \"ID of the user who owns this variable\"\n  user_id: UUID!\n  \n  \"User who owns this variable\"\n  user: User!\n}\n\n\"\"\"Input type for creating a new variable\"\"\"\ninput VariableCreateInput {\n  \"Name of the variable\"\n  name: String!\n  \n  \"Encrypted value\"\n  value: String!\n  \n  \"Optional default fields\"\n  default_fields: [String!]\n  \n  \"Variable type\"\n  type: String\n}\n\n\"\"\"Input type for updating a variable\"\"\"\ninput VariableUpdateInput {\n  \"Updated name\"\n  name: String\n  \n  \"Updated encrypted value\"\n  value: String\n  \n  \"Updated default fields\"\n  default_fields: [String!]\n}"
    },
    {
      "id": "ns0007",
      "type": "schema",
      "name": "File",
      "description": "Represents an uploaded file. Tracks file metadata including name, path, size, storage provider, and timestamps. Each file belongs to a user and must have a unique name.",
      "path": "src/backend/base/langbuilder/services/database/models/file/model.py",
      "graphql_schema_physical": "\"\"\"File entity - Uploaded file tracking\n\nRepresents a file uploaded to the system. Tracks file metadata including storage location,\nsize, provider, and timestamps. Files have unique names and belong to specific users.\n\"\"\"\n\ntype File {\n  \"Unique identifier for the file\"\n  id: UUID!\n  \n  \"ID of the user who owns this file\"\n  user_id: UUID!\n  \n  \"Name of the file (must be unique)\"\n  name: String!\n  \n  \"Storage path to the file\"\n  path: String!\n  \n  \"File size in bytes\"\n  size: Int!\n  \n  \"Storage provider (local, S3, etc.)\"\n  provider: String\n  \n  \"Timestamp when the file was created\"\n  created_at: DateTime!\n  \n  \"Timestamp when the file was last updated\"\n  updated_at: DateTime!\n}\n\n\"\"\"Input type for creating a file record\"\"\"\ninput FileCreateInput {\n  \"User ID\"\n  user_id: UUID!\n  \n  \"File name (must be unique)\"\n  name: String!\n  \n  \"Storage path\"\n  path: String!\n  \n  \"File size in bytes\"\n  size: Int!\n  \n  \"Optional storage provider\"\n  provider: String\n}\n\n\"\"\"Input type for updating a file record\"\"\"\ninput FileUpdateInput {\n  \"Updated file name\"\n  name: String\n  \n  \"Updated storage path\"\n  path: String\n  \n  \"Updated file size\"\n  size: Int\n  \n  \"Updated provider\"\n  provider: String\n}"
    },
    {
      "id": "ns0008",
      "type": "schema",
      "name": "VertexBuildTable",
      "description": "Represents a build/execution of a vertex (node) in a flow. Tracks the execution data, artifacts produced, parameters used, validity status, and timestamps. VertexBuilds are associated with specific flows and maintain execution history.",
      "path": "src/backend/base/langbuilder/services/database/models/vertex_builds/model.py",
      "graphql_schema_physical": "\"\"\"VertexBuild entity - Node execution record\n\nRepresents the build/execution record of a single vertex (node) in a flow. Tracks\nexecution data, generated artifacts, input parameters, validity status, and timestamps.\nUsed for debugging, monitoring, and caching flow executions.\n\"\"\"\n\ntype VertexBuild {\n  \"Unique identifier for this build record\"\n  build_id: UUID!\n  \n  \"Timestamp when the build was executed\"\n  timestamp: DateTime!\n  \n  \"Vertex/node ID within the flow\"\n  id: String!\n  \n  \"Execution data and results (serialized with size limits)\"\n  data: JSON\n  \n  \"Artifacts generated during execution (serialized with size limits)\"\n  artifacts: JSON\n  \n  \"Input parameters used for the build (serialized)\"\n  params: String\n  \n  \"Indicates if the build completed successfully and is valid\"\n  valid: Boolean!\n  \n  \"ID of the flow this build belongs to\"\n  flow_id: UUID!\n}\n\n\"\"\"Input type for creating a vertex build record\"\"\"\ninput VertexBuildCreateInput {\n  \"Vertex/node ID\"\n  id: String!\n  \n  \"Execution data\"\n  data: JSON\n  \n  \"Generated artifacts\"\n  artifacts: JSON\n  \n  \"Input parameters\"\n  params: String\n  \n  \"Validity status\"\n  valid: Boolean!\n  \n  \"Associated flow ID\"\n  flow_id: UUID!\n}"
    },
    {
      "id": "ns0009",
      "type": "schema",
      "name": "TransactionTable",
      "description": "Represents a transaction/execution record for data flow between vertices. Tracks inputs, outputs, status, errors, and the source/target vertices involved. Transactions are associated with flows and provide execution audit trail.",
      "path": "src/backend/base/langbuilder/services/database/models/transactions/model.py",
      "graphql_schema_physical": "\"\"\"Transaction entity - Vertex-to-vertex execution record\n\nRepresents a transaction/data flow between vertices in a flow execution. Tracks input data,\noutput results, execution status, errors, and the vertices involved. Provides an audit trail\nfor flow executions and enables debugging of data transformations.\n\"\"\"\n\ntype Transaction {\n  \"Unique identifier for this transaction\"\n  id: UUID!\n  \n  \"Timestamp when the transaction occurred\"\n  timestamp: DateTime!\n  \n  \"Source vertex ID\"\n  vertex_id: String!\n  \n  \"Target vertex ID (if applicable)\"\n  target_id: String\n  \n  \"Input data for the transaction (serialized with size limits)\"\n  inputs: JSON\n  \n  \"Output data from the transaction (serialized with size limits)\"\n  outputs: JSON\n  \n  \"Execution status (success, error, pending, etc.)\"\n  status: String!\n  \n  \"Error message if the transaction failed\"\n  error: String\n  \n  \"ID of the flow this transaction belongs to\"\n  flow_id: UUID!\n}\n\n\"\"\"Input type for creating a transaction record\"\"\"\ninput TransactionCreateInput {\n  \"Source vertex ID\"\n  vertex_id: String!\n  \n  \"Optional target vertex ID\"\n  target_id: String\n  \n  \"Input data\"\n  inputs: JSON\n  \n  \"Output data\"\n  outputs: JSON\n  \n  \"Execution status\"\n  status: String!\n  \n  \"Optional error message\"\n  error: String\n  \n  \"Associated flow ID\"\n  flow_id: UUID!\n}"
    },
    {
      "id": "nl0001",
      "type": "logic",
      "name": "Verify Filesystem Path",
      "description": "Verify and create filesystem path if it doesn't exist",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "_verify_fs_path",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_verify_fs_path_statechart\",\n  \"initial\": \"getting_flow_dir\",\n  \"context\": {\n    \"flow_id\": \"UUID\",\n    \"flow_dir\": \"Path object\"\n  },\n  \"states\": {\n    \"getting_flow_dir\": {\n      \"entry\": \"get_flow_dir_path\",\n      \"description\": \"FLOWS_PATH / str(flow_id)\",\n      \"on\": {\n        \"PATH_OBTAINED\": \"checking_existence\"\n      }\n    },\n    \"checking_existence\": {\n      \"entry\": \"check_path_exists\",\n      \"description\": \"flow_dir.exists()\",\n      \"on\": {\n        \"EXISTS\": \"complete\",\n        \"NOT_EXISTS\": \"creating_directory\"\n      }\n    },\n    \"creating_directory\": {\n      \"entry\": \"create_directory\",\n      \"description\": \"flow_dir.mkdir(parents=True, exist_ok=True)\",\n      \"on\": {\n        \"CREATED\": \"complete\",\n        \"ERROR\": \"error_filesystem\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flow_dir\": \"Path to flow directory\"\n      }\n    },\n    \"error_filesystem\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\",\n      \"data\": {\n        \"error\": \"Failed to create directory\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0002",
      "type": "logic",
      "name": "Save Flow to Filesystem",
      "description": "Save flow data to filesystem asynchronously",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "_save_flow_to_fs",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_save_flow_to_fs_statechart\",\n  \"initial\": \"verifying_path\",\n  \"context\": {\n    \"db_flow\": \"Flow object\",\n    \"flow_dir\": \"Path object\",\n    \"flow_data\": \"Flow dict\"\n  },\n  \"states\": {\n    \"verifying_path\": {\n      \"entry\": \"call_verify_fs_path\",\n      \"description\": \"Calls _verify_fs_path(db_flow.id)\",\n      \"on\": {\n        \"PATH_VERIFIED\": \"serializing_flow\",\n        \"ERROR\": \"error_filesystem\"\n      }\n    },\n    \"serializing_flow\": {\n      \"entry\": \"serialize_to_dict\",\n      \"description\": \"db_flow.model_dump(exclude={'user_id'})\",\n      \"on\": {\n        \"SERIALIZED\": \"writing_json_file\"\n      }\n    },\n    \"writing_json_file\": {\n      \"entry\": \"write_json\",\n      \"description\": \"(flow_dir / 'flow.json').write_text(json.dumps(flow_data, indent=2))\",\n      \"on\": {\n        \"WRITTEN\": \"complete\",\n        \"ERROR\": \"error_filesystem\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"file_path\": \"Path to saved flow.json\"\n      }\n    },\n    \"error_filesystem\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\",\n      \"data\": {\n        \"error\": \"Failed to save flow to filesystem\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0003",
      "type": "logic",
      "name": "Create New Flow Logic",
      "description": "Create a new flow with unique name generation and folder assignment",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "_new_flow",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_new_flow_statechart\",\n  \"initial\": \"checking_unique_name\",\n  \"context\": {\n    \"flow\": \"Flow object\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"existing_flow\": \"Query result\"\n  },\n  \"states\": {\n    \"checking_unique_name\": {\n      \"entry\": \"query_flow_by_name\",\n      \"description\": \"SELECT * FROM flow WHERE name = flow.name AND user_id = user_id\",\n      \"on\": {\n        \"NAME_EXISTS\": \"generating_unique_name\",\n        \"NAME_AVAILABLE\": \"checking_unique_endpoint\"\n      }\n    },\n    \"generating_unique_name\": {\n      \"entry\": \"query_numbered_flows\",\n      \"description\": \"SELECT * FROM flow WHERE name LIKE '{name} (%)' AND user_id = user_id\",\n      \"on\": {\n        \"NUMBERS_FOUND\": \"appending_number\",\n        \"NO_NUMBERS\": \"appending_first_number\"\n      }\n    },\n    \"appending_number\": {\n      \"entry\": \"append_max_plus_one\",\n      \"description\": \"flow.name = f\\\"{flow.name} ({max(numbers) + 1})\\\"\",\n      \"on\": {\n        \"APPENDED\": \"checking_unique_endpoint\"\n      }\n    },\n    \"appending_first_number\": {\n      \"entry\": \"append_one\",\n      \"description\": \"flow.name = f\\\"{flow.name} (1)\\\"\",\n      \"on\": {\n        \"APPENDED\": \"checking_unique_endpoint\"\n      }\n    },\n    \"checking_unique_endpoint\": {\n      \"entry\": \"query_flow_by_endpoint\",\n      \"description\": \"SELECT * FROM flow WHERE endpoint_name = endpoint AND user_id = user_id\",\n      \"on\": {\n        \"ENDPOINT_EXISTS\": \"generating_unique_endpoint\",\n        \"ENDPOINT_NULL\": \"resolving_folder\",\n        \"ENDPOINT_AVAILABLE\": \"resolving_folder\"\n      }\n    },\n    \"generating_unique_endpoint\": {\n      \"entry\": \"append_uuid_to_endpoint\",\n      \"description\": \"Appends short UUID to make endpoint unique\",\n      \"on\": {\n        \"GENERATED\": \"resolving_folder\"\n      }\n    },\n    \"resolving_folder\": {\n      \"entry\": \"check_folder_id\",\n      \"on\": {\n        \"FOLDER_PROVIDED\": \"creating_flow_object\",\n        \"FOLDER_NULL\": \"getting_default_folder\"\n      }\n    },\n    \"getting_default_folder\": {\n      \"entry\": \"query_default_folder\",\n      \"description\": \"SELECT * FROM folder WHERE name = 'My Projects' AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"assigning_folder\",\n        \"NOT_FOUND\": \"error_no_default_folder\"\n      }\n    },\n    \"assigning_folder\": {\n      \"entry\": \"set_folder_id\",\n      \"description\": \"flow.folder_id = default_folder.id\",\n      \"on\": {\n        \"ASSIGNED\": \"creating_flow_object\"\n      }\n    },\n    \"creating_flow_object\": {\n      \"entry\": \"instantiate_flow_model\",\n      \"description\": \"Create Flow(**flow.model_dump(), user_id=user_id)\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_flow)\",\n      \"on\": {\n        \"ADDED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"db_flow\": \"Flow object ready for commit\"\n      }\n    },\n    \"error_no_default_folder\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Default folder 'My Projects' not found\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0004",
      "type": "logic",
      "name": "Create Flow Endpoint Handler",
      "description": "POST /flows/ - Create a new flow",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "create_flow",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"create_flow_statechart\",\n  \"initial\": \"calling_new_flow\",\n  \"context\": {\n    \"flow_data\": \"Flow object from request\",\n    \"user_id\": \"UUID of authenticated user\",\n    \"session\": \"Database session\",\n    \"db_flow\": \"Created flow object\"\n  },\n  \"states\": {\n    \"calling_new_flow\": {\n      \"entry\": \"call_new_flow_helper\",\n      \"description\": \"Calls _new_flow(session, flow, user_id) to create and validate flow\",\n      \"on\": {\n        \"SUCCESS\": \"committing_transaction\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit() - Persists flow to database\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_flow\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_flow\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_flow) - Reloads flow with generated IDs\",\n      \"on\": {\n        \"REFRESHED\": \"saving_to_filesystem\"\n      }\n    },\n    \"saving_to_filesystem\": {\n      \"entry\": \"save_flow_to_fs\",\n      \"description\": \"await _save_flow_to_fs(db_flow) - Saves flow JSON to filesystem\",\n      \"on\": {\n        \"SAVED\": \"complete\",\n        \"ERROR\": \"error_filesystem\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flow\": \"FlowRead object with all fields\"\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Validation error from _new_flow\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Unique constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    },\n    \"error_filesystem\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Filesystem save error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0005",
      "type": "logic",
      "name": "List Flows Endpoint Handler",
      "description": "GET /flows/ - Retrieve list of flows with pagination",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "read_flows",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"read_flows_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"folder_id\": \"Optional UUID\",\n    \"query\": \"SQLAlchemy select statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"select(Flow).where(Flow.user_id == user_id)\",\n      \"on\": {\n        \"QUERY_BUILT\": \"checking_folder_filter\"\n      }\n    },\n    \"checking_folder_filter\": {\n      \"entry\": \"check_folder_id_parameter\",\n      \"on\": {\n        \"FOLDER_PROVIDED\": \"adding_folder_filter\",\n        \"NO_FOLDER\": \"executing_query\"\n      }\n    },\n    \"adding_folder_filter\": {\n      \"entry\": \"add_where_clause\",\n      \"description\": \"query.where(Flow.folder_id == folder_id)\",\n      \"on\": {\n        \"FILTER_ADDED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_all\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_all\": {\n      \"entry\": \"fetch_all_results\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flows\": \"List[FlowRead]\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database query error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0006",
      "type": "logic",
      "name": "Read Flow by ID Logic",
      "description": "Read a single flow from database",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "_read_flow",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_read_flow_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"flow_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"select(Flow).where(Flow.id == flow_id, Flow.user_id == user_id)\",\n      \"on\": {\n        \"QUERY_BUILT\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_first\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_first\": {\n      \"entry\": \"fetch_first_result\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FOUND\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flow\": \"Flow object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Flow not found\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database query error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0007",
      "type": "logic",
      "name": "Get Flow by ID Endpoint Handler",
      "description": "GET /flows/{flow_id} - Read a specific flow",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "read_flow",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"read_flow_statechart\",\n  \"initial\": \"calling_read_flow_helper\",\n  \"context\": {\n    \"flow_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\"\n  },\n  \"states\": {\n    \"calling_read_flow_helper\": {\n      \"entry\": \"call_read_flow\",\n      \"description\": \"Calls _read_flow(flow_id, session, user_id)\",\n      \"on\": {\n        \"FOUND\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flow\": \"FlowRead object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Flow not found\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0008",
      "type": "logic",
      "name": "Get Public Flow Endpoint Handler",
      "description": "GET /flows/public_flow/{flow_id} - Read a public flow",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "read_public_flow",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"read_public_flow_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"flow_id\": \"UUID\",\n    \"session\": \"Database session\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"select(Flow).where(Flow.id == flow_id, Flow.is_public == True)\",\n      \"on\": {\n        \"QUERY_BUILT\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_first\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_first\": {\n      \"entry\": \"fetch_first_result\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FOUND\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flow\": \"PublicFlowRead object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Public flow not found\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database query error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0009",
      "type": "logic",
      "name": "Update Flow Endpoint Handler",
      "description": "PATCH /flows/{flow_id} - Update flow data",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "update_flow",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"update_flow_statechart\",\n  \"initial\": \"reading_existing_flow\",\n  \"context\": {\n    \"flow_id\": \"UUID\",\n    \"flow_update\": \"FlowUpdate object\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_flow\": \"Existing flow object\"\n  },\n  \"states\": {\n    \"reading_existing_flow\": {\n      \"entry\": \"call_read_flow\",\n      \"description\": \"Calls _read_flow(flow_id, session, user_id)\",\n      \"on\": {\n        \"FOUND\": \"updating_fields\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"updating_fields\": {\n      \"entry\": \"update_flow_fields\",\n      \"description\": \"Update db_flow with fields from flow_update.model_dump(exclude_unset=True)\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_flow)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_flow\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_flow\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_flow)\",\n      \"on\": {\n        \"REFRESHED\": \"saving_to_filesystem\"\n      }\n    },\n    \"saving_to_filesystem\": {\n      \"entry\": \"save_flow_to_fs\",\n      \"description\": \"await _save_flow_to_fs(db_flow)\",\n      \"on\": {\n        \"SAVED\": \"complete\",\n        \"ERROR\": \"error_filesystem\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flow\": \"Updated FlowRead object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Flow not found\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Unique constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    },\n    \"error_filesystem\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Filesystem save error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0010",
      "type": "logic",
      "name": "Delete Flow Endpoint Handler",
      "description": "DELETE /flows/{flow_id} - Delete a flow",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "delete_flow",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"delete_flow_statechart\",\n  \"initial\": \"reading_existing_flow\",\n  \"context\": {\n    \"flow_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_flow\": \"Flow object to delete\"\n  },\n  \"states\": {\n    \"reading_existing_flow\": {\n      \"entry\": \"call_read_flow\",\n      \"description\": \"Calls _read_flow(flow_id, session, user_id)\",\n      \"on\": {\n        \"FOUND\": \"deleting_from_session\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"deleting_from_session\": {\n      \"entry\": \"session_delete\",\n      \"description\": \"await session.delete(db_flow) - Cascades to Message, Transaction, VertexBuild\",\n      \"on\": {\n        \"DELETED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Flow deleted successfully\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Flow not found\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0011",
      "type": "logic",
      "name": "Batch Create Flows Endpoint Handler",
      "description": "POST /flows/batch/ - Create multiple flows",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "create_flows",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"create_flows_statechart\",\n  \"initial\": \"iterating_flows\",\n  \"context\": {\n    \"flows\": \"List[FlowCreate]\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"created_flows\": \"List of created flows\",\n    \"current_flow\": \"Flow being processed\"\n  },\n  \"states\": {\n    \"iterating_flows\": {\n      \"entry\": \"get_next_flow\",\n      \"on\": {\n        \"HAS_FLOW\": \"creating_flow\",\n        \"NO_MORE_FLOWS\": \"committing_transaction\"\n      }\n    },\n    \"creating_flow\": {\n      \"entry\": \"call_new_flow\",\n      \"description\": \"Calls _new_flow(session, flow, user_id)\",\n      \"on\": {\n        \"SUCCESS\": \"adding_to_created_list\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"adding_to_created_list\": {\n      \"entry\": \"append_to_list\",\n      \"description\": \"created_flows.append(db_flow)\",\n      \"on\": {\n        \"ADDED\": \"iterating_flows\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit() - Commits all flows\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_flows\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_flows\": {\n      \"entry\": \"refresh_all_flows\",\n      \"description\": \"await session.refresh(flow) for each flow\",\n      \"on\": {\n        \"REFRESHED\": \"saving_all_to_filesystem\"\n      }\n    },\n    \"saving_all_to_filesystem\": {\n      \"entry\": \"save_all_flows\",\n      \"description\": \"await _save_flow_to_fs(flow) for each flow\",\n      \"on\": {\n        \"SAVED\": \"complete\",\n        \"ERROR\": \"error_filesystem\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flows\": \"List[FlowRead] of created flows\"\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Validation error\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Unique constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    },\n    \"error_filesystem\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Filesystem save error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0012",
      "type": "logic",
      "name": "Upload Flows Endpoint Handler",
      "description": "POST /flows/upload/ - Upload flows from file",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "upload_file",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"upload_file_projects_statechart\",\n  \"initial\": \"reading_file_content\",\n  \"context\": {\n    \"file\": \"UploadFile object\",\n    \"folder_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"flows\": \"List of parsed flows\"\n  },\n  \"states\": {\n    \"reading_file_content\": {\n      \"entry\": \"read_uploaded_file\",\n      \"description\": \"await file.read()\",\n      \"on\": {\n        \"READ\": \"checking_file_type\",\n        \"ERROR\": \"error_file_read\"\n      }\n    },\n    \"checking_file_type\": {\n      \"entry\": \"check_content_type\",\n      \"description\": \"Check if file is JSON or ZIP\",\n      \"on\": {\n        \"JSON_FILE\": \"parsing_json\",\n        \"ZIP_FILE\": \"extracting_zip\",\n        \"UNKNOWN\": \"error_unsupported_format\"\n      }\n    },\n    \"parsing_json\": {\n      \"entry\": \"parse_json_content\",\n      \"description\": \"json.loads(content)\",\n      \"on\": {\n        \"SINGLE_FLOW\": \"creating_single_flow\",\n        \"FLOW_ARRAY\": \"creating_multiple_flows\",\n        \"ERROR\": \"error_invalid_json\"\n      }\n    },\n    \"extracting_zip\": {\n      \"entry\": \"extract_zip_contents\",\n      \"description\": \"ZipFile(BytesIO(content)) and read all .json files\",\n      \"on\": {\n        \"EXTRACTED\": \"creating_multiple_flows\",\n        \"ERROR\": \"error_invalid_zip\"\n      }\n    },\n    \"creating_single_flow\": {\n      \"entry\": \"create_flow\",\n      \"description\": \"Calls _new_flow(session, flow, user_id)\",\n      \"on\": {\n        \"CREATED\": \"assigning_folder\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"creating_multiple_flows\": {\n      \"entry\": \"create_flows\",\n      \"description\": \"Iterates and calls _new_flow for each flow\",\n      \"on\": {\n        \"CREATED\": \"assigning_folder\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"assigning_folder\": {\n      \"entry\": \"set_folder_id\",\n      \"description\": \"flow.folder_id = folder_id for all flows\",\n      \"on\": {\n        \"ASSIGNED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_flows\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_flows\": {\n      \"entry\": \"refresh_all_flows\",\n      \"description\": \"await session.refresh(flow) for each flow\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flows\": \"List[FlowRead] of uploaded flows\"\n      }\n    },\n    \"error_file_read\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Failed to read uploaded file\"\n      }\n    },\n    \"error_unsupported_format\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Unsupported file format (must be JSON or ZIP)\"\n      }\n    },\n    \"error_invalid_json\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Invalid JSON in uploaded file\"\n      }\n    },\n    \"error_invalid_zip\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Invalid ZIP file\"\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Flow validation error\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Database constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0013",
      "type": "logic",
      "name": "Batch Delete Flows Endpoint Handler",
      "description": "DELETE /flows/ - Delete multiple flows by IDs",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "delete_multiple_flows",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"delete_multiple_flows_statechart\",\n  \"initial\": \"iterating_flow_ids\",\n  \"context\": {\n    \"flow_ids\": \"List[UUID]\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"current_flow\": \"Flow being processed\",\n    \"remaining_flows\": \"Queue of flow IDs\"\n  },\n  \"states\": {\n    \"iterating_flow_ids\": {\n      \"entry\": \"get_next_flow_id\",\n      \"on\": {\n        \"HAS_FLOW\": \"reading_flow\",\n        \"NO_MORE_FLOWS\": \"committing_transaction\"\n      }\n    },\n    \"reading_flow\": {\n      \"entry\": \"call_read_flow\",\n      \"description\": \"Calls _read_flow(flow_id, session, user_id)\",\n      \"on\": {\n        \"FOUND\": \"deleting_flow\",\n        \"NOT_FOUND\": \"iterating_flow_ids\"\n      }\n    },\n    \"deleting_flow\": {\n      \"entry\": \"session_delete\",\n      \"description\": \"await session.delete(db_flow)\",\n      \"on\": {\n        \"DELETED\": \"iterating_flow_ids\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit() - Commits all deletes\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Flows deleted successfully\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0014",
      "type": "logic",
      "name": "Download Flows Endpoint Handler",
      "description": "POST /flows/download/ - Download flows as zip",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "download_multiple_file",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"download_multiple_file_statechart\",\n  \"initial\": \"creating_memory_buffer\",\n  \"context\": {\n    \"flow_ids\": \"List[UUID]\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"zip_buffer\": \"BytesIO buffer\",\n    \"current_flow\": \"Flow being processed\"\n  },\n  \"states\": {\n    \"creating_memory_buffer\": {\n      \"entry\": \"create_bytes_io\",\n      \"description\": \"BytesIO() for in-memory ZIP\",\n      \"on\": {\n        \"CREATED\": \"creating_zip_file\"\n      }\n    },\n    \"creating_zip_file\": {\n      \"entry\": \"create_zipfile\",\n      \"description\": \"ZipFile(zip_buffer, 'w', ZIP_DEFLATED)\",\n      \"on\": {\n        \"CREATED\": \"iterating_flow_ids\"\n      }\n    },\n    \"iterating_flow_ids\": {\n      \"entry\": \"get_next_flow_id\",\n      \"on\": {\n        \"HAS_FLOW\": \"reading_flow\",\n        \"NO_MORE_FLOWS\": \"closing_zip_file\"\n      }\n    },\n    \"reading_flow\": {\n      \"entry\": \"call_read_flow\",\n      \"description\": \"Calls _read_flow(flow_id, session, user_id)\",\n      \"on\": {\n        \"FOUND\": \"serializing_flow\",\n        \"NOT_FOUND\": \"iterating_flow_ids\"\n      }\n    },\n    \"serializing_flow\": {\n      \"entry\": \"serialize_to_json\",\n      \"description\": \"json.dumps(flow.model_dump(), indent=2)\",\n      \"on\": {\n        \"SERIALIZED\": \"adding_to_zip\"\n      }\n    },\n    \"adding_to_zip\": {\n      \"entry\": \"write_to_zip\",\n      \"description\": \"zipfile.writestr(f'{flow.name}.json', flow_json)\",\n      \"on\": {\n        \"ADDED\": \"iterating_flow_ids\",\n        \"ERROR\": \"error_zip\"\n      }\n    },\n    \"closing_zip_file\": {\n      \"entry\": \"close_zip\",\n      \"description\": \"zipfile.close()\",\n      \"on\": {\n        \"CLOSED\": \"seeking_buffer\"\n      }\n    },\n    \"seeking_buffer\": {\n      \"entry\": \"seek_to_start\",\n      \"description\": \"zip_buffer.seek(0)\",\n      \"on\": {\n        \"SEEKED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"response\": \"StreamingResponse with ZIP file\"\n      }\n    },\n    \"error_zip\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Failed to create ZIP file\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0015",
      "type": "logic",
      "name": "Get Basic Examples Endpoint Handler",
      "description": "GET /flows/basic_examples/ - Retrieve basic example flows",
      "path": "src/backend/base/langbuilder/api/v1/flows.py",
      "category": "API Endpoint",
      "function": "read_basic_examples",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"read_basic_examples_statechart\",\n  \"initial\": \"getting_examples_path\",\n  \"context\": {\n    \"examples_path\": \"Path to examples directory\",\n    \"flow_files\": \"List of JSON files\"\n  },\n  \"states\": {\n    \"getting_examples_path\": {\n      \"entry\": \"get_path\",\n      \"description\": \"Path to basic_examples directory\",\n      \"on\": {\n        \"PATH_OBTAINED\": \"checking_directory_exists\"\n      }\n    },\n    \"checking_directory_exists\": {\n      \"entry\": \"check_exists\",\n      \"description\": \"examples_path.exists() and examples_path.is_dir()\",\n      \"on\": {\n        \"EXISTS\": \"listing_json_files\",\n        \"NOT_EXISTS\": \"error_directory_not_found\"\n      }\n    },\n    \"listing_json_files\": {\n      \"entry\": \"glob_json_files\",\n      \"description\": \"examples_path.glob('*.json')\",\n      \"on\": {\n        \"FOUND\": \"reading_flow_files\",\n        \"EMPTY\": \"complete_with_empty_list\"\n      }\n    },\n    \"reading_flow_files\": {\n      \"entry\": \"read_and_parse_files\",\n      \"description\": \"Read and parse each JSON file\",\n      \"on\": {\n        \"PARSED\": \"complete\",\n        \"ERROR\": \"error_file_read\"\n      }\n    },\n    \"complete_with_empty_list\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flows\": \"[]\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flows\": \"List[FlowRead] of example flows\"\n      }\n    },\n    \"error_directory_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Examples directory not found\"\n      }\n    },\n    \"error_file_read\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Failed to read example files\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0016",
      "type": "logic",
      "name": "Create User Endpoint Handler",
      "description": "POST /users/ - Add new user to database",
      "path": "src/backend/base/langbuilder/api/v1/users.py",
      "category": "API Endpoint",
      "function": "add_user",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"add_user_statechart\",\n  \"initial\": \"checking_superuser\",\n  \"context\": {\n    \"current_user\": \"Authenticated user\",\n    \"user_create\": \"UserCreate object\",\n    \"session\": \"Database session\",\n    \"db_user\": \"Created user object\"\n  },\n  \"states\": {\n    \"checking_superuser\": {\n      \"entry\": \"check_is_superuser\",\n      \"description\": \"Verify current_user.is_superuser == True\",\n      \"on\": {\n        \"IS_SUPERUSER\": \"checking_username_uniqueness\",\n        \"NOT_SUPERUSER\": \"error_forbidden\"\n      }\n    },\n    \"checking_username_uniqueness\": {\n      \"entry\": \"query_user_by_username\",\n      \"description\": \"SELECT * FROM user WHERE username = username\",\n      \"on\": {\n        \"USERNAME_EXISTS\": \"error_username_taken\",\n        \"USERNAME_AVAILABLE\": \"hashing_password\"\n      }\n    },\n    \"hashing_password\": {\n      \"entry\": \"hash_password\",\n      \"description\": \"Uses passlib with bcrypt/argon2 to hash password\",\n      \"on\": {\n        \"HASHED\": \"creating_user_object\"\n      }\n    },\n    \"creating_user_object\": {\n      \"entry\": \"instantiate_user_model\",\n      \"description\": \"User(**user_create.model_dump(), password=hashed_password)\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_user)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_user\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_user\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_user)\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"user\": \"UserRead object (password excluded)\"\n      }\n    },\n    \"error_forbidden\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_403\",\n      \"data\": {\n        \"error\": \"Only superusers can create users\"\n      }\n    },\n    \"error_username_taken\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Username already exists\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Database constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0017",
      "type": "logic",
      "name": "Get Current User Endpoint Handler",
      "description": "GET /users/whoami - Retrieve current user's data",
      "path": "src/backend/base/langbuilder/api/v1/users.py",
      "category": "API Endpoint",
      "function": "read_current_user",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"read_current_user_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for current_user\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"current_user\": \" current_user object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0018",
      "type": "logic",
      "name": "List All Users Endpoint Handler",
      "description": "GET /users/ - Retrieve list of users with pagination",
      "path": "src/backend/base/langbuilder/api/v1/users.py",
      "category": "API Endpoint",
      "function": "read_all_users",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"read_all_users_statechart\",\n  \"initial\": \"checking_superuser\",\n  \"context\": {\n    \"current_user\": \"Authenticated user\",\n    \"session\": \"Database session\"\n  },\n  \"states\": {\n    \"checking_superuser\": {\n      \"entry\": \"check_is_superuser\",\n      \"description\": \"Verify current_user.is_superuser == True\",\n      \"on\": {\n        \"IS_SUPERUSER\": \"building_query\",\n        \"NOT_SUPERUSER\": \"error_forbidden\"\n      }\n    },\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"select(User)\",\n      \"on\": {\n        \"QUERY_BUILT\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_all\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_all\": {\n      \"entry\": \"fetch_all_results\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"users\": \"List[UserRead]\"\n      }\n    },\n    \"error_forbidden\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_403\",\n      \"data\": {\n        \"error\": \"Only superusers can list all users\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database query error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0019",
      "type": "logic",
      "name": "Update User Endpoint Handler",
      "description": "PATCH /users/{user_id} - Update user data",
      "path": "src/backend/base/langbuilder/api/v1/users.py",
      "category": "API Endpoint",
      "function": "patch_user",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"patch_user_statechart\",\n  \"initial\": \"reading_user\",\n  \"context\": {\n    \"user_id\": \"UUID of user to update\",\n    \"user_update\": \"UserUpdate object\",\n    \"session\": \"Database session\",\n    \"db_user\": \"User object\"\n  },\n  \"states\": {\n    \"reading_user\": {\n      \"entry\": \"query_user_by_id\",\n      \"description\": \"SELECT * FROM user WHERE id = user_id\",\n      \"on\": {\n        \"FOUND\": \"checking_password_update\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"checking_password_update\": {\n      \"entry\": \"check_password_field\",\n      \"description\": \"Check if user_update.password is set\",\n      \"on\": {\n        \"PASSWORD_PROVIDED\": \"hashing_new_password\",\n        \"NO_PASSWORD\": \"updating_fields\"\n      }\n    },\n    \"hashing_new_password\": {\n      \"entry\": \"hash_password\",\n      \"description\": \"Uses passlib with bcrypt/argon2\",\n      \"on\": {\n        \"HASHED\": \"updating_fields_with_password\"\n      }\n    },\n    \"updating_fields_with_password\": {\n      \"entry\": \"update_user_fields\",\n      \"description\": \"Update fields including hashed password\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"updating_fields\": {\n      \"entry\": \"update_user_fields\",\n      \"description\": \"Update fields from user_update.model_dump(exclude_unset=True)\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_user)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_user\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_user\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_user)\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"user\": \"Updated UserRead object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"User not found\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Database constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0020",
      "type": "logic",
      "name": "Reset User Password Endpoint Handler",
      "description": "PATCH /users/{user_id}/reset-password - Reset user password",
      "path": "src/backend/base/langbuilder/api/v1/users.py",
      "category": "API Endpoint",
      "function": "reset_password",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"reset_password_statechart\",\n  \"initial\": \"checking_superuser\",\n  \"context\": {\n    \"current_user\": \"Authenticated user\",\n    \"user_id\": \"UUID of user to reset\",\n    \"password_reset\": \"PasswordReset object\",\n    \"session\": \"Database session\",\n    \"db_user\": \"Target user object\"\n  },\n  \"states\": {\n    \"checking_superuser\": {\n      \"entry\": \"check_is_superuser\",\n      \"description\": \"Verify current_user.is_superuser == True\",\n      \"on\": {\n        \"IS_SUPERUSER\": \"reading_target_user\",\n        \"NOT_SUPERUSER\": \"error_forbidden\"\n      }\n    },\n    \"reading_target_user\": {\n      \"entry\": \"query_user_by_id\",\n      \"description\": \"SELECT * FROM user WHERE id = user_id\",\n      \"on\": {\n        \"FOUND\": \"hashing_new_password\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"hashing_new_password\": {\n      \"entry\": \"hash_password\",\n      \"description\": \"Uses passlib with bcrypt/argon2\",\n      \"on\": {\n        \"HASHED\": \"updating_password\"\n      }\n    },\n    \"updating_password\": {\n      \"entry\": \"set_password_field\",\n      \"description\": \"db_user.password = hashed_password\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_user)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Password reset successfully\"\n      }\n    },\n    \"error_forbidden\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_403\",\n      \"data\": {\n        \"error\": \"Only superusers can reset passwords\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"User not found\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0021",
      "type": "logic",
      "name": "Delete User Endpoint Handler",
      "description": "DELETE /users/{user_id} - Delete user from database",
      "path": "src/backend/base/langbuilder/api/v1/users.py",
      "category": "API Endpoint",
      "function": "delete_user",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"delete_user_statechart\",\n  \"initial\": \"checking_superuser\",\n  \"context\": {\n    \"current_user\": \"Authenticated user\",\n    \"user_id\": \"UUID of user to delete\",\n    \"session\": \"Database session\",\n    \"db_user\": \"User object to delete\"\n  },\n  \"states\": {\n    \"checking_superuser\": {\n      \"entry\": \"check_is_superuser\",\n      \"description\": \"Verify current_user.is_superuser == True\",\n      \"on\": {\n        \"IS_SUPERUSER\": \"reading_target_user\",\n        \"NOT_SUPERUSER\": \"error_forbidden\"\n      }\n    },\n    \"reading_target_user\": {\n      \"entry\": \"query_user_by_id\",\n      \"description\": \"SELECT * FROM user WHERE id = user_id\",\n      \"on\": {\n        \"FOUND\": \"deleting_from_session\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"deleting_from_session\": {\n      \"entry\": \"session_delete\",\n      \"description\": \"await session.delete(db_user) - Cascades to ApiKey, Variable, Folder, Flow\",\n      \"on\": {\n        \"DELETED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"User deleted successfully (cascade delete to ApiKey, Variable, Folder, Flow)\"\n      }\n    },\n    \"error_forbidden\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_403\",\n      \"data\": {\n        \"error\": \"Only superusers can delete users\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"User not found\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0022",
      "type": "logic",
      "name": "User Login Endpoint Handler",
      "description": "POST /login - Authenticate user and generate access tokens",
      "path": "src/backend/base/langbuilder/api/v1/login.py",
      "category": "API Endpoint",
      "function": "login_to_get_access_token",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"login_to_get_access_token_statechart\",\n  \"initial\": \"validating_credentials\",\n  \"context\": {\n    \"credentials\": \"Username/password or token\",\n    \"user\": \"Authenticated user object\"\n  },\n  \"states\": {\n    \"validating_credentials\": {\n      \"entry\": \"validate_input\",\n      \"description\": \"Validate credential format\",\n      \"on\": {\n        \"VALID\": \"querying_user\",\n        \"INVALID\": \"error_invalid_credentials\"\n      }\n    },\n    \"querying_user\": {\n      \"entry\": \"find_user\",\n      \"description\": \"Query user from database\",\n      \"on\": {\n        \"FOUND\": \"verifying_password\",\n        \"NOT_FOUND\": \"error_invalid_credentials\"\n      }\n    },\n    \"verifying_password\": {\n      \"entry\": \"verify_password_hash\",\n      \"description\": \"Verify password with bcrypt/argon2\",\n      \"on\": {\n        \"VERIFIED\": \"generating_token\",\n        \"FAILED\": \"error_invalid_credentials\"\n      }\n    },\n    \"generating_token\": {\n      \"entry\": \"create_access_token\",\n      \"description\": \"Generate JWT or session token\",\n      \"on\": {\n        \"GENERATED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"token\": \"Access token\",\n        \"user\": \"User object\"\n      }\n    },\n    \"error_invalid_credentials\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_401\"\n    }\n  }\n}"
    },
    {
      "id": "nl0023",
      "type": "logic",
      "name": "Auto Login Endpoint Handler",
      "description": "GET /auto_login - Auto-login for enabled environments",
      "path": "src/backend/base/langbuilder/api/v1/login.py",
      "category": "API Endpoint",
      "function": "auto_login",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"auto_login_statechart\",\n  \"initial\": \"validating_credentials\",\n  \"context\": {\n    \"credentials\": \"Username/password or token\",\n    \"user\": \"Authenticated user object\"\n  },\n  \"states\": {\n    \"validating_credentials\": {\n      \"entry\": \"validate_input\",\n      \"description\": \"Validate credential format\",\n      \"on\": {\n        \"VALID\": \"querying_user\",\n        \"INVALID\": \"error_invalid_credentials\"\n      }\n    },\n    \"querying_user\": {\n      \"entry\": \"find_user\",\n      \"description\": \"Query user from database\",\n      \"on\": {\n        \"FOUND\": \"verifying_password\",\n        \"NOT_FOUND\": \"error_invalid_credentials\"\n      }\n    },\n    \"verifying_password\": {\n      \"entry\": \"verify_password_hash\",\n      \"description\": \"Verify password with bcrypt/argon2\",\n      \"on\": {\n        \"VERIFIED\": \"generating_token\",\n        \"FAILED\": \"error_invalid_credentials\"\n      }\n    },\n    \"generating_token\": {\n      \"entry\": \"create_access_token\",\n      \"description\": \"Generate JWT or session token\",\n      \"on\": {\n        \"GENERATED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"token\": \"Access token\",\n        \"user\": \"User object\"\n      }\n    },\n    \"error_invalid_credentials\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_401\"\n    }\n  }\n}"
    },
    {
      "id": "nl0024",
      "type": "logic",
      "name": "Refresh Token Endpoint Handler",
      "description": "POST /refresh - Refresh authentication tokens",
      "path": "src/backend/base/langbuilder/api/v1/login.py",
      "category": "API Endpoint",
      "function": "refresh_token",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"refresh_token_statechart\",\n  \"initial\": \"validating_credentials\",\n  \"context\": {\n    \"credentials\": \"Username/password or token\",\n    \"user\": \"Authenticated user object\"\n  },\n  \"states\": {\n    \"validating_credentials\": {\n      \"entry\": \"validate_input\",\n      \"description\": \"Validate credential format\",\n      \"on\": {\n        \"VALID\": \"querying_user\",\n        \"INVALID\": \"error_invalid_credentials\"\n      }\n    },\n    \"querying_user\": {\n      \"entry\": \"find_user\",\n      \"description\": \"Query user from database\",\n      \"on\": {\n        \"FOUND\": \"verifying_password\",\n        \"NOT_FOUND\": \"error_invalid_credentials\"\n      }\n    },\n    \"verifying_password\": {\n      \"entry\": \"verify_password_hash\",\n      \"description\": \"Verify password with bcrypt/argon2\",\n      \"on\": {\n        \"VERIFIED\": \"generating_token\",\n        \"FAILED\": \"error_invalid_credentials\"\n      }\n    },\n    \"generating_token\": {\n      \"entry\": \"create_access_token\",\n      \"description\": \"Generate JWT or session token\",\n      \"on\": {\n        \"GENERATED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"token\": \"Access token\",\n        \"user\": \"User object\"\n      }\n    },\n    \"error_invalid_credentials\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_401\"\n    }\n  }\n}"
    },
    {
      "id": "nl0025",
      "type": "logic",
      "name": "User Logout Endpoint Handler",
      "description": "POST /logout - Logout user and clear cookies",
      "path": "src/backend/base/langbuilder/api/v1/login.py",
      "category": "API Endpoint",
      "function": "logout",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"logout_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"logout\",\n      \"description\": \"POST /logout - Logout user and clear cookies\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0026",
      "type": "logic",
      "name": "Create Variable Endpoint Handler",
      "description": "POST /variables/ - Create a new variable",
      "path": "src/backend/base/langbuilder/api/v1/variable.py",
      "category": "API Endpoint",
      "function": "create_variable",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"create_variable_statechart\",\n  \"initial\": \"checking_value_encryption\",\n  \"context\": {\n    \"variable\": \"VariableCreate object\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_variable\": \"Created variable object\"\n  },\n  \"states\": {\n    \"checking_value_encryption\": {\n      \"entry\": \"check_value_field\",\n      \"description\": \"Check if variable.value needs encryption\",\n      \"on\": {\n        \"VALUE_PROVIDED\": \"encrypting_value\",\n        \"NO_VALUE\": \"creating_variable_object\"\n      }\n    },\n    \"encrypting_value\": {\n      \"entry\": \"encrypt_with_fernet\",\n      \"description\": \"Uses Fernet symmetric encryption to encrypt variable value\",\n      \"on\": {\n        \"ENCRYPTED\": \"creating_variable_object\"\n      }\n    },\n    \"creating_variable_object\": {\n      \"entry\": \"instantiate_variable_model\",\n      \"description\": \"Variable(**variable.model_dump(), user_id=user_id)\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_variable)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_variable\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_variable\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_variable)\",\n      \"on\": {\n        \"REFRESHED\": \"decrypting_value\"\n      }\n    },\n    \"decrypting_value\": {\n      \"entry\": \"decrypt_with_fernet\",\n      \"description\": \"Decrypt value before returning to client\",\n      \"on\": {\n        \"DECRYPTED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"variable\": \"VariableRead object (value decrypted)\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Variable name must be unique for user\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0027",
      "type": "logic",
      "name": "List Variables Endpoint Handler",
      "description": "GET /variables/ - Read all variables for user",
      "path": "src/backend/base/langbuilder/api/v1/variable.py",
      "category": "API Endpoint",
      "function": "read_variables",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"read_variables_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"select(Variable).where(Variable.user_id == user_id)\",\n      \"on\": {\n        \"QUERY_BUILT\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_all\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_all\": {\n      \"entry\": \"fetch_all_results\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"decrypting_values\"\n      }\n    },\n    \"decrypting_values\": {\n      \"entry\": \"decrypt_all_values\",\n      \"description\": \"Decrypt value field for each variable using Fernet\",\n      \"on\": {\n        \"DECRYPTED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"variables\": \"List[VariableRead] (values decrypted)\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database query error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0028",
      "type": "logic",
      "name": "Update Variable Endpoint Handler",
      "description": "PATCH /variables/{variable_id} - Update a variable",
      "path": "src/backend/base/langbuilder/api/v1/variable.py",
      "category": "API Endpoint",
      "function": "update_variable",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"update_variable_statechart\",\n  \"initial\": \"reading_existing_variable\",\n  \"context\": {\n    \"variable_id\": \"UUID\",\n    \"variable_update\": \"VariableUpdate object\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_variable\": \"Existing variable object\"\n  },\n  \"states\": {\n    \"reading_existing_variable\": {\n      \"entry\": \"query_variable_by_id\",\n      \"description\": \"SELECT * FROM variable WHERE id = variable_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"checking_value_update\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"checking_value_update\": {\n      \"entry\": \"check_value_field\",\n      \"description\": \"Check if variable_update.value is set\",\n      \"on\": {\n        \"VALUE_PROVIDED\": \"encrypting_new_value\",\n        \"NO_VALUE\": \"updating_fields\"\n      }\n    },\n    \"encrypting_new_value\": {\n      \"entry\": \"encrypt_with_fernet\",\n      \"description\": \"Uses Fernet symmetric encryption\",\n      \"on\": {\n        \"ENCRYPTED\": \"updating_fields_with_value\"\n      }\n    },\n    \"updating_fields_with_value\": {\n      \"entry\": \"update_variable_fields\",\n      \"description\": \"Update fields including encrypted value\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"updating_fields\": {\n      \"entry\": \"update_variable_fields\",\n      \"description\": \"Update fields from variable_update.model_dump(exclude_unset=True)\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_variable)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_variable\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_variable\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_variable)\",\n      \"on\": {\n        \"REFRESHED\": \"decrypting_value\"\n      }\n    },\n    \"decrypting_value\": {\n      \"entry\": \"decrypt_with_fernet\",\n      \"description\": \"Decrypt value before returning to client\",\n      \"on\": {\n        \"DECRYPTED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"variable\": \"Updated VariableRead object (value decrypted)\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Variable not found\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Variable name must be unique for user\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0029",
      "type": "logic",
      "name": "Delete Variable Endpoint Handler",
      "description": "DELETE /variables/{variable_id} - Delete a variable",
      "path": "src/backend/base/langbuilder/api/v1/variable.py",
      "category": "API Endpoint",
      "function": "delete_variable",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"delete_variable_statechart\",\n  \"initial\": \"reading_existing_variable\",\n  \"context\": {\n    \"variable_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_variable\": \"Variable object to delete\"\n  },\n  \"states\": {\n    \"reading_existing_variable\": {\n      \"entry\": \"query_variable_by_id\",\n      \"description\": \"SELECT * FROM variable WHERE id = variable_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"deleting_from_session\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"deleting_from_session\": {\n      \"entry\": \"session_delete\",\n      \"description\": \"await session.delete(db_variable)\",\n      \"on\": {\n        \"DELETED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Variable deleted successfully\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Variable not found\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0030",
      "type": "logic",
      "name": "Get Flow for File Operation",
      "description": "Get flow and verify user access for file operations",
      "path": "src/backend/base/langbuilder/api/v1/files.py",
      "category": "API Endpoint",
      "function": "get_flow",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_flow_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for flow\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flow\": \" flow object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0031",
      "type": "logic",
      "name": "Upload File Endpoint Handler",
      "description": "POST /files/upload/{flow_id} - Upload file for flow",
      "path": "src/backend/base/langbuilder/api/v1/files.py",
      "category": "API Endpoint",
      "function": "upload_file",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"upload_file_projects_statechart\",\n  \"initial\": \"reading_file_content\",\n  \"context\": {\n    \"file\": \"UploadFile object\",\n    \"folder_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"flows\": \"List of parsed flows\"\n  },\n  \"states\": {\n    \"reading_file_content\": {\n      \"entry\": \"read_uploaded_file\",\n      \"description\": \"await file.read()\",\n      \"on\": {\n        \"READ\": \"checking_file_type\",\n        \"ERROR\": \"error_file_read\"\n      }\n    },\n    \"checking_file_type\": {\n      \"entry\": \"check_content_type\",\n      \"description\": \"Check if file is JSON or ZIP\",\n      \"on\": {\n        \"JSON_FILE\": \"parsing_json\",\n        \"ZIP_FILE\": \"extracting_zip\",\n        \"UNKNOWN\": \"error_unsupported_format\"\n      }\n    },\n    \"parsing_json\": {\n      \"entry\": \"parse_json_content\",\n      \"description\": \"json.loads(content)\",\n      \"on\": {\n        \"SINGLE_FLOW\": \"creating_single_flow\",\n        \"FLOW_ARRAY\": \"creating_multiple_flows\",\n        \"ERROR\": \"error_invalid_json\"\n      }\n    },\n    \"extracting_zip\": {\n      \"entry\": \"extract_zip_contents\",\n      \"description\": \"ZipFile(BytesIO(content)) and read all .json files\",\n      \"on\": {\n        \"EXTRACTED\": \"creating_multiple_flows\",\n        \"ERROR\": \"error_invalid_zip\"\n      }\n    },\n    \"creating_single_flow\": {\n      \"entry\": \"create_flow\",\n      \"description\": \"Calls _new_flow(session, flow, user_id)\",\n      \"on\": {\n        \"CREATED\": \"assigning_folder\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"creating_multiple_flows\": {\n      \"entry\": \"create_flows\",\n      \"description\": \"Iterates and calls _new_flow for each flow\",\n      \"on\": {\n        \"CREATED\": \"assigning_folder\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"assigning_folder\": {\n      \"entry\": \"set_folder_id\",\n      \"description\": \"flow.folder_id = folder_id for all flows\",\n      \"on\": {\n        \"ASSIGNED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_flows\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_flows\": {\n      \"entry\": \"refresh_all_flows\",\n      \"description\": \"await session.refresh(flow) for each flow\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flows\": \"List[FlowRead] of uploaded flows\"\n      }\n    },\n    \"error_file_read\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Failed to read uploaded file\"\n      }\n    },\n    \"error_unsupported_format\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Unsupported file format (must be JSON or ZIP)\"\n      }\n    },\n    \"error_invalid_json\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Invalid JSON in uploaded file\"\n      }\n    },\n    \"error_invalid_zip\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Invalid ZIP file\"\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Flow validation error\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Database constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0032",
      "type": "logic",
      "name": "Download File Endpoint Handler",
      "description": "GET /files/download/{flow_id}/{file_name} - Download file",
      "path": "src/backend/base/langbuilder/api/v1/files.py",
      "category": "API Endpoint",
      "function": "download_file",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"download_file_statechart\",\n  \"initial\": \"reading_folder\",\n  \"context\": {\n    \"folder_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"zip_buffer\": \"BytesIO buffer\"\n  },\n  \"states\": {\n    \"reading_folder\": {\n      \"entry\": \"query_folder_by_id\",\n      \"description\": \"SELECT * FROM folder WHERE id = folder_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"loading_flows\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"loading_flows\": {\n      \"entry\": \"load_folder_flows\",\n      \"description\": \"SELECT * FROM flow WHERE folder_id = folder_id\",\n      \"on\": {\n        \"FLOWS_FOUND\": \"creating_memory_buffer\",\n        \"NO_FLOWS\": \"error_no_content\"\n      }\n    },\n    \"creating_memory_buffer\": {\n      \"entry\": \"create_bytes_io\",\n      \"description\": \"BytesIO() for in-memory ZIP\",\n      \"on\": {\n        \"CREATED\": \"creating_zip_file\"\n      }\n    },\n    \"creating_zip_file\": {\n      \"entry\": \"create_zipfile\",\n      \"description\": \"ZipFile(zip_buffer, 'w', ZIP_DEFLATED)\",\n      \"on\": {\n        \"CREATED\": \"iterating_flows\"\n      }\n    },\n    \"iterating_flows\": {\n      \"entry\": \"get_next_flow\",\n      \"on\": {\n        \"HAS_FLOW\": \"serializing_flow\",\n        \"NO_MORE_FLOWS\": \"closing_zip_file\"\n      }\n    },\n    \"serializing_flow\": {\n      \"entry\": \"serialize_to_json\",\n      \"description\": \"json.dumps(flow.model_dump(), indent=2)\",\n      \"on\": {\n        \"SERIALIZED\": \"adding_to_zip\"\n      }\n    },\n    \"adding_to_zip\": {\n      \"entry\": \"write_to_zip\",\n      \"description\": \"zipfile.writestr(f'{flow.name}.json', flow_json)\",\n      \"on\": {\n        \"ADDED\": \"iterating_flows\",\n        \"ERROR\": \"error_zip\"\n      }\n    },\n    \"closing_zip_file\": {\n      \"entry\": \"close_zip\",\n      \"description\": \"zipfile.close()\",\n      \"on\": {\n        \"CLOSED\": \"seeking_buffer\"\n      }\n    },\n    \"seeking_buffer\": {\n      \"entry\": \"seek_to_start\",\n      \"description\": \"zip_buffer.seek(0)\",\n      \"on\": {\n        \"SEEKED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"response\": \"StreamingResponse with ZIP file of all flows in folder\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Project (folder) not found\"\n      }\n    },\n    \"error_no_content\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_204\",\n      \"data\": {\n        \"message\": \"No flows in folder to download\"\n      }\n    },\n    \"error_zip\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Failed to create ZIP file\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0033",
      "type": "logic",
      "name": "Download Image Endpoint Handler",
      "description": "GET /files/images/{flow_id}/{file_name} - Download image file",
      "path": "src/backend/base/langbuilder/api/v1/files.py",
      "category": "API Endpoint",
      "function": "download_image",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"download_image_statechart\",\n  \"initial\": \"preparing_file\",\n  \"context\": {\n    \"file\": \"File object or path\",\n    \"content\": \"File content\"\n  },\n  \"states\": {\n    \"validating_file\": {\n      \"entry\": \"check_file_exists\",\n      \"description\": \"Verify file exists\",\n      \"on\": {\n        \"EXISTS\": \"reading_content\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"reading_content\": {\n      \"entry\": \"read_file\",\n      \"description\": \"Read file content\",\n      \"on\": {\n        \"READ\": \"complete\",\n        \"ERROR\": \"error_file_operation\"\n      }\n    },\n    \"processing_content\": {},\n    \"storing_data\": {},\n    \"preparing_file\": {\n      \"entry\": \"prepare_download\",\n      \"description\": \"Prepare file for download\",\n      \"on\": {\n        \"PREPARED\": \"reading_content\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"File operation result\"\n      }\n    },\n    \"error_invalid_file\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_invalid_content\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_file_operation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    },\n    \"error_storage\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0034",
      "type": "logic",
      "name": "Download Profile Picture Endpoint Handler",
      "description": "GET /files/profile_pictures/{folder_name}/{file_name}",
      "path": "src/backend/base/langbuilder/api/v1/files.py",
      "category": "API Endpoint",
      "function": "download_profile_picture",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"download_profile_picture_statechart\",\n  \"initial\": \"preparing_file\",\n  \"context\": {\n    \"file\": \"File object or path\",\n    \"content\": \"File content\"\n  },\n  \"states\": {\n    \"validating_file\": {\n      \"entry\": \"check_file_exists\",\n      \"description\": \"Verify file exists\",\n      \"on\": {\n        \"EXISTS\": \"reading_content\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"reading_content\": {\n      \"entry\": \"read_file\",\n      \"description\": \"Read file content\",\n      \"on\": {\n        \"READ\": \"complete\",\n        \"ERROR\": \"error_file_operation\"\n      }\n    },\n    \"processing_content\": {},\n    \"storing_data\": {},\n    \"preparing_file\": {\n      \"entry\": \"prepare_download\",\n      \"description\": \"Prepare file for download\",\n      \"on\": {\n        \"PREPARED\": \"reading_content\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"File operation result\"\n      }\n    },\n    \"error_invalid_file\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_invalid_content\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_file_operation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    },\n    \"error_storage\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0035",
      "type": "logic",
      "name": "List Profile Pictures Endpoint Handler",
      "description": "GET /files/profile_pictures/list",
      "path": "src/backend/base/langbuilder/api/v1/files.py",
      "category": "API Endpoint",
      "function": "list_profile_pictures",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"list_profile_pictures_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for profile_pictures\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_all\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"profile_pictures\": \"List of profile_pictures objects\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0036",
      "type": "logic",
      "name": "List Files Endpoint Handler",
      "description": "GET /files/list/{flow_id} - List files for flow",
      "path": "src/backend/base/langbuilder/api/v1/files.py",
      "category": "API Endpoint",
      "function": "list_files",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"list_files_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for files\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_all\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"files\": \"List of files objects\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0037",
      "type": "logic",
      "name": "Delete File Endpoint Handler",
      "description": "DELETE /files/delete/{flow_id}/{file_name} - Delete file",
      "path": "src/backend/base/langbuilder/api/v1/files.py",
      "category": "API Endpoint",
      "function": "delete_file",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"delete_file_statechart\",\n  \"initial\": \"reading_existing\",\n  \"context\": {\n    \"entity_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_file\": \"file object to delete\"\n  },\n  \"states\": {\n    \"reading_existing\": {\n      \"entry\": \"query_by_id\",\n      \"description\": \"SELECT * FROM file WHERE id = entity_id\",\n      \"on\": {\n        \"FOUND\": \"checking_permissions\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"checking_permissions\": {\n      \"entry\": \"verify_ownership\",\n      \"description\": \"Check user has permission to delete\",\n      \"on\": {\n        \"AUTHORIZED\": \"deleting_from_session\",\n        \"UNAUTHORIZED\": \"error_forbidden\"\n      }\n    },\n    \"deleting_from_session\": {\n      \"entry\": \"session_delete\",\n      \"description\": \"await session.delete(db_file)\",\n      \"on\": {\n        \"DELETED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"file deleted successfully\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_forbidden\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_403\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0038",
      "type": "logic",
      "name": "List API Keys Endpoint Handler",
      "description": "GET /api_key/ - Get all API keys for user",
      "path": "src/backend/base/langbuilder/api/v1/api_key.py",
      "category": "API Endpoint",
      "function": "get_api_keys_route",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_api_keys_route_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"select(ApiKey).where(ApiKey.user_id == user_id)\",\n      \"on\": {\n        \"QUERY_BUILT\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_all\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_all\": {\n      \"entry\": \"fetch_all_results\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"masking_keys\"\n      }\n    },\n    \"masking_keys\": {\n      \"entry\": \"mask_api_key_values\",\n      \"description\": \"Show only first/last characters: 'sk-****xyz'\",\n      \"on\": {\n        \"MASKED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"api_keys\": \"List[ApiKeyRead] (keys masked)\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database query error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0039",
      "type": "logic",
      "name": "Create API Key Endpoint Handler",
      "description": "POST /api_key/ - Create new API key",
      "path": "src/backend/base/langbuilder/api/v1/api_key.py",
      "category": "API Endpoint",
      "function": "create_api_key_route",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"create_api_key_route_statechart\",\n  \"initial\": \"generating_api_key\",\n  \"context\": {\n    \"api_key_create\": \"ApiKeyCreate object\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"api_key_value\": \"Generated key string\",\n    \"db_api_key\": \"Created ApiKey object\"\n  },\n  \"states\": {\n    \"generating_api_key\": {\n      \"entry\": \"generate_key\",\n      \"description\": \"secrets.token_urlsafe(32) and prepend 'sk-'\",\n      \"on\": {\n        \"GENERATED\": \"creating_api_key_object\"\n      }\n    },\n    \"creating_api_key_object\": {\n      \"entry\": \"instantiate_api_key_model\",\n      \"description\": \"ApiKey(name=name, api_key=api_key_value, user_id=user_id)\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_api_key)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_api_key\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_api_key\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_api_key)\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"api_key\": \"ApiKeyRead object with full key (only time shown unmasked)\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"API key name must be unique for user\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0040",
      "type": "logic",
      "name": "Delete API Key Endpoint Handler",
      "description": "DELETE /api_key/{api_key_id} - Delete API key",
      "path": "src/backend/base/langbuilder/api/v1/api_key.py",
      "category": "API Endpoint",
      "function": "delete_api_key_route",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"delete_api_key_route_statechart\",\n  \"initial\": \"reading_api_key\",\n  \"context\": {\n    \"api_key_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_api_key\": \"ApiKey object to delete\"\n  },\n  \"states\": {\n    \"reading_api_key\": {\n      \"entry\": \"query_api_key_by_id\",\n      \"description\": \"SELECT * FROM api_key WHERE id = api_key_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"deleting_from_session\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"deleting_from_session\": {\n      \"entry\": \"session_delete\",\n      \"description\": \"await session.delete(db_api_key)\",\n      \"on\": {\n        \"DELETED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"API key deleted successfully\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"API key not found\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0041",
      "type": "logic",
      "name": "Save Store API Key Endpoint Handler",
      "description": "POST /api_key/store - Save encrypted store API key",
      "path": "src/backend/base/langbuilder/api/v1/api_key.py",
      "category": "API Endpoint",
      "function": "save_store_api_key",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"save_store_api_key_statechart\",\n  \"initial\": \"encrypting_api_key\",\n  \"context\": {\n    \"store_api_key\": \"StoreApiKeyCreate object\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"encrypted_key\": \"Encrypted API key value\"\n  },\n  \"states\": {\n    \"encrypting_api_key\": {\n      \"entry\": \"encrypt_with_fernet\",\n      \"description\": \"Uses Fernet symmetric encryption for store API key\",\n      \"on\": {\n        \"ENCRYPTED\": \"checking_existing_key\"\n      }\n    },\n    \"checking_existing_key\": {\n      \"entry\": \"query_store_api_key\",\n      \"description\": \"SELECT * FROM store_api_key WHERE user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"updating_existing_key\",\n        \"NOT_FOUND\": \"creating_new_key\"\n      }\n    },\n    \"updating_existing_key\": {\n      \"entry\": \"update_api_key_value\",\n      \"description\": \"db_key.api_key = encrypted_key\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"creating_new_key\": {\n      \"entry\": \"instantiate_store_api_key\",\n      \"description\": \"StoreApiKey(api_key=encrypted_key, user_id=user_id)\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_key)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Store API key saved successfully (encrypted)\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0042",
      "type": "logic",
      "name": "Create Project Endpoint Handler",
      "description": "POST /projects/ - Create a new project/folder",
      "path": "src/backend/base/langbuilder/api/v1/projects.py",
      "category": "API Endpoint",
      "function": "create_project",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"create_project_statechart\",\n  \"initial\": \"checking_unique_name\",\n  \"context\": {\n    \"folder_create\": \"FolderCreate object (project)\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_folder\": \"Created folder object\"\n  },\n  \"states\": {\n    \"checking_unique_name\": {\n      \"entry\": \"query_folder_by_name\",\n      \"description\": \"SELECT * FROM folder WHERE name = name AND user_id = user_id\",\n      \"on\": {\n        \"NAME_EXISTS\": \"generating_unique_name\",\n        \"NAME_AVAILABLE\": \"creating_folder_object\"\n      }\n    },\n    \"generating_unique_name\": {\n      \"entry\": \"query_numbered_folders\",\n      \"description\": \"SELECT * FROM folder WHERE name LIKE '{name} (%)' AND user_id = user_id\",\n      \"on\": {\n        \"NUMBERS_FOUND\": \"appending_number\",\n        \"NO_NUMBERS\": \"appending_first_number\"\n      }\n    },\n    \"appending_number\": {\n      \"entry\": \"append_max_plus_one\",\n      \"description\": \"folder.name = f\\\"{folder.name} ({max(numbers) + 1})\\\"\",\n      \"on\": {\n        \"APPENDED\": \"creating_folder_object\"\n      }\n    },\n    \"appending_first_number\": {\n      \"entry\": \"append_one\",\n      \"description\": \"folder.name = f\\\"{folder.name} (1)\\\"\",\n      \"on\": {\n        \"APPENDED\": \"creating_folder_object\"\n      }\n    },\n    \"creating_folder_object\": {\n      \"entry\": \"instantiate_folder_model\",\n      \"description\": \"Folder(**folder_create.model_dump(), user_id=user_id)\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_folder)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_folder\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_folder\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_folder)\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"folder\": \"FolderRead object (project)\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Database constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0043",
      "type": "logic",
      "name": "List Projects Endpoint Handler",
      "description": "GET /projects/ - Read all projects for user",
      "path": "src/backend/base/langbuilder/api/v1/projects.py",
      "category": "API Endpoint",
      "function": "read_projects",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"read_projects_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"select(Folder).where(Folder.user_id == user_id)\",\n      \"on\": {\n        \"QUERY_BUILT\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_all\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_all\": {\n      \"entry\": \"fetch_all_results\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"loading_flow_associations\"\n      }\n    },\n    \"loading_flow_associations\": {\n      \"entry\": \"load_related_flows\",\n      \"description\": \"For each folder, load associated flows via selectinload\",\n      \"on\": {\n        \"LOADED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"folders\": \"List[FolderRead] with flow counts\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database query error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0044",
      "type": "logic",
      "name": "Get Project by ID Endpoint Handler",
      "description": "GET /projects/{project_id} - Read specific project with flows",
      "path": "src/backend/base/langbuilder/api/v1/projects.py",
      "category": "API Endpoint",
      "function": "read_project",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"read_project_statechart\",\n  \"initial\": \"reading_folder\",\n  \"context\": {\n    \"folder_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\"\n  },\n  \"states\": {\n    \"reading_folder\": {\n      \"entry\": \"query_folder_by_id\",\n      \"description\": \"SELECT * FROM folder WHERE id = folder_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"loading_flows\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"loading_flows\": {\n      \"entry\": \"load_related_flows\",\n      \"description\": \"Load all flows associated with this folder\",\n      \"on\": {\n        \"LOADED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"folder\": \"FolderRead with associated flows\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Project (folder) not found\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0045",
      "type": "logic",
      "name": "Update Project Endpoint Handler",
      "description": "PATCH /projects/{project_id} - Update project data",
      "path": "src/backend/base/langbuilder/api/v1/projects.py",
      "category": "API Endpoint",
      "function": "update_project",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"update_project_statechart\",\n  \"initial\": \"reading_folder\",\n  \"context\": {\n    \"folder_id\": \"UUID\",\n    \"folder_update\": \"FolderUpdate object\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_folder\": \"Folder object\"\n  },\n  \"states\": {\n    \"reading_folder\": {\n      \"entry\": \"query_folder_by_id\",\n      \"description\": \"SELECT * FROM folder WHERE id = folder_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"updating_fields\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"updating_fields\": {\n      \"entry\": \"update_folder_fields\",\n      \"description\": \"Update db_folder with folder_update.model_dump(exclude_unset=True)\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_folder)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_folder\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_folder\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_folder)\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"folder\": \"Updated FolderRead object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Project (folder) not found\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Database constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0046",
      "type": "logic",
      "name": "Delete Project Endpoint Handler",
      "description": "DELETE /projects/{project_id} - Delete project and its flows",
      "path": "src/backend/base/langbuilder/api/v1/projects.py",
      "category": "API Endpoint",
      "function": "delete_project",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"delete_project_statechart\",\n  \"initial\": \"reading_folder\",\n  \"context\": {\n    \"folder_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_folder\": \"Folder object to delete\"\n  },\n  \"states\": {\n    \"reading_folder\": {\n      \"entry\": \"query_folder_by_id\",\n      \"description\": \"SELECT * FROM folder WHERE id = folder_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"checking_flows\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"checking_flows\": {\n      \"entry\": \"count_associated_flows\",\n      \"description\": \"Check if folder has associated flows\",\n      \"on\": {\n        \"HAS_FLOWS\": \"moving_flows_to_default\",\n        \"NO_FLOWS\": \"deleting_folder\"\n      }\n    },\n    \"moving_flows_to_default\": {\n      \"entry\": \"reassign_flows\",\n      \"description\": \"UPDATE flow SET folder_id = default_folder_id WHERE folder_id = folder_id\",\n      \"on\": {\n        \"MOVED\": \"deleting_folder\",\n        \"ERROR\": \"error_flow_reassignment\"\n      }\n    },\n    \"deleting_folder\": {\n      \"entry\": \"session_delete\",\n      \"description\": \"await session.delete(db_folder)\",\n      \"on\": {\n        \"DELETED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Project (folder) deleted successfully\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Project (folder) not found\"\n      }\n    },\n    \"error_flow_reassignment\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Failed to reassign flows to default folder\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0047",
      "type": "logic",
      "name": "Download Project Endpoint Handler",
      "description": "GET /projects/download/{project_id} - Download project as zip",
      "path": "src/backend/base/langbuilder/api/v1/projects.py",
      "category": "API Endpoint",
      "function": "download_file",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"download_file_statechart\",\n  \"initial\": \"reading_folder\",\n  \"context\": {\n    \"folder_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"zip_buffer\": \"BytesIO buffer\"\n  },\n  \"states\": {\n    \"reading_folder\": {\n      \"entry\": \"query_folder_by_id\",\n      \"description\": \"SELECT * FROM folder WHERE id = folder_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"loading_flows\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"loading_flows\": {\n      \"entry\": \"load_folder_flows\",\n      \"description\": \"SELECT * FROM flow WHERE folder_id = folder_id\",\n      \"on\": {\n        \"FLOWS_FOUND\": \"creating_memory_buffer\",\n        \"NO_FLOWS\": \"error_no_content\"\n      }\n    },\n    \"creating_memory_buffer\": {\n      \"entry\": \"create_bytes_io\",\n      \"description\": \"BytesIO() for in-memory ZIP\",\n      \"on\": {\n        \"CREATED\": \"creating_zip_file\"\n      }\n    },\n    \"creating_zip_file\": {\n      \"entry\": \"create_zipfile\",\n      \"description\": \"ZipFile(zip_buffer, 'w', ZIP_DEFLATED)\",\n      \"on\": {\n        \"CREATED\": \"iterating_flows\"\n      }\n    },\n    \"iterating_flows\": {\n      \"entry\": \"get_next_flow\",\n      \"on\": {\n        \"HAS_FLOW\": \"serializing_flow\",\n        \"NO_MORE_FLOWS\": \"closing_zip_file\"\n      }\n    },\n    \"serializing_flow\": {\n      \"entry\": \"serialize_to_json\",\n      \"description\": \"json.dumps(flow.model_dump(), indent=2)\",\n      \"on\": {\n        \"SERIALIZED\": \"adding_to_zip\"\n      }\n    },\n    \"adding_to_zip\": {\n      \"entry\": \"write_to_zip\",\n      \"description\": \"zipfile.writestr(f'{flow.name}.json', flow_json)\",\n      \"on\": {\n        \"ADDED\": \"iterating_flows\",\n        \"ERROR\": \"error_zip\"\n      }\n    },\n    \"closing_zip_file\": {\n      \"entry\": \"close_zip\",\n      \"description\": \"zipfile.close()\",\n      \"on\": {\n        \"CLOSED\": \"seeking_buffer\"\n      }\n    },\n    \"seeking_buffer\": {\n      \"entry\": \"seek_to_start\",\n      \"description\": \"zip_buffer.seek(0)\",\n      \"on\": {\n        \"SEEKED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"response\": \"StreamingResponse with ZIP file of all flows in folder\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Project (folder) not found\"\n      }\n    },\n    \"error_no_content\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_204\",\n      \"data\": {\n        \"message\": \"No flows in folder to download\"\n      }\n    },\n    \"error_zip\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Failed to create ZIP file\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0048",
      "type": "logic",
      "name": "Upload Project Endpoint Handler",
      "description": "POST /projects/upload/ - Upload project from file",
      "path": "src/backend/base/langbuilder/api/v1/projects.py",
      "category": "API Endpoint",
      "function": "upload_file",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"upload_file_projects_statechart\",\n  \"initial\": \"reading_file_content\",\n  \"context\": {\n    \"file\": \"UploadFile object\",\n    \"folder_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"flows\": \"List of parsed flows\"\n  },\n  \"states\": {\n    \"reading_file_content\": {\n      \"entry\": \"read_uploaded_file\",\n      \"description\": \"await file.read()\",\n      \"on\": {\n        \"READ\": \"checking_file_type\",\n        \"ERROR\": \"error_file_read\"\n      }\n    },\n    \"checking_file_type\": {\n      \"entry\": \"check_content_type\",\n      \"description\": \"Check if file is JSON or ZIP\",\n      \"on\": {\n        \"JSON_FILE\": \"parsing_json\",\n        \"ZIP_FILE\": \"extracting_zip\",\n        \"UNKNOWN\": \"error_unsupported_format\"\n      }\n    },\n    \"parsing_json\": {\n      \"entry\": \"parse_json_content\",\n      \"description\": \"json.loads(content)\",\n      \"on\": {\n        \"SINGLE_FLOW\": \"creating_single_flow\",\n        \"FLOW_ARRAY\": \"creating_multiple_flows\",\n        \"ERROR\": \"error_invalid_json\"\n      }\n    },\n    \"extracting_zip\": {\n      \"entry\": \"extract_zip_contents\",\n      \"description\": \"ZipFile(BytesIO(content)) and read all .json files\",\n      \"on\": {\n        \"EXTRACTED\": \"creating_multiple_flows\",\n        \"ERROR\": \"error_invalid_zip\"\n      }\n    },\n    \"creating_single_flow\": {\n      \"entry\": \"create_flow\",\n      \"description\": \"Calls _new_flow(session, flow, user_id)\",\n      \"on\": {\n        \"CREATED\": \"assigning_folder\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"creating_multiple_flows\": {\n      \"entry\": \"create_flows\",\n      \"description\": \"Iterates and calls _new_flow for each flow\",\n      \"on\": {\n        \"CREATED\": \"assigning_folder\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"assigning_folder\": {\n      \"entry\": \"set_folder_id\",\n      \"description\": \"flow.folder_id = folder_id for all flows\",\n      \"on\": {\n        \"ASSIGNED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_flows\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_flows\": {\n      \"entry\": \"refresh_all_flows\",\n      \"description\": \"await session.refresh(flow) for each flow\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"flows\": \"List[FlowRead] of uploaded flows\"\n      }\n    },\n    \"error_file_read\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Failed to read uploaded file\"\n      }\n    },\n    \"error_unsupported_format\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Unsupported file format (must be JSON or ZIP)\"\n      }\n    },\n    \"error_invalid_json\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Invalid JSON in uploaded file\"\n      }\n    },\n    \"error_invalid_zip\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Invalid ZIP file\"\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\",\n      \"data\": {\n        \"error\": \"Flow validation error\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Database constraint violation\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0049",
      "type": "logic",
      "name": "Get User Store API Key Logic",
      "description": "Get and decrypt user's store API key",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "get_user_store_api_key",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_user_store_api_key_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for user_store_api_key\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"user_store_api_key\": \" user_store_api_key object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0050",
      "type": "logic",
      "name": "Get Optional Store API Key Logic",
      "description": "Get store API key with optional fallback",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "get_optional_user_store_api_key",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_optional_user_store_api_key_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for optional_user_store_api_key\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"optional_user_store_api_key\": \" optional_user_store_api_key object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0051",
      "type": "logic",
      "name": "Check Store Enabled Endpoint Handler",
      "description": "GET /store/check/ - Check if store is enabled",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "check_if_store_is_enabled",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"check_if_store_is_enabled_statechart\",\n  \"initial\": \"performing_check\",\n  \"context\": {\n    \"target\": \"Item to validate\",\n    \"validation_result\": \"Boolean result\"\n  },\n  \"states\": {\n    \"performing_check\": {\n      \"entry\": \"run_validation\",\n      \"description\": \"Perform validation: check_if_store_is_enabled\",\n      \"on\": {\n        \"VALID\": \"complete_valid\",\n        \"INVALID\": \"complete_invalid\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"complete_valid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": true\n      }\n    },\n    \"complete_invalid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": false\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0052",
      "type": "logic",
      "name": "Validate Store API Key Endpoint Handler",
      "description": "GET /store/check/api_key",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "check_if_store_has_api_key",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"check_if_store_has_api_key_statechart\",\n  \"initial\": \"performing_check\",\n  \"context\": {\n    \"target\": \"Item to validate\",\n    \"validation_result\": \"Boolean result\"\n  },\n  \"states\": {\n    \"performing_check\": {\n      \"entry\": \"run_validation\",\n      \"description\": \"Perform validation: check_if_store_has_api_key\",\n      \"on\": {\n        \"VALID\": \"complete_valid\",\n        \"INVALID\": \"complete_invalid\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"complete_valid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": true\n      }\n    },\n    \"complete_invalid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": false\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0053",
      "type": "logic",
      "name": "Share Component Endpoint Handler",
      "description": "POST /store/components/ - Share component to store",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "share_component",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"share_component_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"share_component\",\n      \"description\": \"POST /store/components/ - Share component to store\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0054",
      "type": "logic",
      "name": "Update Shared Component Endpoint Handler",
      "description": "PATCH /store/components/{component_id}",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "update_shared_component",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"update_shared_component_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"update_shared_component\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0055",
      "type": "logic",
      "name": "Search Components Endpoint Handler",
      "description": "GET /store/components/ - Get components with filters",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "get_components",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_components_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for components\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_all\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"components\": \"List of components objects\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0056",
      "type": "logic",
      "name": "Download Component Endpoint Handler",
      "description": "GET /store/components/{component_id}",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "download_component",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"download_component_statechart\",\n  \"initial\": \"preparing_file\",\n  \"context\": {\n    \"file\": \"File object or path\",\n    \"content\": \"File content\"\n  },\n  \"states\": {\n    \"validating_file\": {\n      \"entry\": \"check_file_exists\",\n      \"description\": \"Verify file exists\",\n      \"on\": {\n        \"EXISTS\": \"reading_content\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"reading_content\": {\n      \"entry\": \"read_file\",\n      \"description\": \"Read file content\",\n      \"on\": {\n        \"READ\": \"complete\",\n        \"ERROR\": \"error_file_operation\"\n      }\n    },\n    \"processing_content\": {},\n    \"storing_data\": {},\n    \"preparing_file\": {\n      \"entry\": \"prepare_download\",\n      \"description\": \"Prepare file for download\",\n      \"on\": {\n        \"PREPARED\": \"reading_content\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"File operation result\"\n      }\n    },\n    \"error_invalid_file\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_invalid_content\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_file_operation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    },\n    \"error_storage\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0057",
      "type": "logic",
      "name": "Get Store Tags Endpoint Handler",
      "description": "GET /store/tags - Get all available tags",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "get_tags",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_tags_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for tags\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_all\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"tags\": \"List of tags objects\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0058",
      "type": "logic",
      "name": "Get User Liked Components Endpoint Handler",
      "description": "GET /store/users/likes",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "get_list_of_components_liked_by_user",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_list_of_components_liked_by_user_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for of_components_liked_by_user\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"of_components_liked_by_user\": \" of_components_liked_by_user object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0059",
      "type": "logic",
      "name": "Like Component Endpoint Handler",
      "description": "POST /store/users/likes/{component_id}",
      "path": "src/backend/base/langbuilder/api/v1/store.py",
      "category": "API Endpoint",
      "function": "like_component",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"like_component_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"like_component\",\n      \"description\": \"POST /store/users/likes/{component_id}\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0060",
      "type": "logic",
      "name": "Get Vertices Order Endpoint Handler",
      "description": "POST /build/{flow_id}/vertices (deprecated)",
      "path": "src/backend/base/langbuilder/api/v1/chat.py",
      "category": "API Endpoint",
      "function": "retrieve_vertices_order",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"retrieve_vertices_order_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for vertices_order\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"vertices_order\": \" vertices_order object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0061",
      "type": "logic",
      "name": "Build Flow Endpoint Handler",
      "description": "POST /build/{flow_id}/flow - Build and process a flow",
      "path": "src/backend/base/langbuilder/api/v1/chat.py",
      "category": "API Endpoint",
      "function": "build_flow",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"build_flow_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute build_flow\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0062",
      "type": "logic",
      "name": "Get Build Events Endpoint Handler",
      "description": "GET /build/{job_id}/events - Get events for build job",
      "path": "src/backend/base/langbuilder/api/v1/chat.py",
      "category": "API Endpoint",
      "function": "get_build_events",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_build_events_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for build_events\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_all\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"build_events\": \"List of build_events objects\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0063",
      "type": "logic",
      "name": "Cancel Build Endpoint Handler",
      "description": "POST /build/{job_id}/cancel - Cancel a build job",
      "path": "src/backend/base/langbuilder/api/v1/chat.py",
      "category": "API Endpoint",
      "function": "cancel_build",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"cancel_build_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute cancel_build\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0064",
      "type": "logic",
      "name": "Build Single Vertex Endpoint Handler",
      "description": "POST /build/{flow_id}/vertices/{vertex_id} (deprecated)",
      "path": "src/backend/base/langbuilder/api/v1/chat.py",
      "category": "API Endpoint",
      "function": "build_vertex",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"build_vertex_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute build_vertex\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0065",
      "type": "logic",
      "name": "Stream Vertex Output Logic",
      "description": "Stream vertex output data",
      "path": "src/backend/base/langbuilder/api/v1/chat.py",
      "category": "API Endpoint",
      "function": "_stream_vertex",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_stream_vertex_statechart\",\n  \"initial\": \"initializing_stream\",\n  \"context\": {\n    \"stream\": \"Event stream\",\n    \"client\": \"Client connection\"\n  },\n  \"states\": {\n    \"initializing_stream\": {\n      \"entry\": \"setup_event_stream\",\n      \"description\": \"Initialize SSE or websocket stream\",\n      \"on\": {\n        \"INITIALIZED\": \"streaming_events\"\n      }\n    },\n    \"streaming_events\": {\n      \"entry\": \"generate_events\",\n      \"description\": \"Yield events to client\",\n      \"on\": {\n        \"EVENT_SENT\": \"streaming_events\",\n        \"COMPLETE\": \"closing_stream\",\n        \"ERROR\": \"error_stream\"\n      }\n    },\n    \"closing_stream\": {\n      \"entry\": \"cleanup_stream\",\n      \"description\": \"Close stream and cleanup resources\",\n      \"on\": {\n        \"CLOSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error_stream\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_stream_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0066",
      "type": "logic",
      "name": "Stream Vertex Build Endpoint Handler",
      "description": "GET /build/{flow_id}/{vertex_id}/stream (deprecated)",
      "path": "src/backend/base/langbuilder/api/v1/chat.py",
      "category": "API Endpoint",
      "function": "build_vertex_stream",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"build_vertex_stream_statechart\",\n  \"initial\": \"initializing_stream\",\n  \"context\": {\n    \"stream\": \"Event stream\",\n    \"client\": \"Client connection\"\n  },\n  \"states\": {\n    \"initializing_stream\": {\n      \"entry\": \"setup_event_stream\",\n      \"description\": \"Initialize SSE or websocket stream\",\n      \"on\": {\n        \"INITIALIZED\": \"streaming_events\"\n      }\n    },\n    \"streaming_events\": {\n      \"entry\": \"generate_events\",\n      \"description\": \"Yield events to client\",\n      \"on\": {\n        \"EVENT_SENT\": \"streaming_events\",\n        \"COMPLETE\": \"closing_stream\",\n        \"ERROR\": \"error_stream\"\n      }\n    },\n    \"closing_stream\": {\n      \"entry\": \"cleanup_stream\",\n      \"description\": \"Close stream and cleanup resources\",\n      \"on\": {\n        \"CLOSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error_stream\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_stream_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0067",
      "type": "logic",
      "name": "Build and Stream Flow Logic",
      "description": "Build flow and stream results",
      "path": "src/backend/base/langbuilder/api/v1/chat.py",
      "category": "API Endpoint",
      "function": "build_flow_and_stream",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"build_flow_and_stream_statechart\",\n  \"initial\": \"initializing_stream\",\n  \"context\": {\n    \"stream\": \"Event stream\",\n    \"client\": \"Client connection\"\n  },\n  \"states\": {\n    \"initializing_stream\": {\n      \"entry\": \"setup_event_stream\",\n      \"description\": \"Initialize SSE or websocket stream\",\n      \"on\": {\n        \"INITIALIZED\": \"streaming_events\"\n      }\n    },\n    \"streaming_events\": {\n      \"entry\": \"generate_events\",\n      \"description\": \"Yield events to client\",\n      \"on\": {\n        \"EVENT_SENT\": \"streaming_events\",\n        \"COMPLETE\": \"closing_stream\",\n        \"ERROR\": \"error_stream\"\n      }\n    },\n    \"closing_stream\": {\n      \"entry\": \"cleanup_stream\",\n      \"description\": \"Close stream and cleanup resources\",\n      \"on\": {\n        \"CLOSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error_stream\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_stream_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0068",
      "type": "logic",
      "name": "Build Public Flow Endpoint Handler",
      "description": "POST /build_public_tmp/{flow_id}/flow",
      "path": "src/backend/base/langbuilder/api/v1/chat.py",
      "category": "API Endpoint",
      "function": "build_public_tmp",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"build_public_tmp_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute build_public_tmp\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0069",
      "type": "logic",
      "name": "Get MCP Progress Notifications Setting",
      "description": "Get MCP progress notifications setting",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "get_enable_progress_notifications",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_enable_progress_notifications_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for enable_progress_notifications\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_all\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"enable_progress_notifications\": \"List of enable_progress_notifications objects\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0070",
      "type": "logic",
      "name": "Handle MCP List Prompts",
      "description": "Handle listing prompts for MCP server",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "handle_list_prompts",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"handle_list_prompts_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"handle_list_prompts\",\n      \"description\": \"Handle listing prompts for MCP server\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0071",
      "type": "logic",
      "name": "Handle MCP Global Resources",
      "description": "Handle listing resources for global MCP server",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "handle_global_resources",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"handle_global_resources_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"handle_global_resources\",\n      \"description\": \"Handle listing resources for global MCP server\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0072",
      "type": "logic",
      "name": "Handle MCP Read Resource",
      "description": "Handle resource read requests for MCP server",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "handle_global_read_resource",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"handle_global_read_resource_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"handle_global_read_resource\",\n      \"description\": \"Handle resource read requests for MCP server\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0073",
      "type": "logic",
      "name": "Handle MCP List Tools",
      "description": "Handle listing tools for MCP server",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "handle_global_tools",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"handle_global_tools_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"handle_global_tools\",\n      \"description\": \"Handle listing tools for MCP server\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0074",
      "type": "logic",
      "name": "Handle MCP Call Tool",
      "description": "Handle tool execution requests for MCP server",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "handle_global_call_tool",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"handle_global_call_tool_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"handle_global_call_tool\",\n      \"description\": \"Handle tool execution requests for MCP server\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0075",
      "type": "logic",
      "name": "Find MCP Validation Error",
      "description": "Search for ValidationError in exception chain",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "find_validation_error",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"find_validation_error_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"find_validation_error\",\n      \"description\": \"Search for ValidationError in exception chain\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0076",
      "type": "logic",
      "name": "MCP Health Check Endpoint Handler",
      "description": "HEAD /mcp/sse - Health check endpoint",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "im_alive",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"im_alive_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"im_alive\",\n      \"description\": \"HEAD /mcp/sse - Health check endpoint\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0077",
      "type": "logic",
      "name": "MCP SSE Connection Endpoint Handler",
      "description": "GET /mcp/sse - Handle SSE connection for MCP",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "handle_sse",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"handle_sse_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"handle_sse\",\n      \"description\": \"GET /mcp/sse - Handle SSE connection for MCP\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0078",
      "type": "logic",
      "name": "MCP Messages Endpoint Handler",
      "description": "POST /mcp/ - Handle MCP messages",
      "path": "src/backend/base/langbuilder/api/v1/mcp.py",
      "category": "API Endpoint",
      "function": "handle_messages",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"handle_messages_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"handle_messages\",\n      \"description\": \"POST /mcp/ - Handle MCP messages\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0079",
      "type": "logic",
      "name": "Initialize Database Service",
      "description": "Initialize DatabaseService with connection settings",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "__init__",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"__init___statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0080",
      "type": "logic",
      "name": "Initialize Alembic Log File",
      "description": "Initialize alembic log file directory",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "initialize_alembic_log_file",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"initialize_alembic_log_file_statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0081",
      "type": "logic",
      "name": "Reload Database Engine",
      "description": "Reload database engine with new settings",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "reload_engine",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"reload_engine_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"reload_engine\",\n      \"description\": \"Reload database engine with new settings\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0082",
      "type": "logic",
      "name": "Sanitize Database URL",
      "description": "Sanitize and normalize database URL",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "_sanitize_database_url",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_sanitize_database_url_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_sanitize_database_url\",\n      \"description\": \"Sanitize and normalize database URL\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0083",
      "type": "logic",
      "name": "Build Connection Kwargs",
      "description": "Build connection kwargs from settings",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "_build_connection_kwargs",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_build_connection_kwargs_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute _build_connection_kwargs\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0084",
      "type": "logic",
      "name": "Create Database Engine",
      "description": "Create async database engine",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "_create_engine",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_create_engine_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"_create_engine\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0085",
      "type": "logic",
      "name": "Create Engine with Retry",
      "description": "Create engine with retry logic",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "_create_engine_with_retry",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_create_engine_with_retry_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"_create_engine_with_retry\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0086",
      "type": "logic",
      "name": "Get Connection Arguments",
      "description": "Get database driver connection arguments",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "_get_connect_args",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_get_connect_args_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_get_connect_args\",\n      \"description\": \"Get database driver connection arguments\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0087",
      "type": "logic",
      "name": "Handle Database Connection Event",
      "description": "Event handler for database connections (SQLite pragmas)",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "on_connection",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"on_connection_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"on_connection\",\n      \"description\": \"Event handler for database connections (SQLite pragmas)\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0088",
      "type": "logic",
      "name": "Database Session Context Manager",
      "description": "Context manager for database sessions",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "with_session",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"with_session_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"with_session\",\n      \"description\": \"Context manager for database sessions\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0089",
      "type": "logic",
      "name": "Assign Orphaned Flows",
      "description": "Assign flows without user_id to superuser",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "assign_orphaned_flows_to_superuser",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"assign_orphaned_flows_to_superuser_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"assign_orphaned_flows_to_superuser\",\n      \"description\": \"Assign flows without user_id to superuser\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0090",
      "type": "logic",
      "name": "Generate Unique Flow Name",
      "description": "Generate unique flow name with numeric suffix",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "_generate_unique_flow_name",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_generate_unique_flow_name_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_generate_unique_flow_name\",\n      \"description\": \"Generate unique flow name with numeric suffix\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0091",
      "type": "logic",
      "name": "Check Schema Health",
      "description": "Check database schema health against models",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "_check_schema_health",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_check_schema_health_statechart\",\n  \"initial\": \"performing_check\",\n  \"context\": {\n    \"target\": \"Item to validate\",\n    \"validation_result\": \"Boolean result\"\n  },\n  \"states\": {\n    \"performing_check\": {\n      \"entry\": \"run_validation\",\n      \"description\": \"Perform validation: _check_schema_health\",\n      \"on\": {\n        \"VALID\": \"complete_valid\",\n        \"INVALID\": \"complete_invalid\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"complete_valid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": true\n      }\n    },\n    \"complete_invalid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": false\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0092",
      "type": "logic",
      "name": "Async Check Schema Health",
      "description": "Async wrapper for schema health check",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "check_schema_health",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"check_schema_health_statechart\",\n  \"initial\": \"performing_check\",\n  \"context\": {\n    \"target\": \"Item to validate\",\n    \"validation_result\": \"Boolean result\"\n  },\n  \"states\": {\n    \"performing_check\": {\n      \"entry\": \"run_validation\",\n      \"description\": \"Perform validation: check_schema_health\",\n      \"on\": {\n        \"VALID\": \"complete_valid\",\n        \"INVALID\": \"complete_invalid\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"complete_valid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": true\n      }\n    },\n    \"complete_invalid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": false\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0093",
      "type": "logic",
      "name": "Initialize Alembic",
      "description": "Initialize alembic migration system",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "init_alembic",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"init_alembic_statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0094",
      "type": "logic",
      "name": "Run Database Migrations",
      "description": "Run database migrations with alembic",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "_run_migrations",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_run_migrations_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute _run_migrations\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0095",
      "type": "logic",
      "name": "Async Run Migrations",
      "description": "Async run migrations wrapper",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "run_migrations",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"run_migrations_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute run_migrations\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0096",
      "type": "logic",
      "name": "Retry Migration with Downgrade",
      "description": "Retry migration with downgrade/upgrade cycle",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "try_downgrade_upgrade_until_success",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"try_downgrade_upgrade_until_success_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"try_downgrade_upgrade_until_success\",\n      \"description\": \"Retry migration with downgrade/upgrade cycle\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0097",
      "type": "logic",
      "name": "Test Database Migrations",
      "description": "Test migrations against all models",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "run_migrations_test",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"run_migrations_test_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute run_migrations_test\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0098",
      "type": "logic",
      "name": "Check Table Schema",
      "description": "Check table schema against model",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "check_table",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"check_table_statechart\",\n  \"initial\": \"performing_check\",\n  \"context\": {\n    \"target\": \"Item to validate\",\n    \"validation_result\": \"Boolean result\"\n  },\n  \"states\": {\n    \"performing_check\": {\n      \"entry\": \"run_validation\",\n      \"description\": \"Perform validation: check_table\",\n      \"on\": {\n        \"VALID\": \"complete_valid\",\n        \"INVALID\": \"complete_invalid\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"complete_valid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": true\n      }\n    },\n    \"complete_invalid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": false\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0099",
      "type": "logic",
      "name": "Create Database Tables",
      "description": "Create database tables from SQLModel",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "_create_db_and_tables",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_create_db_and_tables_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"_create_db_and_tables\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0100",
      "type": "logic",
      "name": "Create Tables with Retry",
      "description": "Create tables with retry logic",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "create_db_and_tables_with_retry",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"create_db_and_tables_with_retry_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"create_db_and_tables_with_retry\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0101",
      "type": "logic",
      "name": "Async Create Tables",
      "description": "Async create database and tables",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "create_db_and_tables",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"create_db_and_tables_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"create_db_and_tables\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0102",
      "type": "logic",
      "name": "Teardown Database Service",
      "description": "Teardown database service and cleanup",
      "path": "src/backend/base/langbuilder/services/database/service.py",
      "category": "Service Method",
      "function": "teardown",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"teardown_statechart\",\n  \"initial\": \"stopping_services\",\n  \"context\": {\n    \"resources\": \"Resources to cleanup\"\n  },\n  \"states\": {\n    \"stopping_services\": {\n      \"entry\": \"stop_active_services\",\n      \"description\": \"Stop running services and processes\",\n      \"on\": {\n        \"STOPPED\": \"closing_connections\"\n      }\n    },\n    \"closing_connections\": {\n      \"entry\": \"close_connections\",\n      \"description\": \"Close database and network connections\",\n      \"on\": {\n        \"CLOSED\": \"releasing_resources\"\n      }\n    },\n    \"releasing_resources\": {\n      \"entry\": \"release_resources\",\n      \"description\": \"Release allocated resources\",\n      \"on\": {\n        \"RELEASED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Cleanup completed\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0103",
      "type": "logic",
      "name": "Initialize Session Service",
      "description": "Initialize SessionService with cache service",
      "path": "src/backend/base/langbuilder/services/session/service.py",
      "category": "Service Method",
      "function": "__init__",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"__init___statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0104",
      "type": "logic",
      "name": "Load Session",
      "description": "Load session from cache or create new",
      "path": "src/backend/base/langbuilder/services/session/service.py",
      "category": "Service Method",
      "function": "load_session",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"load_session_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"load_session\",\n      \"description\": \"Load session from cache or create new\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0105",
      "type": "logic",
      "name": "Build Session Key",
      "description": "Build session key from session_id and data hash",
      "path": "src/backend/base/langbuilder/services/session/service.py",
      "category": "Service Method",
      "function": "build_key",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"build_key_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute build_key\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0106",
      "type": "logic",
      "name": "Generate Session Key",
      "description": "Generate unique session key",
      "path": "src/backend/base/langbuilder/services/session/service.py",
      "category": "Service Method",
      "function": "generate_key",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"generate_key_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"generate_key\",\n      \"description\": \"Generate unique session key\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0107",
      "type": "logic",
      "name": "Update Session",
      "description": "Update session data in cache",
      "path": "src/backend/base/langbuilder/services/session/service.py",
      "category": "Service Method",
      "function": "update_session",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"update_session_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"update_session\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0108",
      "type": "logic",
      "name": "Clear Session",
      "description": "Clear session from cache",
      "path": "src/backend/base/langbuilder/services/session/service.py",
      "category": "Service Method",
      "function": "clear_session",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"clear_session_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"clear_session\",\n      \"description\": \"Clear session from cache\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0109",
      "type": "logic",
      "name": "Initialize Chat Service",
      "description": "Initialize ChatService with cache locks",
      "path": "src/backend/base/langbuilder/services/chat/service.py",
      "category": "Service Method",
      "function": "__init__",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"__init___statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0110",
      "type": "logic",
      "name": "Set Cache Entry",
      "description": "Set cache data for a key with optional lock",
      "path": "src/backend/base/langbuilder/services/chat/service.py",
      "category": "Service Method",
      "function": "set_cache",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"set_cache_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"set_cache\",\n      \"description\": \"Set cache data for a key with optional lock\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0111",
      "type": "logic",
      "name": "Get Cache Entry",
      "description": "Get cached data for a key with optional lock",
      "path": "src/backend/base/langbuilder/services/chat/service.py",
      "category": "Service Method",
      "function": "get_cache",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_cache_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for cache\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"cache\": \" cache object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0112",
      "type": "logic",
      "name": "Clear Cache Entry",
      "description": "Clear cache for a specific key",
      "path": "src/backend/base/langbuilder/services/chat/service.py",
      "category": "Service Method",
      "function": "clear_cache",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"clear_cache_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"clear_cache\",\n      \"description\": \"Clear cache for a specific key\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0113",
      "type": "logic",
      "name": "Initialize Variable Service",
      "description": "Initialize DatabaseVariableService",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "__init__",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"__init___statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0114",
      "type": "logic",
      "name": "Initialize User Variables from ENV",
      "description": "Initialize user variables from environment",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "initialize_user_variables",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"initialize_user_variables_statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0115",
      "type": "logic",
      "name": "Get Variable Value",
      "description": "Get and decrypt variable value",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "get_variable",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_variable_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for variable\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"variable\": \" variable object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0116",
      "type": "logic",
      "name": "Get All Variables",
      "description": "Get all variables for user",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "get_all",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_all_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for all\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_all\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"all\": \"List of all objects\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0117",
      "type": "logic",
      "name": "List Variable Names",
      "description": "List variable names for user",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "list_variables",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"list_variables_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for variables\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_all\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"variables\": \"List of variables objects\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0118",
      "type": "logic",
      "name": "Update Variable Value",
      "description": "Update variable value",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "update_variable",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"update_variable_statechart\",\n  \"initial\": \"reading_existing_variable\",\n  \"context\": {\n    \"variable_id\": \"UUID\",\n    \"variable_update\": \"VariableUpdate object\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_variable\": \"Existing variable object\"\n  },\n  \"states\": {\n    \"reading_existing_variable\": {\n      \"entry\": \"query_variable_by_id\",\n      \"description\": \"SELECT * FROM variable WHERE id = variable_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"checking_value_update\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"checking_value_update\": {\n      \"entry\": \"check_value_field\",\n      \"description\": \"Check if variable_update.value is set\",\n      \"on\": {\n        \"VALUE_PROVIDED\": \"encrypting_new_value\",\n        \"NO_VALUE\": \"updating_fields\"\n      }\n    },\n    \"encrypting_new_value\": {\n      \"entry\": \"encrypt_with_fernet\",\n      \"description\": \"Uses Fernet symmetric encryption\",\n      \"on\": {\n        \"ENCRYPTED\": \"updating_fields_with_value\"\n      }\n    },\n    \"updating_fields_with_value\": {\n      \"entry\": \"update_variable_fields\",\n      \"description\": \"Update fields including encrypted value\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"updating_fields\": {\n      \"entry\": \"update_variable_fields\",\n      \"description\": \"Update fields from variable_update.model_dump(exclude_unset=True)\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_variable)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_variable\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_variable\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_variable)\",\n      \"on\": {\n        \"REFRESHED\": \"decrypting_value\"\n      }\n    },\n    \"decrypting_value\": {\n      \"entry\": \"decrypt_with_fernet\",\n      \"description\": \"Decrypt value before returning to client\",\n      \"on\": {\n        \"DECRYPTED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"variable\": \"Updated VariableRead object (value decrypted)\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Variable not found\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Variable name must be unique for user\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0119",
      "type": "logic",
      "name": "Update Variable Fields",
      "description": "Update variable fields by ID",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "update_variable_fields",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"update_variable_fields_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"update_variable_fields\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0120",
      "type": "logic",
      "name": "Delete Variable by Name",
      "description": "Delete variable by name",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "delete_variable",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"delete_variable_statechart\",\n  \"initial\": \"reading_existing_variable\",\n  \"context\": {\n    \"variable_id\": \"UUID\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_variable\": \"Variable object to delete\"\n  },\n  \"states\": {\n    \"reading_existing_variable\": {\n      \"entry\": \"query_variable_by_id\",\n      \"description\": \"SELECT * FROM variable WHERE id = variable_id AND user_id = user_id\",\n      \"on\": {\n        \"FOUND\": \"deleting_from_session\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"deleting_from_session\": {\n      \"entry\": \"session_delete\",\n      \"description\": \"await session.delete(db_variable)\",\n      \"on\": {\n        \"DELETED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"complete\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Variable deleted successfully\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\",\n      \"data\": {\n        \"error\": \"Variable not found\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0121",
      "type": "logic",
      "name": "Delete Variable by ID",
      "description": "Delete variable by ID",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "delete_variable_by_id",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"delete_variable_by_id_statechart\",\n  \"initial\": \"confirming\",\n  \"states\": {\n    \"confirming\": {\n      \"entry\": \"verify_ownership\",\n      \"on\": {\n        \"CONFIRMED\": \"deleting\",\n        \"DENIED\": \"error\"\n      }\n    },\n    \"deleting\": {\n      \"entry\": \"delete_variable_by_id\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0122",
      "type": "logic",
      "name": "Create Variable",
      "description": "Create new encrypted variable",
      "path": "src/backend/base/langbuilder/services/variable/service.py",
      "category": "Service Method",
      "function": "create_variable",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"create_variable_statechart\",\n  \"initial\": \"checking_value_encryption\",\n  \"context\": {\n    \"variable\": \"VariableCreate object\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_variable\": \"Created variable object\"\n  },\n  \"states\": {\n    \"checking_value_encryption\": {\n      \"entry\": \"check_value_field\",\n      \"description\": \"Check if variable.value needs encryption\",\n      \"on\": {\n        \"VALUE_PROVIDED\": \"encrypting_value\",\n        \"NO_VALUE\": \"creating_variable_object\"\n      }\n    },\n    \"encrypting_value\": {\n      \"entry\": \"encrypt_with_fernet\",\n      \"description\": \"Uses Fernet symmetric encryption to encrypt variable value\",\n      \"on\": {\n        \"ENCRYPTED\": \"creating_variable_object\"\n      }\n    },\n    \"creating_variable_object\": {\n      \"entry\": \"instantiate_variable_model\",\n      \"description\": \"Variable(**variable.model_dump(), user_id=user_id)\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(db_variable)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_variable\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_variable\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(db_variable)\",\n      \"on\": {\n        \"REFRESHED\": \"decrypting_value\"\n      }\n    },\n    \"decrypting_value\": {\n      \"entry\": \"decrypt_with_fernet\",\n      \"description\": \"Decrypt value before returning to client\",\n      \"on\": {\n        \"DECRYPTED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"variable\": \"VariableRead object (value decrypted)\"\n      }\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\",\n      \"data\": {\n        \"error\": \"Variable name must be unique for user\"\n      }\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\",\n      \"data\": {\n        \"error\": \"Database commit error\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0123",
      "type": "logic",
      "name": "Initialize Job Queue Service",
      "description": "Initialize JobQueueService",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "__init__",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"__init___statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0124",
      "type": "logic",
      "name": "Check Service Started",
      "description": "Check if service has started",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "is_started",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"is_started_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"is_started\",\n      \"description\": \"Check if service has started\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0125",
      "type": "logic",
      "name": "Set Service Ready",
      "description": "Set service to ready state",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "set_ready",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"set_ready_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"set_ready\",\n      \"description\": \"Set service to ready state\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0126",
      "type": "logic",
      "name": "Start Job Queue Service",
      "description": "Start periodic cleanup task",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "start",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"start_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"start\",\n      \"description\": \"Start periodic cleanup task\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0127",
      "type": "logic",
      "name": "Stop Job Queue Service",
      "description": "Stop service and cleanup all queues",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "stop",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"stop_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"stop\",\n      \"description\": \"Stop service and cleanup all queues\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0128",
      "type": "logic",
      "name": "Teardown Job Queue Service",
      "description": "Teardown service",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "teardown",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"teardown_statechart\",\n  \"initial\": \"stopping_services\",\n  \"context\": {\n    \"resources\": \"Resources to cleanup\"\n  },\n  \"states\": {\n    \"stopping_services\": {\n      \"entry\": \"stop_active_services\",\n      \"description\": \"Stop running services and processes\",\n      \"on\": {\n        \"STOPPED\": \"closing_connections\"\n      }\n    },\n    \"closing_connections\": {\n      \"entry\": \"close_connections\",\n      \"description\": \"Close database and network connections\",\n      \"on\": {\n        \"CLOSED\": \"releasing_resources\"\n      }\n    },\n    \"releasing_resources\": {\n      \"entry\": \"release_resources\",\n      \"description\": \"Release allocated resources\",\n      \"on\": {\n        \"RELEASED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Cleanup completed\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0129",
      "type": "logic",
      "name": "Create Job Queue",
      "description": "Create queue and event manager for job",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "create_queue",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"create_queue_statechart\",\n  \"initial\": \"validating_input\",\n  \"context\": {\n    \"input_data\": \"queue creation data\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_queue\": \"Created queue object\"\n  },\n  \"states\": {\n    \"validating_input\": {\n      \"entry\": \"validate_input_data\",\n      \"description\": \"Validate queue creation data\",\n      \"on\": {\n        \"VALID\": \"checking_uniqueness\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"checking_uniqueness\": {\n      \"entry\": \"check_unique_constraints\",\n      \"description\": \"Query database for existing queue\",\n      \"on\": {\n        \"UNIQUE\": \"creating_object\",\n        \"DUPLICATE\": \"error_duplicate\"\n      }\n    },\n    \"creating_object\": {\n      \"entry\": \"instantiate_model\",\n      \"description\": \"Create queue model instance\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(object)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_object\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_object\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(object)\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"queue\": \"Created queue object\"\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_duplicate\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\"\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0130",
      "type": "logic",
      "name": "Start Job Task",
      "description": "Start async task for job",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "start_job",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"start_job_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"start_job\",\n      \"description\": \"Start async task for job\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0131",
      "type": "logic",
      "name": "Get Queue Data",
      "description": "Get queue data structure for job",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "get_queue_data",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_queue_data_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for queue_data\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"queue_data\": \" queue_data object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0132",
      "type": "logic",
      "name": "Cleanup Job",
      "description": "Cleanup and release job resources",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "cleanup_job",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"cleanup_job_statechart\",\n  \"initial\": \"stopping_services\",\n  \"context\": {\n    \"resources\": \"Resources to cleanup\"\n  },\n  \"states\": {\n    \"stopping_services\": {\n      \"entry\": \"stop_active_services\",\n      \"description\": \"Stop running services and processes\",\n      \"on\": {\n        \"STOPPED\": \"closing_connections\"\n      }\n    },\n    \"closing_connections\": {\n      \"entry\": \"close_connections\",\n      \"description\": \"Close database and network connections\",\n      \"on\": {\n        \"CLOSED\": \"releasing_resources\"\n      }\n    },\n    \"releasing_resources\": {\n      \"entry\": \"release_resources\",\n      \"description\": \"Release allocated resources\",\n      \"on\": {\n        \"RELEASED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Cleanup completed\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0133",
      "type": "logic",
      "name": "Periodic Job Cleanup",
      "description": "Periodic cleanup of old queues",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "_periodic_cleanup",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_periodic_cleanup_statechart\",\n  \"initial\": \"stopping_services\",\n  \"context\": {\n    \"resources\": \"Resources to cleanup\"\n  },\n  \"states\": {\n    \"stopping_services\": {\n      \"entry\": \"stop_active_services\",\n      \"description\": \"Stop running services and processes\",\n      \"on\": {\n        \"STOPPED\": \"closing_connections\"\n      }\n    },\n    \"closing_connections\": {\n      \"entry\": \"close_connections\",\n      \"description\": \"Close database and network connections\",\n      \"on\": {\n        \"CLOSED\": \"releasing_resources\"\n      }\n    },\n    \"releasing_resources\": {\n      \"entry\": \"release_resources\",\n      \"description\": \"Release allocated resources\",\n      \"on\": {\n        \"RELEASED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Cleanup completed\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0134",
      "type": "logic",
      "name": "Cleanup Old Queues",
      "description": "Scan and cleanup completed jobs",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "_cleanup_old_queues",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_cleanup_old_queues_statechart\",\n  \"initial\": \"stopping_services\",\n  \"context\": {\n    \"resources\": \"Resources to cleanup\"\n  },\n  \"states\": {\n    \"stopping_services\": {\n      \"entry\": \"stop_active_services\",\n      \"description\": \"Stop running services and processes\",\n      \"on\": {\n        \"STOPPED\": \"closing_connections\"\n      }\n    },\n    \"closing_connections\": {\n      \"entry\": \"close_connections\",\n      \"description\": \"Close database and network connections\",\n      \"on\": {\n        \"CLOSED\": \"releasing_resources\"\n      }\n    },\n    \"releasing_resources\": {\n      \"entry\": \"release_resources\",\n      \"description\": \"Release allocated resources\",\n      \"on\": {\n        \"RELEASED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"message\": \"Cleanup completed\"\n      }\n    }\n  }\n}"
    },
    {
      "id": "nl0135",
      "type": "logic",
      "name": "Create Default Event Manager",
      "description": "Create event manager with default events",
      "path": "src/backend/base/langbuilder/services/job_queue/service.py",
      "category": "Service Method",
      "function": "_create_default_event_manager",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_create_default_event_manager_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"_create_default_event_manager\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0136",
      "type": "logic",
      "name": "Append State Value",
      "description": "Append value to state list",
      "path": "src/backend/base/langbuilder/services/state/service.py",
      "category": "Service Method",
      "function": "append_state",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"append_state_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"append_state\",\n      \"description\": \"Append value to state list\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0137",
      "type": "logic",
      "name": "Update State Value",
      "description": "Update state value",
      "path": "src/backend/base/langbuilder/services/state/service.py",
      "category": "Service Method",
      "function": "update_state",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"update_state_statechart\",\n  \"initial\": \"reading_existing\",\n  \"context\": {\n    \"entity_id\": \"UUID\",\n    \"update_data\": \"Update payload\",\n    \"session\": \"Database session\",\n    \"db_state\": \"state object\"\n  },\n  \"states\": {\n    \"reading_existing\": {\n      \"entry\": \"query_by_id\",\n      \"description\": \"SELECT * FROM state WHERE id = entity_id\",\n      \"on\": {\n        \"FOUND\": \"validating_update\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"validating_update\": {\n      \"entry\": \"validate_update_data\",\n      \"description\": \"Validate update payload\",\n      \"on\": {\n        \"VALID\": \"updating_fields\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"updating_fields\": {\n      \"entry\": \"apply_updates\",\n      \"description\": \"Update object fields from payload\",\n      \"on\": {\n        \"UPDATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(object)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_object\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_object\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(object)\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"state\": \"Updated state object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0138",
      "type": "logic",
      "name": "Get State Value",
      "description": "Get state value",
      "path": "src/backend/base/langbuilder/services/state/service.py",
      "category": "Service Method",
      "function": "get_state",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_state_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for state\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"state\": \" state object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0139",
      "type": "logic",
      "name": "Subscribe to State Changes",
      "description": "Subscribe observer to state changes",
      "path": "src/backend/base/langbuilder/services/state/service.py",
      "category": "Service Method",
      "function": "subscribe",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"subscribe_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"subscribe\",\n      \"description\": \"Subscribe observer to state changes\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0140",
      "type": "logic",
      "name": "Unsubscribe from State",
      "description": "Unsubscribe observer from state",
      "path": "src/backend/base/langbuilder/services/state/service.py",
      "category": "Service Method",
      "function": "unsubscribe",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"unsubscribe_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"unsubscribe\",\n      \"description\": \"Unsubscribe observer from state\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0141",
      "type": "logic",
      "name": "Notify State Observers",
      "description": "Notify observers of state change",
      "path": "src/backend/base/langbuilder/services/state/service.py",
      "category": "Service Method",
      "function": "notify_observers",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"notify_observers_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"notify_observers\",\n      \"description\": \"Notify observers of state change\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0142",
      "type": "logic",
      "name": "Notify Append Observers",
      "description": "Notify observers of state append",
      "path": "src/backend/base/langbuilder/services/state/service.py",
      "category": "Service Method",
      "function": "notify_append_observers",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"notify_append_observers_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"notify_append_observers\",\n      \"description\": \"Notify observers of state append\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0143",
      "type": "logic",
      "name": "Initialize Graph",
      "description": "Initialize Graph with vertices and edges",
      "path": "src/backend/base/langbuilder/graph/graph/base.py",
      "category": "Graph Processing",
      "function": "__init__",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"__init___statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0144",
      "type": "logic",
      "name": "Serialize Graph to JSON",
      "description": "Serialize graph to JSON string",
      "path": "src/backend/base/langbuilder/graph/graph/base.py",
      "category": "Graph Processing",
      "function": "dumps",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"dumps_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"dumps\",\n      \"description\": \"Serialize graph to JSON string\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0145",
      "type": "logic",
      "name": "Dump Graph to Dict",
      "description": "Dump graph to dictionary",
      "path": "src/backend/base/langbuilder/graph/graph/base.py",
      "category": "Graph Processing",
      "function": "dump",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"dump_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"dump\",\n      \"description\": \"Dump graph to dictionary\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0146",
      "type": "logic",
      "name": "Add Nodes and Edges",
      "description": "Add nodes and edges to graph",
      "path": "src/backend/base/langbuilder/graph/graph/base.py",
      "category": "Graph Processing",
      "function": "add_nodes_and_edges",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"add_nodes_and_edges_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"add_nodes_and_edges\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0147",
      "type": "logic",
      "name": "Add Component to Graph",
      "description": "Add component to graph",
      "path": "src/backend/base/langbuilder/graph/graph/base.py",
      "category": "Graph Processing",
      "function": "add_component",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"add_component_statechart\",\n  \"initial\": \"validating_input\",\n  \"context\": {\n    \"input_data\": \"component creation data\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_component\": \"Created component object\"\n  },\n  \"states\": {\n    \"validating_input\": {\n      \"entry\": \"validate_input_data\",\n      \"description\": \"Validate component creation data\",\n      \"on\": {\n        \"VALID\": \"checking_uniqueness\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"checking_uniqueness\": {\n      \"entry\": \"check_unique_constraints\",\n      \"description\": \"Query database for existing component\",\n      \"on\": {\n        \"UNIQUE\": \"creating_object\",\n        \"DUPLICATE\": \"error_duplicate\"\n      }\n    },\n    \"creating_object\": {\n      \"entry\": \"instantiate_model\",\n      \"description\": \"Create component model instance\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(object)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_object\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_object\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(object)\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"component\": \"Created component object\"\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_duplicate\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\"\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0148",
      "type": "logic",
      "name": "Set Start and End Components",
      "description": "Set start and end components",
      "path": "src/backend/base/langbuilder/graph/graph/base.py",
      "category": "Graph Processing",
      "function": "_set_start_and_end",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_set_start_and_end_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_set_start_and_end\",\n      \"description\": \"Set start and end components\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0149",
      "type": "logic",
      "name": "Add Component Edge",
      "description": "Add edge between components",
      "path": "src/backend/base/langbuilder/graph/graph/base.py",
      "category": "Graph Processing",
      "function": "add_component_edge",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"add_component_edge_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"add_component_edge\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0150",
      "type": "logic",
      "name": "Initialize Vertex",
      "description": "Initialize Vertex with data and graph",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "__init__",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"__init___statechart\",\n  \"initial\": \"loading_configuration\",\n  \"context\": {\n    \"config\": \"Configuration data\",\n    \"resources\": \"Initialized resources\"\n  },\n  \"states\": {\n    \"loading_configuration\": {\n      \"entry\": \"load_config\",\n      \"description\": \"Load configuration and settings\",\n      \"on\": {\n        \"LOADED\": \"initializing_resources\"\n      }\n    },\n    \"initializing_resources\": {\n      \"entry\": \"setup_resources\",\n      \"description\": \"Initialize required resources\",\n      \"on\": {\n        \"INITIALIZED\": \"validating_setup\",\n        \"ERROR\": \"error_initialization\"\n      }\n    },\n    \"validating_setup\": {\n      \"entry\": \"validate_initialization\",\n      \"description\": \"Verify initialization completed correctly\",\n      \"on\": {\n        \"VALID\": \"complete\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"initialized\": true\n      }\n    },\n    \"error_initialization\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0151",
      "type": "logic",
      "name": "Set Vertex Input Value",
      "description": "Set input value for vertex component",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "set_input_value",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"set_input_value_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"set_input_value\",\n      \"description\": \"Set input value for vertex component\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0152",
      "type": "logic",
      "name": "Convert Vertex to Data",
      "description": "Convert vertex to data dictionary",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "to_data",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"to_data_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"to_data\",\n      \"description\": \"Convert vertex to data dictionary\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0153",
      "type": "logic",
      "name": "Add Component Instance",
      "description": "Add component instance to vertex",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "add_component_instance",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"add_component_instance_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"add_component_instance\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0154",
      "type": "logic",
      "name": "Add Vertex Result",
      "description": "Add result to vertex results",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "add_result",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"add_result_statechart\",\n  \"initial\": \"validating_input\",\n  \"context\": {\n    \"input_data\": \"result creation data\",\n    \"user_id\": \"UUID\",\n    \"session\": \"Database session\",\n    \"db_result\": \"Created result object\"\n  },\n  \"states\": {\n    \"validating_input\": {\n      \"entry\": \"validate_input_data\",\n      \"description\": \"Validate result creation data\",\n      \"on\": {\n        \"VALID\": \"checking_uniqueness\",\n        \"INVALID\": \"error_validation\"\n      }\n    },\n    \"checking_uniqueness\": {\n      \"entry\": \"check_unique_constraints\",\n      \"description\": \"Query database for existing result\",\n      \"on\": {\n        \"UNIQUE\": \"creating_object\",\n        \"DUPLICATE\": \"error_duplicate\"\n      }\n    },\n    \"creating_object\": {\n      \"entry\": \"instantiate_model\",\n      \"description\": \"Create result model instance\",\n      \"on\": {\n        \"CREATED\": \"adding_to_session\"\n      }\n    },\n    \"adding_to_session\": {\n      \"entry\": \"session_add\",\n      \"description\": \"session.add(object)\",\n      \"on\": {\n        \"ADDED\": \"committing_transaction\"\n      }\n    },\n    \"committing_transaction\": {\n      \"entry\": \"session_commit\",\n      \"description\": \"await session.commit()\",\n      \"on\": {\n        \"COMMITTED\": \"refreshing_object\",\n        \"INTEGRITY_ERROR\": \"error_database_constraint\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"refreshing_object\": {\n      \"entry\": \"session_refresh\",\n      \"description\": \"await session.refresh(object)\",\n      \"on\": {\n        \"REFRESHED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Created result object\"\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_duplicate\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\"\n    },\n    \"error_database_constraint\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_409\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0155",
      "type": "logic",
      "name": "Set Vertex State",
      "description": "Set vertex state (ACTIVE/INACTIVE/ERROR)",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "set_state",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"set_state_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"set_state\",\n      \"description\": \"Set vertex state (ACTIVE/INACTIVE/ERROR)\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0156",
      "type": "logic",
      "name": "Check Vertex Active",
      "description": "Check if vertex is active",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "is_active",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"is_active_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"is_active\",\n      \"description\": \"Check if vertex is active\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0157",
      "type": "logic",
      "name": "Add Build Time",
      "description": "Add build time to history",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "add_build_time",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"add_build_time_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"add_build_time\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0158",
      "type": "logic",
      "name": "Set Vertex Result",
      "description": "Set vertex result data",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "set_result",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"set_result_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"set_result\",\n      \"description\": \"Set vertex result data\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0159",
      "type": "logic",
      "name": "Get Built Result",
      "description": "Get built result from vertex",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "get_built_result",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_built_result_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for built_result\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"built_result\": \" built_result object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0160",
      "type": "logic",
      "name": "Set Vertex Artifacts",
      "description": "Set vertex artifacts",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "set_artifacts",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"set_artifacts_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"set_artifacts\",\n      \"description\": \"Set vertex artifacts\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0161",
      "type": "logic",
      "name": "Get Incoming Edge",
      "description": "Get incoming edge by target parameter",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "get_incoming_edge_by_target_param",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_incoming_edge_by_target_param_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for incoming_edge_by_tarparam\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"incoming_edge_by_tarparam\": \" incoming_edge_by_tarparam object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0162",
      "type": "logic",
      "name": "Set Top Level Flag",
      "description": "Set if parent is top level",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "set_top_level",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"set_top_level_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"set_top_level\",\n      \"description\": \"Set if parent is top level\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0163",
      "type": "logic",
      "name": "Parse Vertex Data",
      "description": "Parse vertex data from node data",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "parse_data",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"parse_data_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"parse_data\",\n      \"description\": \"Parse vertex data from node data\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0164",
      "type": "logic",
      "name": "Get Value from Output Names",
      "description": "Get value from output names",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "get_value_from_output_names",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_value_from_output_names_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for value_from_output_names\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_all\",\n      \"description\": \"result.all()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"value_from_output_names\": \"List of value_from_output_names objects\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0165",
      "type": "logic",
      "name": "Get Value from Template",
      "description": "Get value from template dictionary",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "get_value_from_template_dict",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"get_value_from_template_dict_statechart\",\n  \"initial\": \"building_query\",\n  \"context\": {\n    \"filters\": \"Query filters\",\n    \"session\": \"Database session\",\n    \"query\": \"SELECT statement\"\n  },\n  \"states\": {\n    \"building_query\": {\n      \"entry\": \"create_select_statement\",\n      \"description\": \"Build SELECT query for value_from_template_dict\",\n      \"on\": {\n        \"QUERY_BUILT\": \"applying_filters\"\n      }\n    },\n    \"applying_filters\": {\n      \"entry\": \"add_where_clauses\",\n      \"description\": \"Apply filters (user_id, id, etc.)\",\n      \"on\": {\n        \"FILTERS_APPLIED\": \"executing_query\"\n      }\n    },\n    \"executing_query\": {\n      \"entry\": \"execute_select\",\n      \"description\": \"await session.exec(query)\",\n      \"on\": {\n        \"SUCCESS\": \"fetching_results\",\n        \"ERROR\": \"error_database\"\n      }\n    },\n    \"fetching_results\": {\n      \"entry\": \"fetch_first\",\n      \"description\": \"result.first()\",\n      \"on\": {\n        \"FETCHED\": \"complete\",\n        \"NOT_FOUND\": \"error_not_found\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"value_from_template_dict\": \" value_from_template_dict object\"\n      }\n    },\n    \"error_not_found\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_404\"\n    },\n    \"error_database\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0166",
      "type": "logic",
      "name": "Set Parameters from Edge",
      "description": "Set parameters from normal edge",
      "path": "src/backend/base/langbuilder/graph/vertex/base.py",
      "category": "Graph Processing",
      "function": "_set_params_from_normal_edge",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_set_params_from_normal_edge_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_set_params_from_normal_edge\",\n      \"description\": \"Set parameters from normal edge\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0167",
      "type": "logic",
      "name": "Set Playground Page State",
      "description": "Set playground page state",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "setPlaygroundPage",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"setPlaygroundPage_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"setPlaygroundPage\",\n      \"description\": \"Set playground page state\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0168",
      "type": "logic",
      "name": "Set Position Dictionary",
      "description": "Set position dictionary for nodes",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "setPositionDictionary",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"setPositionDictionary_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"setPositionDictionary\",\n      \"description\": \"Set position dictionary for nodes\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0169",
      "type": "logic",
      "name": "Check Position Available",
      "description": "Check if position is available",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "isPositionAvailable",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"isPositionAvailable_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"isPositionAvailable\",\n      \"description\": \"Check if position is available\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0170",
      "type": "logic",
      "name": "Fit View to Node",
      "description": "Fit view to specific node",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "fitViewNode",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"fitViewNode_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"fitViewNode\",\n      \"description\": \"Fit view to specific node\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0171",
      "type": "logic",
      "name": "Set Components to Update",
      "description": "Set components that need updates",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "setComponentsToUpdate",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"setComponentsToUpdate_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"setComponentsToUpdate\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0172",
      "type": "logic",
      "name": "Update Components",
      "description": "Update components with outdated code",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "updateComponentsToUpdate",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"updateComponentsToUpdate_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"updateComponentsToUpdate\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0173",
      "type": "logic",
      "name": "Set On Flow Page",
      "description": "Set on flow page state",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "setOnFlowPage",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"setOnFlowPage_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"setOnFlowPage\",\n      \"description\": \"Set on flow page state\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0174",
      "type": "logic",
      "name": "Stop Flow Building",
      "description": "Stop flow building process",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "stopBuilding",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"stopBuilding_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"stopBuilding\",\n      \"description\": \"Stop flow building process\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0175",
      "type": "logic",
      "name": "Set Has I/O Flag",
      "description": "Set has input/output flag",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "setHasIO",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"setHasIO_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"setHasIO\",\n      \"description\": \"Set has input/output flag\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0176",
      "type": "logic",
      "name": "Set Flow Inputs",
      "description": "Set flow inputs",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "setInputs",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"setInputs_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"setInputs\",\n      \"description\": \"Set flow inputs\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0177",
      "type": "logic",
      "name": "Set Flow Outputs",
      "description": "Set flow outputs",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "setOutputs",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"setOutputs_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"setOutputs\",\n      \"description\": \"Set flow outputs\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0178",
      "type": "logic",
      "name": "Set Flow Pool",
      "description": "Set flow execution pool",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "setFlowPool",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"setFlowPool_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"setFlowPool\",\n      \"description\": \"Set flow execution pool\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0179",
      "type": "logic",
      "name": "Update Tool Mode",
      "description": "Update node tool mode",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "updateToolMode",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"updateToolMode_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"updateToolMode\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0180",
      "type": "logic",
      "name": "Update Freeze Status",
      "description": "Update freeze status of nodes",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "updateFreezeStatus",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"updateFreezeStatus_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"updateFreezeStatus\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0181",
      "type": "logic",
      "name": "Add Data to Flow Pool",
      "description": "Add vertex build data to flow pool",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "addDataToFlowPool",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"addDataToFlowPool_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_input\",\n      \"on\": {\n        \"VALID\": \"creating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"creating\": {\n      \"entry\": \"addDataToFlowPool\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0182",
      "type": "logic",
      "name": "Get Node Position",
      "description": "Get node position by ID",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "getNodePosition",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"getNodePosition_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"getNodePosition\",\n      \"description\": \"Get node position by ID\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0183",
      "type": "logic",
      "name": "Update Flow Pool",
      "description": "Update flow pool data for node",
      "path": "src/frontend/src/stores/flowStore.ts",
      "category": "Frontend State",
      "function": "updateFlowPool",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"updateFlowPool_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"updateFlowPool\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0184",
      "type": "logic",
      "name": "Build Inactive Vertex Data",
      "description": "Build inactive vertex data structure",
      "path": "src/frontend/src/utils/buildUtils.ts",
      "category": "Frontend Utility",
      "function": "getInactiveVertexData",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"getInactiveVertexData_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"getInactiveVertexData\",\n      \"description\": \"Build inactive vertex data structure\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0185",
      "type": "logic",
      "name": "Log Flow Load Message",
      "description": "Log flow loading messages",
      "path": "src/frontend/src/utils/buildUtils.ts",
      "category": "Frontend Utility",
      "function": "logFlowLoad",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"logFlowLoad_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"logFlowLoad\",\n      \"description\": \"Log flow loading messages\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0186",
      "type": "logic",
      "name": "Update Vertices Order",
      "description": "Update vertices execution order",
      "path": "src/frontend/src/utils/buildUtils.ts",
      "category": "Frontend Utility",
      "function": "updateVerticesOrder",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"updateVerticesOrder_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"updateVerticesOrder\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0187",
      "type": "logic",
      "name": "Build Flow with Fallback",
      "description": "Build flow vertices with streaming/polling fallback",
      "path": "src/frontend/src/utils/buildUtils.ts",
      "category": "Frontend Utility",
      "function": "buildFlowVerticesWithFallback",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"buildFlowVerticesWithFallback_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute buildFlowVerticesWithFallback\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0188",
      "type": "logic",
      "name": "Poll Build Events",
      "description": "Poll for build events from server",
      "path": "src/frontend/src/utils/buildUtils.ts",
      "category": "Frontend Utility",
      "function": "pollBuildEvents",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"pollBuildEvents_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"pollBuildEvents\",\n      \"description\": \"Poll for build events from server\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0189",
      "type": "logic",
      "name": "Check Chat Input Node",
      "description": "Check if nodes contain ChatInput",
      "path": "src/frontend/src/utils/reactflowUtils.ts",
      "category": "Frontend Utility",
      "function": "checkChatInput",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"checkChatInput_statechart\",\n  \"initial\": \"performing_check\",\n  \"context\": {\n    \"target\": \"Item to validate\",\n    \"validation_result\": \"Boolean result\"\n  },\n  \"states\": {\n    \"performing_check\": {\n      \"entry\": \"run_validation\",\n      \"description\": \"Perform validation: checkChatInput\",\n      \"on\": {\n        \"VALID\": \"complete_valid\",\n        \"INVALID\": \"complete_invalid\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"complete_valid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": true\n      }\n    },\n    \"complete_invalid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": false\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0190",
      "type": "logic",
      "name": "Check Webhook Input Node",
      "description": "Check if nodes contain Webhook",
      "path": "src/frontend/src/utils/reactflowUtils.ts",
      "category": "Frontend Utility",
      "function": "checkWebhookInput",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"checkWebhookInput_statechart\",\n  \"initial\": \"performing_check\",\n  \"context\": {\n    \"target\": \"Item to validate\",\n    \"validation_result\": \"Boolean result\"\n  },\n  \"states\": {\n    \"performing_check\": {\n      \"entry\": \"run_validation\",\n      \"description\": \"Perform validation: checkWebhookInput\",\n      \"on\": {\n        \"VALID\": \"complete_valid\",\n        \"INVALID\": \"complete_invalid\",\n        \"ERROR\": \"error_validation\"\n      }\n    },\n    \"complete_valid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": true\n      }\n    },\n    \"complete_invalid\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"valid\": false\n      }\n    },\n    \"error_validation\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_exception\"\n    }\n  }\n}"
    },
    {
      "id": "nl0191",
      "type": "logic",
      "name": "Clean and Validate Edges",
      "description": "Clean and validate edges against nodes",
      "path": "src/frontend/src/utils/reactflowUtils.ts",
      "category": "Frontend Utility",
      "function": "cleanEdges",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"cleanEdges_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"cleanEdges\",\n      \"description\": \"Clean and validate edges against nodes\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0192",
      "type": "logic",
      "name": "Clear Advanced Handles",
      "description": "Clear handles from advanced fields",
      "path": "src/frontend/src/utils/reactflowUtils.ts",
      "category": "Frontend Utility",
      "function": "clearHandlesFromAdvancedFields",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"clearHandlesFromAdvancedFields_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"clearHandlesFromAdvancedFields\",\n      \"description\": \"Clear handles from advanced fields\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0193",
      "type": "logic",
      "name": "Serialize String",
      "description": "Serialize string with truncation",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_str",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_str_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_str\",\n      \"description\": \"Serialize string with truncation\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0194",
      "type": "logic",
      "name": "Serialize Bytes",
      "description": "Serialize bytes to base64",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_bytes",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_bytes_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_bytes\",\n      \"description\": \"Serialize bytes to base64\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0195",
      "type": "logic",
      "name": "Serialize DateTime",
      "description": "Serialize datetime to ISO format",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_datetime",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_datetime_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_datetime\",\n      \"description\": \"Serialize datetime to ISO format\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0196",
      "type": "logic",
      "name": "Serialize Decimal",
      "description": "Serialize Decimal to float",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_decimal",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_decimal_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_decimal\",\n      \"description\": \"Serialize Decimal to float\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0197",
      "type": "logic",
      "name": "Serialize UUID",
      "description": "Serialize UUID to string",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_uuid",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_uuid_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_uuid\",\n      \"description\": \"Serialize UUID to string\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0198",
      "type": "logic",
      "name": "Serialize Document",
      "description": "Serialize Document object",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_document",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_document_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_document\",\n      \"description\": \"Serialize Document object\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0199",
      "type": "logic",
      "name": "Serialize Iterator",
      "description": "Serialize iterator to placeholder",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_iterator",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_iterator_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_iterator\",\n      \"description\": \"Serialize iterator to placeholder\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0200",
      "type": "logic",
      "name": "Serialize Pydantic Model",
      "description": "Serialize Pydantic v2 model",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_pydantic",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_pydantic_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_pydantic\",\n      \"description\": \"Serialize Pydantic v2 model\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0201",
      "type": "logic",
      "name": "Serialize Pydantic V1",
      "description": "Serialize Pydantic v1 model",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_pydantic_v1",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_pydantic_v1_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_pydantic_v1\",\n      \"description\": \"Serialize Pydantic v1 model\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0202",
      "type": "logic",
      "name": "Serialize Dictionary",
      "description": "Serialize dictionary",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_dict",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_dict_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_dict\",\n      \"description\": \"Serialize dictionary\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0203",
      "type": "logic",
      "name": "Serialize List/Tuple",
      "description": "Serialize list or tuple",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_list_tuple",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_list_tuple_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_list_tuple\",\n      \"description\": \"Serialize list or tuple\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0204",
      "type": "logic",
      "name": "Serialize Primitive",
      "description": "Serialize primitive types",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_primitive",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_primitive_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_primitive\",\n      \"description\": \"Serialize primitive types\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0205",
      "type": "logic",
      "name": "Serialize Instance",
      "description": "Serialize class instance",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_instance",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_instance_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_instance\",\n      \"description\": \"Serialize class instance\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0206",
      "type": "logic",
      "name": "Truncate Value",
      "description": "Truncate value to max length/items",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_truncate_value",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_truncate_value_statechart\",\n  \"initial\": \"preparing_execution\",\n  \"context\": {\n    \"inputs\": \"Execution inputs\",\n    \"result\": \"Execution result\"\n  },\n  \"states\": {\n    \"preparing_execution\": {\n      \"entry\": \"validate_inputs\",\n      \"description\": \"Prepare and validate execution inputs\",\n      \"on\": {\n        \"VALID\": \"executing\",\n        \"INVALID\": \"error_invalid_input\"\n      }\n    },\n    \"executing\": {\n      \"entry\": \"run_execution\",\n      \"description\": \"Execute _truncate_value\",\n      \"on\": {\n        \"SUCCESS\": \"processing_result\",\n        \"ERROR\": \"error_execution\"\n      }\n    },\n    \"processing_result\": {\n      \"entry\": \"process_output\",\n      \"description\": \"Process execution results\",\n      \"on\": {\n        \"PROCESSED\": \"complete\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Execution result\"\n      }\n    },\n    \"error_invalid_input\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_400\"\n    },\n    \"error_execution\": {\n      \"type\": \"final\",\n      \"entry\": \"raise_http_500\"\n    }\n  }\n}"
    },
    {
      "id": "nl0207",
      "type": "logic",
      "name": "Serialize DataFrame",
      "description": "Serialize pandas DataFrame",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_dataframe",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_dataframe_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_dataframe\",\n      \"description\": \"Serialize pandas DataFrame\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0208",
      "type": "logic",
      "name": "Serialize Series",
      "description": "Serialize pandas Series",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_series",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_series_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_series\",\n      \"description\": \"Serialize pandas Series\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0209",
      "type": "logic",
      "name": "Check Numpy Type",
      "description": "Check if object is numpy type",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_is_numpy_type",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_is_numpy_type_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_is_numpy_type\",\n      \"description\": \"Check if object is numpy type\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0210",
      "type": "logic",
      "name": "Serialize Numpy Type",
      "description": "Serialize numpy types",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_numpy_type",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_numpy_type_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"_serialize_numpy_type\",\n      \"description\": \"Serialize numpy types\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0211",
      "type": "logic",
      "name": "Dispatch Serialization",
      "description": "Dispatch serialization based on type",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "_serialize_dispatcher",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"_serialize_dispatcher_statechart\",\n  \"initial\": \"validating\",\n  \"states\": {\n    \"validating\": {\n      \"entry\": \"validate_update\",\n      \"on\": {\n        \"VALID\": \"updating\",\n        \"INVALID\": \"error\"\n      }\n    },\n    \"updating\": {\n      \"entry\": \"_serialize_dispatcher\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\"\n    },\n    \"error\": {\n      \"entry\": \"log_error\",\n      \"type\": \"final\"\n    }\n  }\n}"
    },
    {
      "id": "nl0212",
      "type": "logic",
      "name": "Serialize Object",
      "description": "Main serialization function",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "serialize",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"serialize_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"serialize\",\n      \"description\": \"Main serialization function\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0213",
      "type": "logic",
      "name": "Serialize or String",
      "description": "Serialize or convert to string",
      "path": "src/backend/base/langbuilder/serialization.py",
      "category": "Backend Utility",
      "function": "serialize_or_str",
      "statechart_definition": "{\n  \"type\": \"statechart\",\n  \"id\": \"serialize_or_str_statechart\",\n  \"initial\": \"processing\",\n  \"context\": {\n    \"input\": \"Function input\",\n    \"output\": \"Function output\"\n  },\n  \"states\": {\n    \"processing\": {\n      \"entry\": \"serialize_or_str\",\n      \"description\": \"Serialize or convert to string\",\n      \"on\": {\n        \"SUCCESS\": \"complete\",\n        \"ERROR\": \"error\"\n      }\n    },\n    \"complete\": {\n      \"type\": \"final\",\n      \"data\": {\n        \"result\": \"Processing result\"\n      }\n    },\n    \"error\": {\n      \"type\": \"final\",\n      \"entry\": \"handle_error\"\n    }\n  }\n}"
    },
    {
      "id": "nl0214",
      "type": "logic",
      "name": "on_llm_new_token",
      "function": "on_llm_new_token",
      "path": "backend/base/langbuilder/api/v1/callback.py",
      "category": "api_endpoint",
      "description": "logic node: on_llm_new_token (API endpoint)"
    },
    {
      "id": "nl0215",
      "type": "logic",
      "name": "on_tool_start",
      "function": "on_tool_start",
      "path": "backend/base/langbuilder/api/v1/callback.py",
      "category": "api_endpoint",
      "description": "logic node: on_tool_start (API endpoint)"
    },
    {
      "id": "nl0216",
      "type": "logic",
      "name": "on_tool_end",
      "function": "on_tool_end",
      "path": "backend/base/langbuilder/api/v1/callback.py",
      "category": "api_endpoint",
      "description": "logic node: on_tool_end (API endpoint)"
    },
    {
      "id": "nl0217",
      "type": "logic",
      "name": "on_tool_error",
      "function": "on_tool_error",
      "path": "backend/base/langbuilder/api/v1/callback.py",
      "category": "api_endpoint",
      "description": "logic node: on_tool_error (API endpoint)"
    },
    {
      "id": "nl0218",
      "type": "logic",
      "name": "on_text",
      "function": "on_text",
      "path": "backend/base/langbuilder/api/v1/callback.py",
      "category": "api_endpoint",
      "description": "logic node: on_text (API endpoint)"
    },
    {
      "id": "nl0219",
      "type": "logic",
      "name": "on_agent_action",
      "function": "on_agent_action",
      "path": "backend/base/langbuilder/api/v1/callback.py",
      "category": "api_endpoint",
      "description": "logic node: on_agent_action (API endpoint)"
    },
    {
      "id": "nl0220",
      "type": "logic",
      "name": "on_agent_finish",
      "function": "on_agent_finish",
      "path": "backend/base/langbuilder/api/v1/callback.py",
      "category": "api_endpoint",
      "description": "logic node: on_agent_finish (API endpoint)"
    },
    {
      "id": "nl0221",
      "type": "logic",
      "name": "authenticate_and_get_openai_key",
      "function": "authenticate_and_get_openai_key",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: authenticate_and_get_openai_key (API endpoint)"
    },
    {
      "id": "nl0222",
      "type": "logic",
      "name": "get_client",
      "function": "get_client",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: get_client (API endpoint)"
    },
    {
      "id": "nl0223",
      "type": "logic",
      "name": "add_message_to_db",
      "function": "add_message_to_db",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: add_message_to_db (API endpoint)"
    },
    {
      "id": "nl0224",
      "type": "logic",
      "name": "wait_for_sender_change",
      "function": "wait_for_sender_change",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: wait_for_sender_change (API endpoint)"
    },
    {
      "id": "nl0225",
      "type": "logic",
      "name": "process_message_queue",
      "function": "process_message_queue",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: process_message_queue (API endpoint)"
    },
    {
      "id": "nl0226",
      "type": "logic",
      "name": "close",
      "function": "close",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: close (API endpoint)"
    },
    {
      "id": "nl0227",
      "type": "logic",
      "name": "handle_function_call",
      "function": "handle_function_call",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: handle_function_call (API endpoint)"
    },
    {
      "id": "nl0228",
      "type": "logic",
      "name": "get_flow_desc_from_db",
      "function": "get_flow_desc_from_db",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: get_flow_desc_from_db (API endpoint)"
    },
    {
      "id": "nl0229",
      "type": "logic",
      "name": "get_or_create_elevenlabs_client",
      "function": "get_or_create_elevenlabs_client",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: get_or_create_elevenlabs_client (API endpoint)"
    },
    {
      "id": "nl0230",
      "type": "logic",
      "name": "text_chunker_with_timeout",
      "function": "text_chunker_with_timeout",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: text_chunker_with_timeout (API endpoint)"
    },
    {
      "id": "nl0231",
      "type": "logic",
      "name": "queue_generator",
      "function": "queue_generator",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: queue_generator (API endpoint)"
    },
    {
      "id": "nl0232",
      "type": "logic",
      "name": "flow_as_tool_websocket_no_session",
      "function": "flow_as_tool_websocket_no_session",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: flow_as_tool_websocket_no_session (API endpoint)"
    },
    {
      "id": "nl0233",
      "type": "logic",
      "name": "flow_as_tool_websocket",
      "function": "flow_as_tool_websocket",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: flow_as_tool_websocket (API endpoint)"
    },
    {
      "id": "nl0234",
      "type": "logic",
      "name": "process_vad_audio",
      "function": "process_vad_audio",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: process_vad_audio (API endpoint)"
    },
    {
      "id": "nl0235",
      "type": "logic",
      "name": "process_text_deltas",
      "function": "process_text_deltas",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: process_text_deltas (API endpoint)"
    },
    {
      "id": "nl0236",
      "type": "logic",
      "name": "get_chunks",
      "function": "get_chunks",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: get_chunks (API endpoint)"
    },
    {
      "id": "nl0237",
      "type": "logic",
      "name": "forward_to_openai",
      "function": "forward_to_openai",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: forward_to_openai (API endpoint)"
    },
    {
      "id": "nl0238",
      "type": "logic",
      "name": "forward_to_client",
      "function": "forward_to_client",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: forward_to_client (API endpoint)"
    },
    {
      "id": "nl0239",
      "type": "logic",
      "name": "close",
      "function": "close",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: close (API endpoint)"
    },
    {
      "id": "nl0240",
      "type": "logic",
      "name": "flow_tts_websocket_no_session",
      "function": "flow_tts_websocket_no_session",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: flow_tts_websocket_no_session (API endpoint)"
    },
    {
      "id": "nl0241",
      "type": "logic",
      "name": "flow_tts_websocket",
      "function": "flow_tts_websocket",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: flow_tts_websocket (API endpoint)"
    },
    {
      "id": "nl0242",
      "type": "logic",
      "name": "openai_writer",
      "function": "openai_writer",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: openai_writer (API endpoint)"
    },
    {
      "id": "nl0243",
      "type": "logic",
      "name": "client_writer",
      "function": "client_writer",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: client_writer (API endpoint)"
    },
    {
      "id": "nl0244",
      "type": "logic",
      "name": "close",
      "function": "close",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: close (API endpoint)"
    },
    {
      "id": "nl0245",
      "type": "logic",
      "name": "forward_to_openai",
      "function": "forward_to_openai",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: forward_to_openai (API endpoint)"
    },
    {
      "id": "nl0246",
      "type": "logic",
      "name": "forward_to_client",
      "function": "forward_to_client",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: forward_to_client (API endpoint)"
    },
    {
      "id": "nl0247",
      "type": "logic",
      "name": "get_elevenlabs_voice_ids",
      "function": "get_elevenlabs_voice_ids",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: get_elevenlabs_voice_ids (API endpoint)"
    },
    {
      "id": "nl0248",
      "type": "logic",
      "name": "get_vad",
      "function": "get_vad",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: get_vad (API endpoint)"
    },
    {
      "id": "nl0249",
      "type": "logic",
      "name": "get_voice_config",
      "function": "get_voice_config",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: get_voice_config (API endpoint)"
    },
    {
      "id": "nl0250",
      "type": "logic",
      "name": "get_tts_config",
      "function": "get_tts_config",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: get_tts_config (API endpoint)"
    },
    {
      "id": "nl0251",
      "type": "logic",
      "name": "get_create_response",
      "function": "get_create_response",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: get_create_response (API endpoint)"
    },
    {
      "id": "nl0252",
      "type": "logic",
      "name": "pcm16_to_float_array",
      "function": "pcm16_to_float_array",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: pcm16_to_float_array (API endpoint)"
    },
    {
      "id": "nl0253",
      "type": "logic",
      "name": "create_event_logger",
      "function": "create_event_logger",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: create_event_logger (API endpoint)"
    },
    {
      "id": "nl0254",
      "type": "logic",
      "name": "mark_response_done",
      "function": "mark_response_done",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: mark_response_done (API endpoint)"
    },
    {
      "id": "nl0255",
      "type": "logic",
      "name": "is_response_done",
      "function": "is_response_done",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: is_response_done (API endpoint)"
    },
    {
      "id": "nl0256",
      "type": "logic",
      "name": "extract_transcript",
      "function": "extract_transcript",
      "path": "backend/base/langbuilder/api/v1/voice_mode.py",
      "category": "api_endpoint",
      "description": "logic node: extract_transcript (API endpoint)"
    },
    {
      "id": "nl0257",
      "type": "logic",
      "name": "get_vertex_builds",
      "function": "get_vertex_builds",
      "path": "backend/base/langbuilder/api/v1/monitor.py",
      "category": "api_endpoint",
      "description": "logic node: get_vertex_builds (API endpoint)"
    },
    {
      "id": "nl0258",
      "type": "logic",
      "name": "delete_vertex_builds",
      "function": "delete_vertex_builds",
      "path": "backend/base/langbuilder/api/v1/monitor.py",
      "category": "api_endpoint",
      "description": "logic node: delete_vertex_builds (API endpoint)"
    },
    {
      "id": "nl0259",
      "type": "logic",
      "name": "get_message_sessions",
      "function": "get_message_sessions",
      "path": "backend/base/langbuilder/api/v1/monitor.py",
      "category": "api_endpoint",
      "description": "logic node: get_message_sessions (API endpoint)"
    },
    {
      "id": "nl0260",
      "type": "logic",
      "name": "get_messages",
      "function": "get_messages",
      "path": "backend/base/langbuilder/api/v1/monitor.py",
      "category": "api_endpoint",
      "description": "logic node: get_messages (API endpoint)"
    },
    {
      "id": "nl0261",
      "type": "logic",
      "name": "delete_messages",
      "function": "delete_messages",
      "path": "backend/base/langbuilder/api/v1/monitor.py",
      "category": "api_endpoint",
      "description": "logic node: delete_messages (API endpoint)"
    },
    {
      "id": "nl0262",
      "type": "logic",
      "name": "update_message",
      "function": "update_message",
      "path": "backend/base/langbuilder/api/v1/monitor.py",
      "category": "api_endpoint",
      "description": "logic node: update_message (API endpoint)"
    },
    {
      "id": "nl0263",
      "type": "logic",
      "name": "update_session_id",
      "function": "update_session_id",
      "path": "backend/base/langbuilder/api/v1/monitor.py",
      "category": "api_endpoint",
      "description": "logic node: update_session_id (API endpoint)"
    },
    {
      "id": "nl0264",
      "type": "logic",
      "name": "delete_messages_session",
      "function": "delete_messages_session",
      "path": "backend/base/langbuilder/api/v1/monitor.py",
      "category": "api_endpoint",
      "description": "logic node: delete_messages_session (API endpoint)"
    },
    {
      "id": "nl0265",
      "type": "logic",
      "name": "get_transactions",
      "function": "get_transactions",
      "path": "backend/base/langbuilder/api/v1/monitor.py",
      "category": "api_endpoint",
      "description": "logic node: get_transactions (API endpoint)"
    },
    {
      "id": "nl0266",
      "type": "logic",
      "name": "wrapper",
      "function": "wrapper",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: wrapper (API endpoint)"
    },
    {
      "id": "nl0267",
      "type": "logic",
      "name": "with_db_session",
      "function": "with_db_session",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: with_db_session (API endpoint)"
    },
    {
      "id": "nl0268",
      "type": "logic",
      "name": "handle_list_resources",
      "function": "handle_list_resources",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: handle_list_resources (API endpoint)"
    },
    {
      "id": "nl0269",
      "type": "logic",
      "name": "handle_read_resource",
      "function": "handle_read_resource",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: handle_read_resource (API endpoint)"
    },
    {
      "id": "nl0270",
      "type": "logic",
      "name": "handle_call_tool",
      "function": "handle_call_tool",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: handle_call_tool (API endpoint)"
    },
    {
      "id": "nl0271",
      "type": "logic",
      "name": "execute_tool",
      "function": "execute_tool",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: execute_tool (API endpoint)"
    },
    {
      "id": "nl0272",
      "type": "logic",
      "name": "send_progress_updates",
      "function": "send_progress_updates",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: send_progress_updates (API endpoint)"
    },
    {
      "id": "nl0273",
      "type": "logic",
      "name": "handle_list_tools",
      "function": "handle_list_tools",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: handle_list_tools (API endpoint)"
    },
    {
      "id": "nl0274",
      "type": "logic",
      "name": "handle_mcp_errors",
      "function": "handle_mcp_errors",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: handle_mcp_errors (API endpoint)"
    },
    {
      "id": "nl0275",
      "type": "logic",
      "name": "get_mcp_config",
      "function": "get_mcp_config",
      "path": "backend/base/langbuilder/api/v1/mcp_utils.py",
      "category": "api_endpoint",
      "description": "logic node: get_mcp_config (API endpoint)"
    },
    {
      "id": "nl0276",
      "type": "logic",
      "name": "post_validate_code",
      "function": "post_validate_code",
      "path": "backend/base/langbuilder/api/v1/validate.py",
      "category": "api_endpoint",
      "description": "logic node: post_validate_code (API endpoint)"
    },
    {
      "id": "nl0277",
      "type": "logic",
      "name": "post_validate_prompt",
      "function": "post_validate_prompt",
      "path": "backend/base/langbuilder/api/v1/validate.py",
      "category": "api_endpoint",
      "description": "logic node: post_validate_prompt (API endpoint)"
    },
    {
      "id": "nl0278",
      "type": "logic",
      "name": "list_project_tools",
      "function": "list_project_tools",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: list_project_tools (API endpoint)"
    },
    {
      "id": "nl0279",
      "type": "logic",
      "name": "handle_project_sse",
      "function": "handle_project_sse",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: handle_project_sse (API endpoint)"
    },
    {
      "id": "nl0280",
      "type": "logic",
      "name": "handle_project_messages",
      "function": "handle_project_messages",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: handle_project_messages (API endpoint)"
    },
    {
      "id": "nl0281",
      "type": "logic",
      "name": "handle_project_messages_with_slash",
      "function": "handle_project_messages_with_slash",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: handle_project_messages_with_slash (API endpoint)"
    },
    {
      "id": "nl0282",
      "type": "logic",
      "name": "update_project_mcp_settings",
      "function": "update_project_mcp_settings",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: update_project_mcp_settings (API endpoint)"
    },
    {
      "id": "nl0283",
      "type": "logic",
      "name": "install_mcp_config",
      "function": "install_mcp_config",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: install_mcp_config (API endpoint)"
    },
    {
      "id": "nl0284",
      "type": "logic",
      "name": "check_installed_mcp_servers",
      "function": "check_installed_mcp_servers",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: check_installed_mcp_servers (API endpoint)"
    },
    {
      "id": "nl0285",
      "type": "logic",
      "name": "handle_list_project_tools",
      "function": "handle_list_project_tools",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: handle_list_project_tools (API endpoint)"
    },
    {
      "id": "nl0286",
      "type": "logic",
      "name": "handle_list_project_resources",
      "function": "handle_list_project_resources",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: handle_list_project_resources (API endpoint)"
    },
    {
      "id": "nl0287",
      "type": "logic",
      "name": "handle_read_project_resource",
      "function": "handle_read_project_resource",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: handle_read_project_resource (API endpoint)"
    },
    {
      "id": "nl0288",
      "type": "logic",
      "name": "handle_call_project_tool",
      "function": "handle_call_project_tool",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: handle_call_project_tool (API endpoint)"
    },
    {
      "id": "nl0289",
      "type": "logic",
      "name": "init_mcp_servers",
      "function": "init_mcp_servers",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: init_mcp_servers (API endpoint)"
    },
    {
      "id": "nl0290",
      "type": "logic",
      "name": "get_project_sse",
      "function": "get_project_sse",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: get_project_sse (API endpoint)"
    },
    {
      "id": "nl0291",
      "type": "logic",
      "name": "is_local_ip",
      "function": "is_local_ip",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: is_local_ip (API endpoint)"
    },
    {
      "id": "nl0292",
      "type": "logic",
      "name": "get_client_ip",
      "function": "get_client_ip",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: get_client_ip (API endpoint)"
    },
    {
      "id": "nl0293",
      "type": "logic",
      "name": "get_project_mcp_server",
      "function": "get_project_mcp_server",
      "path": "backend/base/langbuilder/api/v1/mcp_projects.py",
      "category": "api_endpoint",
      "description": "logic node: get_project_mcp_server (API endpoint)"
    },
    {
      "id": "nl0294",
      "type": "logic",
      "name": "get_starter_projects",
      "function": "get_starter_projects",
      "path": "backend/base/langbuilder/api/v1/starter_projects.py",
      "category": "api_endpoint",
      "description": "logic node: get_starter_projects (API endpoint)"
    },
    {
      "id": "nl0295",
      "type": "logic",
      "name": "create_folder_redirect",
      "function": "create_folder_redirect",
      "path": "backend/base/langbuilder/api/v1/folders.py",
      "category": "api_endpoint",
      "description": "logic node: create_folder_redirect (API endpoint)"
    },
    {
      "id": "nl0296",
      "type": "logic",
      "name": "read_folders_redirect",
      "function": "read_folders_redirect",
      "path": "backend/base/langbuilder/api/v1/folders.py",
      "category": "api_endpoint",
      "description": "logic node: read_folders_redirect (API endpoint)"
    },
    {
      "id": "nl0297",
      "type": "logic",
      "name": "read_folder_redirect",
      "function": "read_folder_redirect",
      "path": "backend/base/langbuilder/api/v1/folders.py",
      "category": "api_endpoint",
      "description": "logic node: read_folder_redirect (API endpoint)"
    },
    {
      "id": "nl0298",
      "type": "logic",
      "name": "update_folder_redirect",
      "function": "update_folder_redirect",
      "path": "backend/base/langbuilder/api/v1/folders.py",
      "category": "api_endpoint",
      "description": "logic node: update_folder_redirect (API endpoint)"
    },
    {
      "id": "nl0299",
      "type": "logic",
      "name": "delete_folder_redirect",
      "function": "delete_folder_redirect",
      "path": "backend/base/langbuilder/api/v1/folders.py",
      "category": "api_endpoint",
      "description": "logic node: delete_folder_redirect (API endpoint)"
    },
    {
      "id": "nl0300",
      "type": "logic",
      "name": "download_file_redirect",
      "function": "download_file_redirect",
      "path": "backend/base/langbuilder/api/v1/folders.py",
      "category": "api_endpoint",
      "description": "logic node: download_file_redirect (API endpoint)"
    },
    {
      "id": "nl0301",
      "type": "logic",
      "name": "upload_file_redirect",
      "function": "upload_file_redirect",
      "path": "backend/base/langbuilder/api/v1/folders.py",
      "category": "api_endpoint",
      "description": "logic node: upload_file_redirect (API endpoint)"
    },
    {
      "id": "nl0302",
      "type": "logic",
      "name": "simple_run_flow",
      "function": "simple_run_flow",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: simple_run_flow (API endpoint)"
    },
    {
      "id": "nl0303",
      "type": "logic",
      "name": "simple_run_flow_task",
      "function": "simple_run_flow_task",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: simple_run_flow_task (API endpoint)"
    },
    {
      "id": "nl0304",
      "type": "logic",
      "name": "consume_and_yield",
      "function": "consume_and_yield",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: consume_and_yield (API endpoint)"
    },
    {
      "id": "nl0305",
      "type": "logic",
      "name": "run_flow_generator",
      "function": "run_flow_generator",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: run_flow_generator (API endpoint)"
    },
    {
      "id": "nl0306",
      "type": "logic",
      "name": "simplified_run_flow",
      "function": "simplified_run_flow",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: simplified_run_flow (API endpoint)"
    },
    {
      "id": "nl0307",
      "type": "logic",
      "name": "on_disconnect",
      "function": "on_disconnect",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: on_disconnect (API endpoint)"
    },
    {
      "id": "nl0308",
      "type": "logic",
      "name": "webhook_run_flow",
      "function": "webhook_run_flow",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: webhook_run_flow (API endpoint)"
    },
    {
      "id": "nl0309",
      "type": "logic",
      "name": "experimental_run_flow",
      "function": "experimental_run_flow",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: experimental_run_flow (API endpoint)"
    },
    {
      "id": "nl0310",
      "type": "logic",
      "name": "process",
      "function": "process",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: process (API endpoint)"
    },
    {
      "id": "nl0311",
      "type": "logic",
      "name": "get_task_status",
      "function": "get_task_status",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: get_task_status (API endpoint)"
    },
    {
      "id": "nl0312",
      "type": "logic",
      "name": "create_upload_file",
      "function": "create_upload_file",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: create_upload_file (API endpoint)"
    },
    {
      "id": "nl0313",
      "type": "logic",
      "name": "get_version",
      "function": "get_version",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: get_version (API endpoint)"
    },
    {
      "id": "nl0314",
      "type": "logic",
      "name": "custom_component",
      "function": "custom_component",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: custom_component (API endpoint)"
    },
    {
      "id": "nl0315",
      "type": "logic",
      "name": "custom_component_update",
      "function": "custom_component_update",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: custom_component_update (API endpoint)"
    },
    {
      "id": "nl0316",
      "type": "logic",
      "name": "get_config",
      "function": "get_config",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: get_config (API endpoint)"
    },
    {
      "id": "nl0317",
      "type": "logic",
      "name": "validate_input_and_tweaks",
      "function": "validate_input_and_tweaks",
      "path": "backend/base/langbuilder/api/v1/endpoints.py",
      "category": "api_endpoint",
      "description": "logic node: validate_input_and_tweaks (API endpoint)"
    },
    {
      "id": "nl0318",
      "type": "logic",
      "name": "get_session",
      "function": "get_session",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_session (Service function)"
    },
    {
      "id": "nl0319",
      "type": "logic",
      "name": "session_scope",
      "function": "session_scope",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: session_scope (Service function)"
    },
    {
      "id": "nl0320",
      "type": "logic",
      "name": "get_service",
      "function": "get_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_service (Service function)"
    },
    {
      "id": "nl0321",
      "type": "logic",
      "name": "get_telemetry_service",
      "function": "get_telemetry_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_telemetry_service (Service function)"
    },
    {
      "id": "nl0322",
      "type": "logic",
      "name": "get_tracing_service",
      "function": "get_tracing_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_tracing_service (Service function)"
    },
    {
      "id": "nl0323",
      "type": "logic",
      "name": "get_state_service",
      "function": "get_state_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_state_service (Service function)"
    },
    {
      "id": "nl0324",
      "type": "logic",
      "name": "get_socket_service",
      "function": "get_socket_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_socket_service (Service function)"
    },
    {
      "id": "nl0325",
      "type": "logic",
      "name": "get_storage_service",
      "function": "get_storage_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_storage_service (Service function)"
    },
    {
      "id": "nl0326",
      "type": "logic",
      "name": "get_variable_service",
      "function": "get_variable_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_variable_service (Service function)"
    },
    {
      "id": "nl0327",
      "type": "logic",
      "name": "get_settings_service",
      "function": "get_settings_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_settings_service (Service function)"
    },
    {
      "id": "nl0328",
      "type": "logic",
      "name": "get_db_service",
      "function": "get_db_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_db_service (Service function)"
    },
    {
      "id": "nl0329",
      "type": "logic",
      "name": "get_cache_service",
      "function": "get_cache_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_cache_service (Service function)"
    },
    {
      "id": "nl0330",
      "type": "logic",
      "name": "get_shared_component_cache_service",
      "function": "get_shared_component_cache_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_shared_component_cache_service (Service function)"
    },
    {
      "id": "nl0331",
      "type": "logic",
      "name": "get_session_service",
      "function": "get_session_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_session_service (Service function)"
    },
    {
      "id": "nl0332",
      "type": "logic",
      "name": "get_task_service",
      "function": "get_task_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_task_service (Service function)"
    },
    {
      "id": "nl0333",
      "type": "logic",
      "name": "get_chat_service",
      "function": "get_chat_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_chat_service (Service function)"
    },
    {
      "id": "nl0334",
      "type": "logic",
      "name": "get_store_service",
      "function": "get_store_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_store_service (Service function)"
    },
    {
      "id": "nl0335",
      "type": "logic",
      "name": "get_queue_service",
      "function": "get_queue_service",
      "path": "backend/base/langbuilder/services/deps.py",
      "category": "service",
      "description": "logic node: get_queue_service (Service function)"
    },
    {
      "id": "nl0336",
      "type": "logic",
      "name": "hash_factory",
      "function": "hash_factory",
      "path": "backend/base/langbuilder/services/factory.py",
      "category": "service",
      "description": "logic node: hash_factory (Service function)"
    },
    {
      "id": "nl0337",
      "type": "logic",
      "name": "hash_dict",
      "function": "hash_dict",
      "path": "backend/base/langbuilder/services/factory.py",
      "category": "service",
      "description": "logic node: hash_dict (Service function)"
    },
    {
      "id": "nl0338",
      "type": "logic",
      "name": "hash_infer_service_types_args",
      "function": "hash_infer_service_types_args",
      "path": "backend/base/langbuilder/services/factory.py",
      "category": "service",
      "description": "logic node: hash_infer_service_types_args (Service function)"
    },
    {
      "id": "nl0339",
      "type": "logic",
      "name": "infer_service_types",
      "function": "infer_service_types",
      "path": "backend/base/langbuilder/services/factory.py",
      "category": "service",
      "description": "logic node: infer_service_types (Service function)"
    },
    {
      "id": "nl0340",
      "type": "logic",
      "name": "import_all_services_into_a_dict",
      "function": "import_all_services_into_a_dict",
      "path": "backend/base/langbuilder/services/factory.py",
      "category": "service",
      "description": "logic node: import_all_services_into_a_dict (Service function)"
    },
    {
      "id": "nl0341",
      "type": "logic",
      "name": "get_or_create_super_user",
      "function": "get_or_create_super_user",
      "path": "backend/base/langbuilder/services/utils.py",
      "category": "service",
      "description": "logic node: get_or_create_super_user (Service function)"
    },
    {
      "id": "nl0342",
      "type": "logic",
      "name": "setup_superuser",
      "function": "setup_superuser",
      "path": "backend/base/langbuilder/services/utils.py",
      "category": "service",
      "description": "logic node: setup_superuser (Service function)"
    },
    {
      "id": "nl0343",
      "type": "logic",
      "name": "teardown_superuser",
      "function": "teardown_superuser",
      "path": "backend/base/langbuilder/services/utils.py",
      "category": "service",
      "description": "logic node: teardown_superuser (Service function)"
    },
    {
      "id": "nl0344",
      "type": "logic",
      "name": "teardown_services",
      "function": "teardown_services",
      "path": "backend/base/langbuilder/services/utils.py",
      "category": "service",
      "description": "logic node: teardown_services (Service function)"
    },
    {
      "id": "nl0345",
      "type": "logic",
      "name": "clean_transactions",
      "function": "clean_transactions",
      "path": "backend/base/langbuilder/services/utils.py",
      "category": "service",
      "description": "logic node: clean_transactions (Service function)"
    },
    {
      "id": "nl0346",
      "type": "logic",
      "name": "clean_vertex_builds",
      "function": "clean_vertex_builds",
      "path": "backend/base/langbuilder/services/utils.py",
      "category": "service",
      "description": "logic node: clean_vertex_builds (Service function)"
    },
    {
      "id": "nl0347",
      "type": "logic",
      "name": "initialize_services",
      "function": "initialize_services",
      "path": "backend/base/langbuilder/services/utils.py",
      "category": "service",
      "description": "logic node: initialize_services (Service function)"
    },
    {
      "id": "nl0348",
      "type": "logic",
      "name": "initialize_settings_service",
      "function": "initialize_settings_service",
      "path": "backend/base/langbuilder/services/utils.py",
      "category": "service",
      "description": "logic node: initialize_settings_service (Service function)"
    },
    {
      "id": "nl0349",
      "type": "logic",
      "name": "initialize_session_service",
      "function": "initialize_session_service",
      "path": "backend/base/langbuilder/services/utils.py",
      "category": "service",
      "description": "logic node: initialize_session_service (Service function)"
    },
    {
      "id": "nl0350",
      "type": "logic",
      "name": "initialize_settings_service",
      "function": "initialize_settings_service",
      "path": "backend/base/langbuilder/services/manager.py",
      "category": "service",
      "description": "logic node: initialize_settings_service (Service function)"
    },
    {
      "id": "nl0351",
      "type": "logic",
      "name": "initialize_session_service",
      "function": "initialize_session_service",
      "path": "backend/base/langbuilder/services/manager.py",
      "category": "service",
      "description": "logic node: initialize_session_service (Service function)"
    },
    {
      "id": "nl0352",
      "type": "logic",
      "name": "set_secure_permissions",
      "function": "set_secure_permissions",
      "path": "backend/base/langbuilder/services/settings/utils.py",
      "category": "service",
      "description": "logic node: set_secure_permissions (Service function)"
    },
    {
      "id": "nl0353",
      "type": "logic",
      "name": "write_secret_to_file",
      "function": "write_secret_to_file",
      "path": "backend/base/langbuilder/services/settings/utils.py",
      "category": "service",
      "description": "logic node: write_secret_to_file (Service function)"
    },
    {
      "id": "nl0354",
      "type": "logic",
      "name": "read_secret_from_file",
      "function": "read_secret_from_file",
      "path": "backend/base/langbuilder/services/settings/utils.py",
      "category": "service",
      "description": "logic node: read_secret_from_file (Service function)"
    },
    {
      "id": "nl0355",
      "type": "logic",
      "name": "update_from_yaml",
      "function": "update_from_yaml",
      "path": "backend/base/langbuilder/services/settings/base.py",
      "category": "service",
      "description": "logic node: update_from_yaml (Service function)"
    },
    {
      "id": "nl0356",
      "type": "logic",
      "name": "load_settings_from_yaml",
      "function": "load_settings_from_yaml",
      "path": "backend/base/langbuilder/services/settings/base.py",
      "category": "service",
      "description": "logic node: load_settings_from_yaml (Service function)"
    },
    {
      "id": "nl0357",
      "type": "logic",
      "name": "is_list_of_any",
      "function": "is_list_of_any",
      "path": "backend/base/langbuilder/services/settings/base.py",
      "category": "service",
      "description": "logic node: is_list_of_any (Service function)"
    },
    {
      "id": "nl0358",
      "type": "logic",
      "name": "save_settings_to_yaml",
      "function": "save_settings_to_yaml",
      "path": "backend/base/langbuilder/services/settings/base.py",
      "category": "service",
      "description": "logic node: save_settings_to_yaml (Service function)"
    },
    {
      "id": "nl0359",
      "type": "logic",
      "name": "run_sync",
      "function": "run_sync",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: run_sync (Service function)"
    },
    {
      "id": "nl0360",
      "type": "logic",
      "name": "add",
      "function": "add",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: add (Service function)"
    },
    {
      "id": "nl0361",
      "type": "logic",
      "name": "commit",
      "function": "commit",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: commit (Service function)"
    },
    {
      "id": "nl0362",
      "type": "logic",
      "name": "rollback",
      "function": "rollback",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: rollback (Service function)"
    },
    {
      "id": "nl0363",
      "type": "logic",
      "name": "execute",
      "function": "execute",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: execute (Service function)"
    },
    {
      "id": "nl0364",
      "type": "logic",
      "name": "query",
      "function": "query",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: query (Service function)"
    },
    {
      "id": "nl0365",
      "type": "logic",
      "name": "close",
      "function": "close",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: close (Service function)"
    },
    {
      "id": "nl0366",
      "type": "logic",
      "name": "refresh",
      "function": "refresh",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: refresh (Service function)"
    },
    {
      "id": "nl0367",
      "type": "logic",
      "name": "delete",
      "function": "delete",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: delete (Service function)"
    },
    {
      "id": "nl0368",
      "type": "logic",
      "name": "get",
      "function": "get",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: get (Service function)"
    },
    {
      "id": "nl0369",
      "type": "logic",
      "name": "exec",
      "function": "exec",
      "path": "backend/base/langbuilder/services/database/session.py",
      "category": "service",
      "description": "logic node: exec (Service function)"
    },
    {
      "id": "nl0370",
      "type": "logic",
      "name": "initialize_database",
      "function": "initialize_database",
      "path": "backend/base/langbuilder/services/database/utils.py",
      "category": "service",
      "description": "logic node: initialize_database (Service function)"
    },
    {
      "id": "nl0371",
      "type": "logic",
      "name": "session_getter",
      "function": "session_getter",
      "path": "backend/base/langbuilder/services/database/utils.py",
      "category": "service",
      "description": "logic node: session_getter (Service function)"
    },
    {
      "id": "nl0372",
      "type": "logic",
      "name": "start_tracers",
      "function": "start_tracers",
      "path": "backend/base/langbuilder/services/tracing/service.py",
      "category": "service",
      "description": "logic node: start_tracers (Service function)"
    },
    {
      "id": "nl0373",
      "type": "logic",
      "name": "end_tracers",
      "function": "end_tracers",
      "path": "backend/base/langbuilder/services/tracing/service.py",
      "category": "service",
      "description": "logic node: end_tracers (Service function)"
    },
    {
      "id": "nl0374",
      "type": "logic",
      "name": "trace_component",
      "function": "trace_component",
      "path": "backend/base/langbuilder/services/tracing/service.py",
      "category": "service",
      "description": "logic node: trace_component (Service function)"
    },
    {
      "id": "nl0375",
      "type": "logic",
      "name": "get_distributed_trace_headers",
      "function": "get_distributed_trace_headers",
      "path": "backend/base/langbuilder/services/tracing/opik.py",
      "category": "service",
      "description": "logic node: get_distributed_trace_headers (Service function)"
    },
    {
      "id": "nl0376",
      "type": "logic",
      "name": "convert_to_langchain_type",
      "function": "convert_to_langchain_type",
      "path": "backend/base/langbuilder/services/tracing/utils.py",
      "category": "service",
      "description": "logic node: convert_to_langchain_type (Service function)"
    },
    {
      "id": "nl0377",
      "type": "logic",
      "name": "convert_to_langchain_types",
      "function": "convert_to_langchain_types",
      "path": "backend/base/langbuilder/services/tracing/utils.py",
      "category": "service",
      "description": "logic node: convert_to_langchain_types (Service function)"
    },
    {
      "id": "nl0378",
      "type": "logic",
      "name": "is_connected",
      "function": "is_connected",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: is_connected (Service function)"
    },
    {
      "id": "nl0379",
      "type": "logic",
      "name": "get",
      "function": "get",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: get (Service function)"
    },
    {
      "id": "nl0380",
      "type": "logic",
      "name": "set",
      "function": "set",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: set (Service function)"
    },
    {
      "id": "nl0381",
      "type": "logic",
      "name": "upsert",
      "function": "upsert",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: upsert (Service function)"
    },
    {
      "id": "nl0382",
      "type": "logic",
      "name": "delete",
      "function": "delete",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: delete (Service function)"
    },
    {
      "id": "nl0383",
      "type": "logic",
      "name": "clear",
      "function": "clear",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: clear (Service function)"
    },
    {
      "id": "nl0384",
      "type": "logic",
      "name": "contains",
      "function": "contains",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: contains (Service function)"
    },
    {
      "id": "nl0385",
      "type": "logic",
      "name": "get",
      "function": "get",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: get (Service function)"
    },
    {
      "id": "nl0386",
      "type": "logic",
      "name": "set",
      "function": "set",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: set (Service function)"
    },
    {
      "id": "nl0387",
      "type": "logic",
      "name": "delete",
      "function": "delete",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: delete (Service function)"
    },
    {
      "id": "nl0388",
      "type": "logic",
      "name": "clear",
      "function": "clear",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: clear (Service function)"
    },
    {
      "id": "nl0389",
      "type": "logic",
      "name": "upsert",
      "function": "upsert",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: upsert (Service function)"
    },
    {
      "id": "nl0390",
      "type": "logic",
      "name": "contains",
      "function": "contains",
      "path": "backend/base/langbuilder/services/cache/service.py",
      "category": "service",
      "description": "logic node: contains (Service function)"
    },
    {
      "id": "nl0391",
      "type": "logic",
      "name": "get",
      "function": "get",
      "path": "backend/base/langbuilder/services/cache/disk.py",
      "category": "service",
      "description": "logic node: get (Service function)"
    },
    {
      "id": "nl0392",
      "type": "logic",
      "name": "set",
      "function": "set",
      "path": "backend/base/langbuilder/services/cache/disk.py",
      "category": "service",
      "description": "logic node: set (Service function)"
    },
    {
      "id": "nl0393",
      "type": "logic",
      "name": "delete",
      "function": "delete",
      "path": "backend/base/langbuilder/services/cache/disk.py",
      "category": "service",
      "description": "logic node: delete (Service function)"
    },
    {
      "id": "nl0394",
      "type": "logic",
      "name": "clear",
      "function": "clear",
      "path": "backend/base/langbuilder/services/cache/disk.py",
      "category": "service",
      "description": "logic node: clear (Service function)"
    },
    {
      "id": "nl0395",
      "type": "logic",
      "name": "upsert",
      "function": "upsert",
      "path": "backend/base/langbuilder/services/cache/disk.py",
      "category": "service",
      "description": "logic node: upsert (Service function)"
    },
    {
      "id": "nl0396",
      "type": "logic",
      "name": "contains",
      "function": "contains",
      "path": "backend/base/langbuilder/services/cache/disk.py",
      "category": "service",
      "description": "logic node: contains (Service function)"
    },
    {
      "id": "nl0397",
      "type": "logic",
      "name": "create_cache_folder",
      "function": "create_cache_folder",
      "path": "backend/base/langbuilder/services/cache/utils.py",
      "category": "service",
      "description": "logic node: create_cache_folder (Service function)"
    },
    {
      "id": "nl0398",
      "type": "logic",
      "name": "clear_old_cache_files",
      "function": "clear_old_cache_files",
      "path": "backend/base/langbuilder/services/cache/utils.py",
      "category": "service",
      "description": "logic node: clear_old_cache_files (Service function)"
    },
    {
      "id": "nl0399",
      "type": "logic",
      "name": "filter_json",
      "function": "filter_json",
      "path": "backend/base/langbuilder/services/cache/utils.py",
      "category": "service",
      "description": "logic node: filter_json (Service function)"
    },
    {
      "id": "nl0400",
      "type": "logic",
      "name": "save_binary_file",
      "function": "save_binary_file",
      "path": "backend/base/langbuilder/services/cache/utils.py",
      "category": "service",
      "description": "logic node: save_binary_file (Service function)"
    },
    {
      "id": "nl0401",
      "type": "logic",
      "name": "save_uploaded_file",
      "function": "save_uploaded_file",
      "path": "backend/base/langbuilder/services/cache/utils.py",
      "category": "service",
      "description": "logic node: save_uploaded_file (Service function)"
    },
    {
      "id": "nl0402",
      "type": "logic",
      "name": "update_build_status",
      "function": "update_build_status",
      "path": "backend/base/langbuilder/services/cache/utils.py",
      "category": "service",
      "description": "logic node: update_build_status (Service function)"
    },
    {
      "id": "nl0403",
      "type": "logic",
      "name": "get",
      "function": "get",
      "path": "backend/base/langbuilder/services/cache/base.py",
      "category": "service",
      "description": "logic node: get (Service function)"
    },
    {
      "id": "nl0404",
      "type": "logic",
      "name": "set",
      "function": "set",
      "path": "backend/base/langbuilder/services/cache/base.py",
      "category": "service",
      "description": "logic node: set (Service function)"
    },
    {
      "id": "nl0405",
      "type": "logic",
      "name": "upsert",
      "function": "upsert",
      "path": "backend/base/langbuilder/services/cache/base.py",
      "category": "service",
      "description": "logic node: upsert (Service function)"
    },
    {
      "id": "nl0406",
      "type": "logic",
      "name": "delete",
      "function": "delete",
      "path": "backend/base/langbuilder/services/cache/base.py",
      "category": "service",
      "description": "logic node: delete (Service function)"
    },
    {
      "id": "nl0407",
      "type": "logic",
      "name": "clear",
      "function": "clear",
      "path": "backend/base/langbuilder/services/cache/base.py",
      "category": "service",
      "description": "logic node: clear (Service function)"
    },
    {
      "id": "nl0408",
      "type": "logic",
      "name": "contains",
      "function": "contains",
      "path": "backend/base/langbuilder/services/cache/base.py",
      "category": "service",
      "description": "logic node: contains (Service function)"
    },
    {
      "id": "nl0409",
      "type": "logic",
      "name": "is_connected",
      "function": "is_connected",
      "path": "backend/base/langbuilder/services/cache/base.py",
      "category": "service",
      "description": "logic node: is_connected (Service function)"
    },
    {
      "id": "nl0410",
      "type": "logic",
      "name": "notify",
      "function": "notify",
      "path": "backend/base/langbuilder/services/chat/cache.py",
      "category": "service",
      "description": "logic node: notify (Service function)"
    },
    {
      "id": "nl0411",
      "type": "logic",
      "name": "encode_user_id",
      "function": "encode_user_id",
      "path": "backend/base/langbuilder/services/variable/kubernetes_secrets.py",
      "category": "service",
      "description": "logic node: encode_user_id (Service function)"
    },
    {
      "id": "nl0412",
      "type": "logic",
      "name": "api_key_security",
      "function": "api_key_security",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: api_key_security (Service function)"
    },
    {
      "id": "nl0413",
      "type": "logic",
      "name": "ws_api_key_security",
      "function": "ws_api_key_security",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: ws_api_key_security (Service function)"
    },
    {
      "id": "nl0414",
      "type": "logic",
      "name": "get_current_user",
      "function": "get_current_user",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_current_user (Service function)"
    },
    {
      "id": "nl0415",
      "type": "logic",
      "name": "get_current_user_by_jwt",
      "function": "get_current_user_by_jwt",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_current_user_by_jwt (Service function)"
    },
    {
      "id": "nl0416",
      "type": "logic",
      "name": "get_current_user_for_websocket",
      "function": "get_current_user_for_websocket",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_current_user_for_websocket (Service function)"
    },
    {
      "id": "nl0417",
      "type": "logic",
      "name": "get_current_active_user",
      "function": "get_current_active_user",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_current_active_user (Service function)"
    },
    {
      "id": "nl0418",
      "type": "logic",
      "name": "get_current_active_superuser",
      "function": "get_current_active_superuser",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_current_active_superuser (Service function)"
    },
    {
      "id": "nl0419",
      "type": "logic",
      "name": "create_super_user",
      "function": "create_super_user",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: create_super_user (Service function)"
    },
    {
      "id": "nl0420",
      "type": "logic",
      "name": "create_user_longterm_token",
      "function": "create_user_longterm_token",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: create_user_longterm_token (Service function)"
    },
    {
      "id": "nl0421",
      "type": "logic",
      "name": "create_user_tokens",
      "function": "create_user_tokens",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: create_user_tokens (Service function)"
    },
    {
      "id": "nl0422",
      "type": "logic",
      "name": "create_refresh_token",
      "function": "create_refresh_token",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: create_refresh_token (Service function)"
    },
    {
      "id": "nl0423",
      "type": "logic",
      "name": "authenticate_user",
      "function": "authenticate_user",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: authenticate_user (Service function)"
    },
    {
      "id": "nl0424",
      "type": "logic",
      "name": "get_current_user_mcp",
      "function": "get_current_user_mcp",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_current_user_mcp (Service function)"
    },
    {
      "id": "nl0425",
      "type": "logic",
      "name": "get_current_active_user_mcp",
      "function": "get_current_active_user_mcp",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_current_active_user_mcp (Service function)"
    },
    {
      "id": "nl0426",
      "type": "logic",
      "name": "verify_password",
      "function": "verify_password",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: verify_password (Service function)"
    },
    {
      "id": "nl0427",
      "type": "logic",
      "name": "get_password_hash",
      "function": "get_password_hash",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_password_hash (Service function)"
    },
    {
      "id": "nl0428",
      "type": "logic",
      "name": "create_token",
      "function": "create_token",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: create_token (Service function)"
    },
    {
      "id": "nl0429",
      "type": "logic",
      "name": "create_user_api_key",
      "function": "create_user_api_key",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: create_user_api_key (Service function)"
    },
    {
      "id": "nl0430",
      "type": "logic",
      "name": "get_user_id_from_token",
      "function": "get_user_id_from_token",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_user_id_from_token (Service function)"
    },
    {
      "id": "nl0431",
      "type": "logic",
      "name": "add_padding",
      "function": "add_padding",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: add_padding (Service function)"
    },
    {
      "id": "nl0432",
      "type": "logic",
      "name": "ensure_valid_key",
      "function": "ensure_valid_key",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: ensure_valid_key (Service function)"
    },
    {
      "id": "nl0433",
      "type": "logic",
      "name": "get_fernet",
      "function": "get_fernet",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: get_fernet (Service function)"
    },
    {
      "id": "nl0434",
      "type": "logic",
      "name": "encrypt_api_key",
      "function": "encrypt_api_key",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: encrypt_api_key (Service function)"
    },
    {
      "id": "nl0435",
      "type": "logic",
      "name": "decrypt_api_key",
      "function": "decrypt_api_key",
      "path": "backend/base/langbuilder/services/auth/utils.py",
      "category": "service",
      "description": "logic node: decrypt_api_key (Service function)"
    },
    {
      "id": "nl0436",
      "type": "logic",
      "name": "save_file",
      "function": "save_file",
      "path": "backend/base/langbuilder/services/storage/service.py",
      "category": "service",
      "description": "logic node: save_file (Service function)"
    },
    {
      "id": "nl0438",
      "type": "logic",
      "name": "get_file_size",
      "function": "get_file_size",
      "path": "backend/base/langbuilder/services/storage/service.py",
      "category": "service",
      "description": "logic node: get_file_size (Service function)"
    },
    {
      "id": "nl0439",
      "type": "logic",
      "name": "save_file",
      "function": "save_file",
      "path": "backend/base/langbuilder/services/storage/local.py",
      "category": "service",
      "description": "logic node: save_file (Service function)"
    },
    {
      "id": "nl0441",
      "type": "logic",
      "name": "get_file_size",
      "function": "get_file_size",
      "path": "backend/base/langbuilder/services/storage/local.py",
      "category": "service",
      "description": "logic node: get_file_size (Service function)"
    },
    {
      "id": "nl0442",
      "type": "logic",
      "name": "build_content_type_from_extension",
      "function": "build_content_type_from_extension",
      "path": "backend/base/langbuilder/services/storage/utils.py",
      "category": "service",
      "description": "logic node: build_content_type_from_extension (Service function)"
    },
    {
      "id": "nl0443",
      "type": "logic",
      "name": "save_file",
      "function": "save_file",
      "path": "backend/base/langbuilder/services/storage/s3.py",
      "category": "service",
      "description": "logic node: save_file (Service function)"
    },
    {
      "id": "nl0445",
      "type": "logic",
      "name": "get_file_size",
      "function": "get_file_size",
      "path": "backend/base/langbuilder/services/storage/s3.py",
      "category": "service",
      "description": "logic node: get_file_size (Service function)"
    },
    {
      "id": "nl0446",
      "type": "logic",
      "name": "launch_and_await_task",
      "function": "launch_and_await_task",
      "path": "backend/base/langbuilder/services/task/service.py",
      "category": "service",
      "description": "logic node: launch_and_await_task (Service function)"
    },
    {
      "id": "nl0447",
      "type": "logic",
      "name": "launch_task",
      "function": "launch_task",
      "path": "backend/base/langbuilder/services/task/service.py",
      "category": "service",
      "description": "logic node: launch_task (Service function)"
    },
    {
      "id": "nl0448",
      "type": "logic",
      "name": "cleanup_orphaned_records",
      "function": "cleanup_orphaned_records",
      "path": "backend/base/langbuilder/services/task/temp_flow_cleanup.py",
      "category": "service",
      "description": "logic node: cleanup_orphaned_records (Service function)"
    },
    {
      "id": "nl0449",
      "type": "logic",
      "name": "get_celery_worker_status",
      "function": "get_celery_worker_status",
      "path": "backend/base/langbuilder/services/task/utils.py",
      "category": "service",
      "description": "logic node: get_celery_worker_status (Service function)"
    },
    {
      "id": "nl0450",
      "type": "logic",
      "name": "run",
      "function": "run",
      "path": "backend/base/langbuilder/services/task/backends/anyio.py",
      "category": "service",
      "description": "logic node: run (Service function)"
    },
    {
      "id": "nl0451",
      "type": "logic",
      "name": "launch_task",
      "function": "launch_task",
      "path": "backend/base/langbuilder/services/task/backends/anyio.py",
      "category": "service",
      "description": "logic node: launch_task (Service function)"
    },
    {
      "id": "nl0452",
      "type": "logic",
      "name": "cleanup_task",
      "function": "cleanup_task",
      "path": "backend/base/langbuilder/services/task/backends/anyio.py",
      "category": "service",
      "description": "logic node: cleanup_task (Service function)"
    },
    {
      "id": "nl0453",
      "type": "logic",
      "name": "telemetry_worker",
      "function": "telemetry_worker",
      "path": "backend/base/langbuilder/services/telemetry/service.py",
      "category": "service",
      "description": "logic node: telemetry_worker (Service function)"
    },
    {
      "id": "nl0454",
      "type": "logic",
      "name": "send_telemetry_data",
      "function": "send_telemetry_data",
      "path": "backend/base/langbuilder/services/telemetry/service.py",
      "category": "service",
      "description": "logic node: send_telemetry_data (Service function)"
    },
    {
      "id": "nl0455",
      "type": "logic",
      "name": "log_package_run",
      "function": "log_package_run",
      "path": "backend/base/langbuilder/services/telemetry/service.py",
      "category": "service",
      "description": "logic node: log_package_run (Service function)"
    },
    {
      "id": "nl0456",
      "type": "logic",
      "name": "log_package_shutdown",
      "function": "log_package_shutdown",
      "path": "backend/base/langbuilder/services/telemetry/service.py",
      "category": "service",
      "description": "logic node: log_package_shutdown (Service function)"
    },
    {
      "id": "nl0457",
      "type": "logic",
      "name": "log_package_version",
      "function": "log_package_version",
      "path": "backend/base/langbuilder/services/telemetry/service.py",
      "category": "service",
      "description": "logic node: log_package_version (Service function)"
    },
    {
      "id": "nl0458",
      "type": "logic",
      "name": "log_package_playground",
      "function": "log_package_playground",
      "path": "backend/base/langbuilder/services/telemetry/service.py",
      "category": "service",
      "description": "logic node: log_package_playground (Service function)"
    },
    {
      "id": "nl0459",
      "type": "logic",
      "name": "log_package_component",
      "function": "log_package_component",
      "path": "backend/base/langbuilder/services/telemetry/service.py",
      "category": "service",
      "description": "logic node: log_package_component (Service function)"
    },
    {
      "id": "nl0460",
      "type": "logic",
      "name": "flush",
      "function": "flush",
      "path": "backend/base/langbuilder/services/telemetry/service.py",
      "category": "service",
      "description": "logic node: flush (Service function)"
    },
    {
      "id": "nl0461",
      "type": "logic",
      "name": "emit_error",
      "function": "emit_error",
      "path": "backend/base/langbuilder/services/socket/service.py",
      "category": "service",
      "description": "logic node: emit_error (Service function)"
    },
    {
      "id": "nl0462",
      "type": "logic",
      "name": "connect",
      "function": "connect",
      "path": "backend/base/langbuilder/services/socket/service.py",
      "category": "service",
      "description": "logic node: connect (Service function)"
    },
    {
      "id": "nl0463",
      "type": "logic",
      "name": "disconnect",
      "function": "disconnect",
      "path": "backend/base/langbuilder/services/socket/service.py",
      "category": "service",
      "description": "logic node: disconnect (Service function)"
    },
    {
      "id": "nl0464",
      "type": "logic",
      "name": "message",
      "function": "message",
      "path": "backend/base/langbuilder/services/socket/service.py",
      "category": "service",
      "description": "logic node: message (Service function)"
    },
    {
      "id": "nl0465",
      "type": "logic",
      "name": "emit_message",
      "function": "emit_message",
      "path": "backend/base/langbuilder/services/socket/service.py",
      "category": "service",
      "description": "logic node: emit_message (Service function)"
    },
    {
      "id": "nl0466",
      "type": "logic",
      "name": "emit_token",
      "function": "emit_token",
      "path": "backend/base/langbuilder/services/socket/service.py",
      "category": "service",
      "description": "logic node: emit_token (Service function)"
    },
    {
      "id": "nl0467",
      "type": "logic",
      "name": "on_get_vertices",
      "function": "on_get_vertices",
      "path": "backend/base/langbuilder/services/socket/service.py",
      "category": "service",
      "description": "logic node: on_get_vertices (Service function)"
    },
    {
      "id": "nl0468",
      "type": "logic",
      "name": "on_build_vertex",
      "function": "on_build_vertex",
      "path": "backend/base/langbuilder/services/socket/service.py",
      "category": "service",
      "description": "logic node: on_build_vertex (Service function)"
    },
    {
      "id": "nl0469",
      "type": "logic",
      "name": "get_vertices",
      "function": "get_vertices",
      "path": "backend/base/langbuilder/services/socket/utils.py",
      "category": "service",
      "description": "logic node: get_vertices (Service function)"
    },
    {
      "id": "nl0470",
      "type": "logic",
      "name": "set_socketio_server",
      "function": "set_socketio_server",
      "path": "backend/base/langbuilder/services/socket/utils.py",
      "category": "service",
      "description": "logic node: set_socketio_server (Service function)"
    },
    {
      "id": "nl0471",
      "type": "logic",
      "name": "user_data_context",
      "function": "user_data_context",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: user_data_context (Service function)"
    },
    {
      "id": "nl0472",
      "type": "logic",
      "name": "check_api_key",
      "function": "check_api_key",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: check_api_key (Service function)"
    },
    {
      "id": "nl0473",
      "type": "logic",
      "name": "get",
      "function": "get",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: get (Service function)"
    },
    {
      "id": "nl0474",
      "type": "logic",
      "name": "call_webhook",
      "function": "call_webhook",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: call_webhook (Service function)"
    },
    {
      "id": "nl0475",
      "type": "logic",
      "name": "count_components",
      "function": "count_components",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: count_components (Service function)"
    },
    {
      "id": "nl0476",
      "type": "logic",
      "name": "query_components",
      "function": "query_components",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: query_components (Service function)"
    },
    {
      "id": "nl0477",
      "type": "logic",
      "name": "get_liked_by_user_components",
      "function": "get_liked_by_user_components",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: get_liked_by_user_components (Service function)"
    },
    {
      "id": "nl0478",
      "type": "logic",
      "name": "get_components_in_users_collection",
      "function": "get_components_in_users_collection",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: get_components_in_users_collection (Service function)"
    },
    {
      "id": "nl0479",
      "type": "logic",
      "name": "download",
      "function": "download",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: download (Service function)"
    },
    {
      "id": "nl0480",
      "type": "logic",
      "name": "upload",
      "function": "upload",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: upload (Service function)"
    },
    {
      "id": "nl0481",
      "type": "logic",
      "name": "update",
      "function": "update",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: update (Service function)"
    },
    {
      "id": "nl0482",
      "type": "logic",
      "name": "get_user_likes",
      "function": "get_user_likes",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: get_user_likes (Service function)"
    },
    {
      "id": "nl0483",
      "type": "logic",
      "name": "get_component_likes_count",
      "function": "get_component_likes_count",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: get_component_likes_count (Service function)"
    },
    {
      "id": "nl0484",
      "type": "logic",
      "name": "get_list_component_response_model",
      "function": "get_list_component_response_model",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: get_list_component_response_model (Service function)"
    },
    {
      "id": "nl0485",
      "type": "logic",
      "name": "get_id_from_search_string",
      "function": "get_id_from_search_string",
      "path": "backend/base/langbuilder/services/store/service.py",
      "category": "service",
      "description": "logic node: get_id_from_search_string (Service function)"
    },
    {
      "id": "nl0486",
      "type": "logic",
      "name": "update_components_with_user_data",
      "function": "update_components_with_user_data",
      "path": "backend/base/langbuilder/services/store/utils.py",
      "category": "service",
      "description": "logic node: update_components_with_user_data (Service function)"
    },
    {
      "id": "nl0487",
      "type": "logic",
      "name": "get_lf_version_from_pypi",
      "function": "get_lf_version_from_pypi",
      "path": "backend/base/langbuilder/services/store/utils.py",
      "category": "service",
      "description": "logic node: get_lf_version_from_pypi (Service function)"
    },
    {
      "id": "nl0488",
      "type": "logic",
      "name": "process_tags_for_post",
      "function": "process_tags_for_post",
      "path": "backend/base/langbuilder/services/store/utils.py",
      "category": "service",
      "description": "logic node: process_tags_for_post (Service function)"
    },
    {
      "id": "nl0489",
      "type": "logic",
      "name": "process_component_data",
      "function": "process_component_data",
      "path": "backend/base/langbuilder/services/store/utils.py",
      "category": "service",
      "description": "logic node: process_component_data (Service function)"
    },
    {
      "id": "nl0490",
      "type": "logic",
      "name": "session_id_generator",
      "function": "session_id_generator",
      "path": "backend/base/langbuilder/services/session/utils.py",
      "category": "service",
      "description": "logic node: session_id_generator (Service function)"
    },
    {
      "id": "nl0491",
      "type": "logic",
      "name": "compute_dict_hash",
      "function": "compute_dict_hash",
      "path": "backend/base/langbuilder/services/session/utils.py",
      "category": "service",
      "description": "logic node: compute_dict_hash (Service function)"
    },
    {
      "id": "nl0492",
      "type": "logic",
      "name": "run",
      "function": "run",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: run (Service function)"
    },
    {
      "id": "nl0494",
      "type": "logic",
      "name": "prepare_flow_and_add_to_db",
      "function": "prepare_flow_and_add_to_db",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: prepare_flow_and_add_to_db (Service function)"
    },
    {
      "id": "nl0495",
      "type": "logic",
      "name": "generate_user",
      "function": "generate_user",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: generate_user (Service function)"
    },
    {
      "id": "nl0496",
      "type": "logic",
      "name": "add_flow_to_db",
      "function": "add_flow_to_db",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: add_flow_to_db (Service function)"
    },
    {
      "id": "nl0497",
      "type": "logic",
      "name": "run_graph",
      "function": "run_graph",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: run_graph (Service function)"
    },
    {
      "id": "nl0498",
      "type": "logic",
      "name": "create_graph_from_flow",
      "function": "create_graph_from_flow",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: create_graph_from_flow (Service function)"
    },
    {
      "id": "nl0499",
      "type": "logic",
      "name": "clear_flow_state",
      "function": "clear_flow_state",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: clear_flow_state (Service function)"
    },
    {
      "id": "nl0500",
      "type": "logic",
      "name": "clear_user_state",
      "function": "clear_user_state",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: clear_user_state (Service function)"
    },
    {
      "id": "nl0501",
      "type": "logic",
      "name": "init_db_if_needed",
      "function": "init_db_if_needed",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: init_db_if_needed (Service function)"
    },
    {
      "id": "nl0502",
      "type": "logic",
      "name": "database_exists_check",
      "function": "database_exists_check",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: database_exists_check (Service function)"
    },
    {
      "id": "nl0503",
      "type": "logic",
      "name": "get_flow_dict",
      "function": "get_flow_dict",
      "path": "backend/base/langbuilder/services/flow/flow_runner.py",
      "category": "service",
      "description": "logic node: get_flow_dict (Service function)"
    }
  ],
  "edges": [
    {
      "id": "eii0001",
      "type": "composition",
      "source": "ni0004",
      "target": "ni0005",
      "label": "wraps",
      "details": "Root initialization wrapper"
    },
    {
      "id": "eii0002",
      "type": "composition",
      "source": "ni0005",
      "target": "ni0003",
      "label": "wraps",
      "details": "Main application wrapper with error boundary"
    },
    {
      "id": "eii0003",
      "type": "composition",
      "source": "ni0003",
      "target": "ni0007",
      "label": "wraps",
      "details": "Authenticated routes wrapper"
    },
    {
      "id": "eii0004",
      "type": "composition",
      "source": "ni0007",
      "target": "ni0006",
      "label": "wraps",
      "details": "Collection navigation wrapper"
    },
    {
      "id": "eii0005",
      "type": "composition",
      "source": "ni0007",
      "target": "ni0016",
      "label": "wraps",
      "details": "Settings section wrapper"
    },
    {
      "id": "eii0006",
      "type": "composition",
      "source": "ni0007",
      "target": "ni0009",
      "label": "wraps",
      "details": "Flow editor wrapper"
    },
    {
      "id": "eii0007",
      "type": "composition",
      "source": "ni0007",
      "target": "ni0021",
      "label": "wraps",
      "details": "Flow view mode wrapper"
    },
    {
      "id": "eii0008",
      "type": "composition",
      "source": "ni0007",
      "target": "ni0015",
      "label": "wraps",
      "details": "Playground wrapper"
    },
    {
      "id": "eii0009",
      "type": "composition",
      "source": "ni0007",
      "target": "ni0001",
      "label": "wraps",
      "details": "Admin panel wrapper"
    },
    {
      "id": "eii0010",
      "type": "composition",
      "source": "ni0007",
      "target": "ni0008",
      "label": "wraps",
      "details": "Delete account wrapper"
    },
    {
      "id": "eii0011",
      "type": "composition",
      "source": "ni0007",
      "target": "ni0020",
      "label": "wraps",
      "details": "Store marketplace wrapper"
    },
    {
      "id": "eii0014",
      "type": "composition",
      "source": "ni0016",
      "target": "ni0010",
      "label": "contains",
      "details": "General settings outlet"
    },
    {
      "id": "eii0015",
      "type": "composition",
      "source": "ni0016",
      "target": "ni0011",
      "label": "contains",
      "details": "Global variables outlet"
    },
    {
      "id": "eii0016",
      "type": "composition",
      "source": "ni0016",
      "target": "ni0014",
      "label": "contains",
      "details": "MCP servers outlet"
    },
    {
      "id": "eii0017",
      "type": "composition",
      "source": "ni0016",
      "target": "ni0002",
      "label": "contains",
      "details": "API keys outlet"
    },
    {
      "id": "eii0018",
      "type": "composition",
      "source": "ni0016",
      "target": "ni0017",
      "label": "contains",
      "details": "Shortcuts outlet"
    },
    {
      "id": "eii0020",
      "type": "composition",
      "source": "ni0016",
      "target": "ni0019",
      "label": "contains",
      "details": "Store API key outlet"
    },
    {
      "id": "eii0021",
      "type": "composition",
      "source": "ni0005",
      "target": "ni0013",
      "label": "contains",
      "details": "Login page sibling route"
    },
    {
      "id": "eii0022",
      "type": "composition",
      "source": "ni0005",
      "target": "ni0018",
      "label": "contains",
      "details": "Signup page sibling route"
    },
    {
      "id": "eii0024",
      "type": "navigation",
      "source": "ni0013",
      "target": "ni0018",
      "label": "link",
      "details": "Sign up link on login page"
    },
    {
      "id": "eii0026",
      "type": "navigation",
      "source": "ni0018",
      "target": "ni0013",
      "label": "link",
      "details": "Login link on signup page"
    },
    {
      "id": "eii0030",
      "type": "navigation",
      "source": "ni0009",
      "target": "ni0021",
      "label": "toggle",
      "details": "Switch to view mode"
    },
    {
      "id": "eii0031",
      "type": "navigation",
      "source": "ni0009",
      "target": "ni0015",
      "label": "click",
      "details": "Test current flow"
    },
    {
      "id": "eii0032",
      "type": "navigation",
      "source": "ni0021",
      "target": "ni0009",
      "label": "toggle",
      "details": "Switch back to edit mode"
    },
    {
      "id": "eii0035",
      "type": "navigation",
      "source": "ni0016",
      "target": "ni0010",
      "label": "redirect",
      "details": "Default settings page"
    },
    {
      "id": "eii0036",
      "type": "navigation",
      "source": "ni0016",
      "target": "ni0011",
      "label": "click",
      "details": "Navigate to global variables"
    },
    {
      "id": "eii0037",
      "type": "navigation",
      "source": "ni0016",
      "target": "ni0014",
      "label": "click",
      "details": "Navigate to MCP servers"
    },
    {
      "id": "eii0038",
      "type": "navigation",
      "source": "ni0016",
      "target": "ni0002",
      "label": "click",
      "details": "Navigate to API keys"
    },
    {
      "id": "eii0039",
      "type": "navigation",
      "source": "ni0016",
      "target": "ni0017",
      "label": "click",
      "details": "Navigate to shortcuts"
    },
    {
      "id": "eii0041",
      "type": "navigation",
      "source": "ni0016",
      "target": "ni0019",
      "label": "click",
      "details": "Navigate to store settings"
    },
    {
      "id": "eii0042",
      "type": "navigation",
      "source": "ni0010",
      "target": "ni0008",
      "label": "link",
      "details": "Delete account link"
    },
    {
      "id": "eii0043",
      "type": "navigation",
      "source": "ni0020",
      "target": "ni0009",
      "label": "click",
      "details": "Open flow from store"
    },
    {
      "id": "eii0044",
      "type": "navigation",
      "source": "ni0001",
      "target": "ni0013",
      "label": "logout",
      "details": "Admin logout"
    },
    {
      "id": "eii0050",
      "type": "navigation",
      "source": "ni0001",
      "target": "ni0016",
      "label": "navigate",
      "details": "Admin accessing settings"
    },
    {
      "id": "eii0052",
      "type": "navigation",
      "source": "ni0009",
      "target": "ni0020",
      "label": "click",
      "details": "Share flow to store"
    },
    {
      "id": "eii0053",
      "type": "navigation",
      "source": "ni0008",
      "target": "ni0012",
      "label": "navigate",
      "details": "After account deletion, redirect to login"
    },
    {
      "id": "eii0054",
      "type": "navigation",
      "source": "ni0002",
      "target": "ni0010",
      "label": "navigate",
      "details": "Navigate between settings pages"
    },
    {
      "id": "eii0055",
      "type": "navigation",
      "source": "ni0011",
      "target": "ni0010",
      "label": "navigate",
      "details": "Navigate to general settings"
    },
    {
      "id": "eii0056",
      "type": "navigation",
      "source": "ni0014",
      "target": "ni0002",
      "label": "navigate",
      "details": "Navigate to API keys from MCP"
    },
    {
      "id": "ess0001",
      "type": "relationship",
      "source": "ns0001",
      "target": "ns0005",
      "label": "owns",
      "details": "one-to-many (User can have multiple ApiKeys, cascade delete on user deletion)"
    },
    {
      "id": "ess0002",
      "type": "relationship",
      "source": "ns0001",
      "target": "ns0002",
      "label": "owns",
      "details": "one-to-many (User can own multiple Flows)"
    },
    {
      "id": "ess0003",
      "type": "relationship",
      "source": "ns0001",
      "target": "ns0006",
      "label": "owns",
      "details": "one-to-many (User can have multiple Variables/credentials, cascade delete on user deletion)"
    },
    {
      "id": "ess0004",
      "type": "relationship",
      "source": "ns0001",
      "target": "ns0003",
      "label": "owns",
      "details": "one-to-many (User can have multiple Folders, cascade delete on user deletion)"
    },
    {
      "id": "ess0005",
      "type": "relationship",
      "source": "ns0001",
      "target": "ns0007",
      "label": "owns",
      "details": "one-to-many (User can have multiple uploaded Files)"
    },
    {
      "id": "ess0006",
      "type": "relationship",
      "source": "ns0003",
      "target": "ns0002",
      "label": "contains",
      "details": "one-to-many (Folder can contain multiple Flows, cascade delete on folder deletion)"
    },
    {
      "id": "ess0007",
      "type": "relationship",
      "source": "ns0003",
      "target": "ns0003",
      "label": "contains",
      "details": "one-to-many (Folder can have a parent Folder and multiple child Folders, self-referential hierarchy)"
    },
    {
      "id": "ess0008",
      "type": "relationship",
      "source": "ns0002",
      "target": "ns0008",
      "label": "has",
      "details": "one-to-many (Flow can have multiple VertexBuild execution records)"
    },
    {
      "id": "ess0009",
      "type": "relationship",
      "source": "ns0002",
      "target": "ns0009",
      "label": "has",
      "details": "one-to-many (Flow can have multiple Transaction execution records)"
    },
    {
      "id": "ess0010",
      "type": "relationship",
      "source": "ns0002",
      "target": "ns0004",
      "label": "has",
      "details": "one-to-many (Flow can have multiple Messages in conversations)"
    },
    {
      "id": "eis0001",
      "type": "manages",
      "source": "ni0001",
      "target": "ns0001",
      "label": "",
      "details": "CREATE via useAddUser (POST /users/), READ via useGetUsers (GET /users), UPDATE via useUpdateUser (PATCH /users/{id}), DELETE via useDeleteUsers (DELETE /users/{id})"
    },
    {
      "id": "eis0002",
      "type": "manages",
      "source": "ni0009",
      "target": "ns0002",
      "label": "",
      "details": "READ via useGetFlow (GET /flows/{id}), UPDATE via usePatchUpdateFlow (PATCH /flows/{id}), saves flow data including name, description, nodes, edges, viewport"
    },
    {
      "id": "eis0003",
      "type": "manages",
      "source": "ni0002",
      "target": "ns0005",
      "label": "",
      "details": "READ via useGetApiKeysQuery (GET /api_keys/), DELETE via useDeleteApiKey (DELETE /api_keys/{id}), displays API key details in ag-grid table"
    },
    {
      "id": "eis0004",
      "type": "manages",
      "source": "ni0011",
      "target": "ns0006",
      "label": "",
      "details": "READ via useGetGlobalVariables (GET /variables/), CREATE/UPDATE via GlobalVariableModal, DELETE via useDeleteGlobalVariables (DELETE /variables/{id})"
    },
    {
      "id": "eis0005",
      "type": "manages",
      "source": "ni0006",
      "target": "ns0003",
      "label": "",
      "details": "READ from useFolderStore, DELETE via useDeleteFolders (DELETE /projects/{id}), displays folder sidebar navigation"
    },
    {
      "id": "eis0006",
      "type": "views",
      "source": "ni0006",
      "target": "ns0002",
      "label": "",
      "details": "READ flows from useFlowsManagerStore, displays flow collection in folder context, no direct CRUD operations"
    },
    {
      "id": "eis0009",
      "type": "views",
      "source": "ni0015",
      "target": "ns0002",
      "label": "",
      "details": "READ public flows via useGetFlow with public=true (GET /flows/public/{id}), read-only access for playground execution"
    },
    {
      "id": "eis0010",
      "type": "views",
      "source": "ni0021",
      "target": "ns0002",
      "label": "",
      "details": "READ flows for viewing/execution, similar to Playground but for authenticated users"
    },
    {
      "id": "eis0012",
      "type": "views",
      "source": "ni0012",
      "target": "ns0001",
      "label": "",
      "details": "Authenticates user credentials, READ user via login endpoint, no direct user management"
    },
    {
      "id": "eis0013",
      "type": "manages",
      "source": "ni0018",
      "target": "ns0001",
      "label": "",
      "details": "CREATE user via registration endpoint (POST /users/signup or similar), handles new user creation"
    },
    {
      "id": "eis0014",
      "type": "views",
      "source": "ni0013",
      "target": "ns0001",
      "label": "",
      "details": "Authenticates admin user credentials, similar to LoginPage but for admin access"
    },
    {
      "id": "eis0015",
      "type": "views",
      "source": "ni0009",
      "target": "ns0008",
      "label": "",
      "details": "READ via useGetBuildsQuery (GET /api/v1/monitor/builds), displays vertex build status via NodeStatus component, shows build duration and validation results, read-only monitoring"
    },
    {
      "id": "eis0016",
      "type": "views",
      "source": "ni0009",
      "target": "ns0009",
      "label": "",
      "details": "READ via useGetTransactionsQuery (GET /api/v1/monitor/transactions), displays component execution logs via FlowLogsModal, paginated transaction history, read-only monitoring"
    },
    {
      "id": "ell0001",
      "type": "dependency",
      "source": "nl0004",
      "target": "nl0003",
      "label": "",
      "details": "Creates flow using helper for duplicate name handling"
    },
    {
      "id": "ell0002",
      "type": "dependency",
      "source": "nl0004",
      "target": "nl0002",
      "label": "",
      "details": "Saves created flow to filesystem"
    },
    {
      "id": "ell0003",
      "type": "dependency",
      "source": "nl0007",
      "target": "nl0006",
      "label": "",
      "details": "Reads flow from database using helper"
    },
    {
      "id": "ell0004",
      "type": "dependency",
      "source": "nl0008",
      "target": "nl0007",
      "label": "",
      "details": "Reuses read_flow for public flow access"
    },
    {
      "id": "ell0005",
      "type": "dependency",
      "source": "nl0009",
      "target": "nl0006",
      "label": "",
      "details": "Reads flow before updating"
    },
    {
      "id": "ell0006",
      "type": "dependency",
      "source": "nl0009",
      "target": "nl0001",
      "label": "",
      "details": "Verifies filesystem path before update"
    },
    {
      "id": "ell0007",
      "type": "dependency",
      "source": "nl0009",
      "target": "nl0002",
      "label": "",
      "details": "Saves updated flow to filesystem"
    },
    {
      "id": "ell0008",
      "type": "dependency",
      "source": "nl0010",
      "target": "nl0006",
      "label": "",
      "details": "Reads flow before deleting"
    },
    {
      "id": "ell0009",
      "type": "dependency",
      "source": "nl0012",
      "target": "nl0003",
      "label": "",
      "details": "Creates new flow from uploaded file"
    },
    {
      "id": "ell0010",
      "type": "dependency",
      "source": "nl0012",
      "target": "nl0002",
      "label": "",
      "details": "Saves uploaded flow to filesystem"
    },
    {
      "id": "ell0011",
      "type": "dependency",
      "source": "nl0003",
      "target": "nl0001",
      "label": "",
      "details": "Verifies filesystem path for new flow"
    },
    {
      "id": "ell0012",
      "type": "dependency",
      "source": "nl0067",
      "target": "nl0061",
      "label": "",
      "details": "Builds flow before streaming"
    },
    {
      "id": "ell0013",
      "type": "dependency",
      "source": "nl0066",
      "target": "nl0065",
      "label": "",
      "details": "Streams vertex data using helper"
    },
    {
      "id": "ell0014",
      "type": "dependency",
      "source": "nl0123",
      "target": "nl0084",
      "label": "",
      "details": "Creates database engine during initialization"
    },
    {
      "id": "ell0015",
      "type": "dependency",
      "source": "nl0081",
      "target": "nl0084",
      "label": "",
      "details": "Recreates engine when reloading"
    },
    {
      "id": "ell0016",
      "type": "dependency",
      "source": "nl0100",
      "target": "nl0101",
      "label": "",
      "details": "Retries table creation"
    },
    {
      "id": "ell0017",
      "type": "dependency",
      "source": "nl0101",
      "target": "nl0099",
      "label": "",
      "details": "Executes table creation in sync context"
    },
    {
      "id": "ell0018",
      "type": "dependency",
      "source": "nl0095",
      "target": "nl0094",
      "label": "",
      "details": "Executes migrations in thread"
    },
    {
      "id": "ell0019",
      "type": "dependency",
      "source": "nl0092",
      "target": "nl0091",
      "label": "",
      "details": "Checks schema health in sync context"
    },
    {
      "id": "ell0020",
      "type": "dependency",
      "source": "nl0084",
      "target": "nl0083",
      "label": "",
      "details": "Gets connection pool settings"
    },
    {
      "id": "ell0021",
      "type": "dependency",
      "source": "nl0084",
      "target": "nl0086",
      "label": "",
      "details": "Gets driver-specific connection args"
    },
    {
      "id": "ell0022",
      "type": "dependency",
      "source": "nl0104",
      "target": "nl0106",
      "label": "",
      "details": "Generates session key if not provided"
    },
    {
      "id": "ell0023",
      "type": "dependency",
      "source": "nl0106",
      "target": "nl0105",
      "label": "",
      "details": "Builds key from session_id and data"
    },
    {
      "id": "ell0024",
      "type": "dependency",
      "source": "nl0125",
      "target": "nl0126",
      "label": "",
      "details": "Starts service if not already started"
    },
    {
      "id": "ell0025",
      "type": "dependency",
      "source": "nl0126",
      "target": "nl0133",
      "label": "",
      "details": "Creates periodic cleanup task"
    },
    {
      "id": "ell0026",
      "type": "dependency",
      "source": "nl0127",
      "target": "nl0132",
      "label": "",
      "details": "Cleans up each job during shutdown"
    },
    {
      "id": "ell0027",
      "type": "dependency",
      "source": "nl0128",
      "target": "nl0127",
      "label": "",
      "details": "Stops service during teardown"
    },
    {
      "id": "ell0028",
      "type": "dependency",
      "source": "nl0133",
      "target": "nl0134",
      "label": "",
      "details": "Periodically scans for old queues"
    },
    {
      "id": "ell0029",
      "type": "dependency",
      "source": "nl0134",
      "target": "nl0132",
      "label": "",
      "details": "Cleans up queues exceeding grace period"
    },
    {
      "id": "ell0030",
      "type": "dependency",
      "source": "nl0114",
      "target": "nl0118",
      "label": "",
      "details": "Updates existing variable"
    },
    {
      "id": "ell0031",
      "type": "dependency",
      "source": "nl0114",
      "target": "nl0122",
      "label": "",
      "details": "Creates new variable if not exists"
    },
    {
      "id": "ell0032",
      "type": "dependency",
      "source": "nl0143",
      "target": "nl0148",
      "label": "",
      "details": "Initializes start/end components"
    },
    {
      "id": "ell0033",
      "type": "dependency",
      "source": "nl0148",
      "target": "nl0147",
      "label": "",
      "details": "Adds start/end components"
    },
    {
      "id": "ell0034",
      "type": "dependency",
      "source": "nl0147",
      "target": "nl0153",
      "label": "",
      "details": "Attaches component to vertex"
    },
    {
      "id": "ell0035",
      "type": "dependency",
      "source": "nl0150",
      "target": "nl0163",
      "label": "",
      "details": "Parses vertex data during initialization"
    },
    {
      "id": "ell0036",
      "type": "dependency",
      "source": "nl0212",
      "target": "nl0211",
      "label": "",
      "details": "Dispatches to type-specific serialization"
    },
    {
      "id": "ell0037",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0200",
      "label": "",
      "details": "Serializes Pydantic v2 models"
    },
    {
      "id": "ell0038",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0201",
      "label": "",
      "details": "Serializes Pydantic v1 models"
    },
    {
      "id": "ell0039",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0202",
      "label": "",
      "details": "Serializes dictionaries"
    },
    {
      "id": "ell0040",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0203",
      "label": "",
      "details": "Serializes lists/tuples"
    },
    {
      "id": "ell0041",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0204",
      "label": "",
      "details": "Serializes primitive types"
    },
    {
      "id": "ell0042",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0207",
      "label": "",
      "details": "Serializes pandas DataFrames"
    },
    {
      "id": "ell0043",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0208",
      "label": "",
      "details": "Serializes pandas Series"
    },
    {
      "id": "ell0044",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0210",
      "label": "",
      "details": "Serializes numpy types"
    },
    {
      "id": "ell0045",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0198",
      "label": "",
      "details": "Serializes documents"
    },
    {
      "id": "ell0046",
      "type": "dependency",
      "source": "nl0211",
      "target": "nl0199",
      "label": "",
      "details": "Serializes iterators"
    },
    {
      "id": "eil0001",
      "type": "event",
      "source": "ni0009",
      "target": "nl0005",
      "label": "",
      "details": "Page load - fetches current flow data via useGetFlow"
    },
    {
      "id": "eil0002",
      "type": "event",
      "source": "ni0009",
      "target": "nl0009",
      "label": "",
      "details": "Auto-save trigger - debounced save when flow changes via usePatchUpdateFlow"
    },
    {
      "id": "eil0003",
      "type": "event",
      "source": "ni0009",
      "target": "nl0173",
      "label": "",
      "details": "Page mount/unmount - sets flow page active state"
    },
    {
      "id": "eil0004",
      "type": "event",
      "source": "ni0009",
      "target": "nl0174",
      "label": "",
      "details": "Stop build button click - halts flow execution"
    },
    {
      "id": "eil0005",
      "type": "event",
      "source": "ni0009",
      "target": "nl0175",
      "label": "",
      "details": "Flow analysis - detects input/output nodes"
    },
    {
      "id": "eil0006",
      "type": "event",
      "source": "ni0009",
      "target": "nl0176",
      "label": "",
      "details": "Flow load - sets detected input nodes"
    },
    {
      "id": "eil0007",
      "type": "event",
      "source": "ni0009",
      "target": "nl0177",
      "label": "",
      "details": "Flow load - sets detected output nodes"
    },
    {
      "id": "eil0008",
      "type": "event",
      "source": "ni0009",
      "target": "nl0178",
      "label": "",
      "details": "Flow execution - initializes execution pool"
    },
    {
      "id": "eil0009",
      "type": "event",
      "source": "ni0009",
      "target": "nl0179",
      "label": "",
      "details": "Tool mode toggle - switches between selection/edit modes"
    },
    {
      "id": "eil0010",
      "type": "event",
      "source": "ni0009",
      "target": "nl0180",
      "label": "",
      "details": "Freeze toggle - locks/unlocks flow editing"
    },
    {
      "id": "eil0011",
      "type": "event",
      "source": "ni0009",
      "target": "nl0181",
      "label": "",
      "details": "Vertex execution - adds execution results to pool"
    },
    {
      "id": "eil0012",
      "type": "event",
      "source": "ni0009",
      "target": "nl0183",
      "label": "",
      "details": "Flow execution progress - updates pool state"
    },
    {
      "id": "eil0013",
      "type": "event",
      "source": "ni0009",
      "target": "nl0184",
      "label": "",
      "details": "Flow load - builds inactive vertex metadata"
    },
    {
      "id": "eil0014",
      "type": "event",
      "source": "ni0009",
      "target": "nl0185",
      "label": "",
      "details": "Page load - logs flow loading event"
    },
    {
      "id": "eil0015",
      "type": "event",
      "source": "ni0009",
      "target": "nl0186",
      "label": "",
      "details": "Node reorder - updates execution order"
    },
    {
      "id": "eil0016",
      "type": "event",
      "source": "ni0009",
      "target": "nl0187",
      "label": "",
      "details": "Flow execution - builds vertices with error handling"
    },
    {
      "id": "eil0017",
      "type": "event",
      "source": "ni0009",
      "target": "nl0188",
      "label": "",
      "details": "During build - polls for build status updates"
    },
    {
      "id": "eil0018",
      "type": "event",
      "source": "ni0009",
      "target": "nl0189",
      "label": "",
      "details": "Flow validation - checks for chat input node"
    },
    {
      "id": "eil0019",
      "type": "event",
      "source": "ni0009",
      "target": "nl0190",
      "label": "",
      "details": "Flow validation - checks for webhook input node"
    },
    {
      "id": "eil0020",
      "type": "event",
      "source": "ni0009",
      "target": "nl0191",
      "label": "",
      "details": "Edge creation - validates and cleans edge data"
    },
    {
      "id": "eil0021",
      "type": "event",
      "source": "ni0001",
      "target": "nl0018",
      "label": "",
      "details": "Page load, pagination - fetches user list via useGetUsers"
    },
    {
      "id": "eil0022",
      "type": "event",
      "source": "ni0001",
      "target": "nl0016",
      "label": "",
      "details": "New user button + form submit - creates user via useAddUser"
    },
    {
      "id": "eil0023",
      "type": "event",
      "source": "ni0001",
      "target": "nl0019",
      "label": "",
      "details": "Edit user, toggle active/superuser - updates via useUpdateUser"
    },
    {
      "id": "eil0024",
      "type": "event",
      "source": "ni0001",
      "target": "nl0021",
      "label": "",
      "details": "Delete button - removes user via useDeleteUsers"
    },
    {
      "id": "eil0025",
      "type": "event",
      "source": "ni0002",
      "target": "nl0038",
      "label": "",
      "details": "Page load - fetches API keys via useGetApiKeysQuery"
    },
    {
      "id": "eil0026",
      "type": "event",
      "source": "ni0002",
      "target": "nl0040",
      "label": "",
      "details": "Delete button - removes API key via useDeleteApiKey"
    },
    {
      "id": "eil0027",
      "type": "event",
      "source": "ni0011",
      "target": "nl0027",
      "label": "",
      "details": "Page load - fetches variables via useGetGlobalVariables"
    },
    {
      "id": "eil0028",
      "type": "event",
      "source": "ni0011",
      "target": "nl0120",
      "label": "",
      "details": "Delete button - removes variable via useDeleteGlobalVariables"
    },
    {
      "id": "eil0032",
      "type": "event",
      "source": "ni0006",
      "target": "nl0005",
      "label": "",
      "details": "Page load - fetches flows for collection display"
    },
    {
      "id": "eil0033",
      "type": "event",
      "source": "ni0006",
      "target": "nl0046",
      "label": "",
      "details": "Delete folder button - removes folder/project via useDeleteFolders"
    },
    {
      "id": "eil0034",
      "type": "event",
      "source": "ni0015",
      "target": "nl0005",
      "label": "",
      "details": "Page load with flow ID - fetches public flow for execution"
    },
    {
      "id": "eil0035",
      "type": "event",
      "source": "ni0015",
      "target": "nl0167",
      "label": "",
      "details": "Page mount - sets playground page state"
    },
    {
      "id": "eil0036",
      "type": "event",
      "source": "ni0021",
      "target": "nl0005",
      "label": "",
      "details": "Page load with flow ID - fetches flow for viewing/execution"
    },
    {
      "id": "eil0037",
      "type": "event",
      "source": "ni0012",
      "target": "nl0022",
      "label": "",
      "details": "Login button - authenticates user via useLoginUser"
    },
    {
      "id": "eil0038",
      "type": "event",
      "source": "ni0018",
      "target": "nl0016",
      "label": "",
      "details": "Sign up button - creates new user account"
    },
    {
      "id": "eil0039",
      "type": "event",
      "source": "ni0013",
      "target": "nl0022",
      "label": "",
      "details": "Admin login button - authenticates admin user"
    },
    {
      "id": "els0001",
      "type": "event",
      "source": "nl0004",
      "target": "ns0002",
      "label": "",
      "details": "INSERT - Creates new Flow record via session.add() and session.commit(), checks for unique name/endpoint_name"
    },
    {
      "id": "els0002",
      "type": "event",
      "source": "nl0005",
      "target": "ns0002",
      "label": "",
      "details": "SELECT - Queries Flow records with filters (user_id, folder_id, is_component), supports pagination"
    },
    {
      "id": "els0003",
      "type": "event",
      "source": "nl0007",
      "target": "ns0002",
      "label": "",
      "details": "SELECT - Queries single Flow by ID and user_id via session.exec()"
    },
    {
      "id": "els0004",
      "type": "event",
      "source": "nl0009",
      "target": "ns0002",
      "label": "",
      "details": "SELECT, UPDATE - Fetches Flow by ID, updates fields, commits via session.add() and session.commit()"
    },
    {
      "id": "els0005",
      "type": "event",
      "source": "nl0010",
      "target": "ns0002",
      "label": "",
      "details": "SELECT, DELETE - Fetches Flow then deletes via cascade_delete_flow() helper"
    },
    {
      "id": "els0006",
      "type": "event",
      "source": "nl0011",
      "target": "ns0002",
      "label": "",
      "details": "INSERT (batch) - Batch creates multiple Flows via session.add() in loop"
    },
    {
      "id": "els0007",
      "type": "event",
      "source": "nl0048",
      "target": "ns0002",
      "label": "",
      "details": "INSERT (batch) - Creates Flows from uploaded file via _new_flow() helper"
    },
    {
      "id": "els0008",
      "type": "event",
      "source": "nl0013",
      "target": "ns0002",
      "label": "",
      "details": "SELECT, DELETE (batch) - Queries Flows by IDs then cascade deletes each"
    },
    {
      "id": "els0009",
      "type": "event",
      "source": "nl0015",
      "target": "ns0002",
      "label": "",
      "details": "SELECT - Queries all Flows in starter folder"
    },
    {
      "id": "els0010",
      "type": "event",
      "source": "nl0004",
      "target": "ns0003",
      "label": "",
      "details": "SELECT - Queries default Folder if flow.folder_id is None"
    },
    {
      "id": "els0011",
      "type": "event",
      "source": "nl0005",
      "target": "ns0003",
      "label": "",
      "details": "SELECT - Queries default and starter Folders for filtering"
    },
    {
      "id": "els0012",
      "type": "event",
      "source": "nl0009",
      "target": "ns0003",
      "label": "",
      "details": "SELECT - Queries default Folder when updating folder assignment"
    },
    {
      "id": "els0013",
      "type": "event",
      "source": "nl0015",
      "target": "ns0003",
      "label": "",
      "details": "SELECT - Queries starter Folder to get example flows"
    },
    {
      "id": "els0014",
      "type": "event",
      "source": "nl0010",
      "target": "ns0004",
      "label": "",
      "details": "DELETE (cascade) - Deletes all Messages for flow_id via cascade_delete_flow()"
    },
    {
      "id": "els0015",
      "type": "event",
      "source": "nl0010",
      "target": "ns0009",
      "label": "",
      "details": "DELETE (cascade) - Deletes all Transactions for flow_id via cascade_delete_flow()"
    },
    {
      "id": "els0016",
      "type": "event",
      "source": "nl0010",
      "target": "ns0008",
      "label": "",
      "details": "DELETE (cascade) - Deletes all VertexBuilds for flow_id via cascade_delete_flow()"
    },
    {
      "id": "els0017",
      "type": "event",
      "source": "nl0013",
      "target": "ns0004",
      "label": "",
      "details": "DELETE (cascade) - Deletes Messages for each flow via cascade_delete_flow()"
    },
    {
      "id": "els0018",
      "type": "event",
      "source": "nl0013",
      "target": "ns0009",
      "label": "",
      "details": "DELETE (cascade) - Deletes Transactions for each flow via cascade_delete_flow()"
    },
    {
      "id": "els0019",
      "type": "event",
      "source": "nl0013",
      "target": "ns0008",
      "label": "",
      "details": "DELETE (cascade) - Deletes VertexBuilds for each flow via cascade_delete_flow()"
    },
    {
      "id": "els0020",
      "type": "event",
      "source": "nl0016",
      "target": "ns0001",
      "label": "",
      "details": "INSERT - Creates new User via session.add() and session.commit(), handles password hashing"
    },
    {
      "id": "els0021",
      "type": "event",
      "source": "nl0018",
      "target": "ns0001",
      "label": "",
      "details": "SELECT - Queries User records with pagination (offset, limit), includes count query"
    },
    {
      "id": "els0022",
      "type": "event",
      "source": "nl0019",
      "target": "ns0001",
      "label": "",
      "details": "SELECT, UPDATE - Fetches User by ID, updates fields via update_user() CRUD function"
    },
    {
      "id": "els0023",
      "type": "event",
      "source": "nl0020",
      "target": "ns0001",
      "label": "",
      "details": "UPDATE - Updates User password field via session.commit()"
    },
    {
      "id": "els0024",
      "type": "event",
      "source": "nl0021",
      "target": "ns0001",
      "label": "",
      "details": "SELECT, DELETE - Fetches User then deletes via session.delete(), cascades to ApiKey/Variable/Folder"
    },
    {
      "id": "els0025",
      "type": "event",
      "source": "nl0016",
      "target": "ns0003",
      "label": "",
      "details": "SELECT, INSERT - Creates default Folder for new user via get_or_create_default_folder()"
    },
    {
      "id": "els0026",
      "type": "event",
      "source": "nl0122",
      "target": "ns0006",
      "label": "",
      "details": "SELECT, INSERT - Lists existing Variables then creates via variable_service.create_variable()"
    },
    {
      "id": "els0027",
      "type": "event",
      "source": "nl0027",
      "target": "ns0006",
      "label": "",
      "details": "SELECT - Queries all Variables for user_id via variable_service.get_all()"
    },
    {
      "id": "els0028",
      "type": "event",
      "source": "nl0119",
      "target": "ns0006",
      "label": "",
      "details": "SELECT, UPDATE - Fetches Variable by ID and user_id, updates fields via session.add() and commit()"
    },
    {
      "id": "els0029",
      "type": "event",
      "source": "nl0121",
      "target": "ns0006",
      "label": "",
      "details": "SELECT, DELETE - Fetches Variable by ID and user_id, deletes via session.delete()"
    },
    {
      "id": "els0030",
      "type": "event",
      "source": "nl0038",
      "target": "ns0005",
      "label": "",
      "details": "SELECT - Queries all ApiKeys for user_id via get_api_keys() CRUD function"
    },
    {
      "id": "els0031",
      "type": "event",
      "source": "nl0039",
      "target": "ns0005",
      "label": "",
      "details": "INSERT - Creates new ApiKey via session.add() and commit(), generates api_key value"
    },
    {
      "id": "els0032",
      "type": "event",
      "source": "nl0040",
      "target": "ns0005",
      "label": "",
      "details": "SELECT, DELETE - Fetches ApiKey by ID via session.get(), deletes via session.delete()"
    },
    {
      "id": "els0033",
      "type": "event",
      "source": "nl0041",
      "target": "ns0001",
      "label": "",
      "details": "UPDATE - Updates User.store_api_key field via session.add() and commit()"
    },
    {
      "id": "els0034",
      "type": "event",
      "source": "nl0030",
      "target": "ns0002",
      "label": "",
      "details": "SELECT - Queries Flow by ID via session.get() for authorization check"
    },
    {
      "id": "els0035",
      "type": "event",
      "source": "nl0031",
      "target": "ns0002",
      "label": "",
      "details": "SELECT - Queries Flow via get_flow dependency for authorization"
    },
    {
      "id": "els0036",
      "type": "event",
      "source": "nl0036",
      "target": "ns0002",
      "label": "",
      "details": "SELECT - Queries Flow via get_flow dependency for authorization"
    },
    {
      "id": "els0037",
      "type": "event",
      "source": "nl0037",
      "target": "ns0002",
      "label": "",
      "details": "SELECT - Queries Flow via get_flow dependency for authorization"
    },
    {
      "source": "nl0001",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0015",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0001",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0002",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0003",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0004",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0005",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0006",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0007",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0008",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0009",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0010",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0013",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0014",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0017",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0018",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0019",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0020",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0021",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0016",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0018",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0019",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0020",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0021",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0016",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0017",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0019",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0020",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0021",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0016",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0017",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0018",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0020",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0021",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0016",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0017",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0018",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0019",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0021",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0016",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0017",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0018",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0019",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0020",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0023",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0024",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0025",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0022",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0024",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0025",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0022",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0023",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0025",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0022",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0023",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0024",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0027",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0027",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0027",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0033",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0034",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0035",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0030",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0033",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0034",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0035",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0030",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0033",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0034",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0035",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0030",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0034",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0035",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0030",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0033",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0035",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0030",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0033",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0034",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0030",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0033",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0034",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0035",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0030",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0033",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0034",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0035",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0038",
      "target": "nl0039",
      "type": "dependency"
    },
    {
      "source": "nl0038",
      "target": "nl0040",
      "type": "dependency"
    },
    {
      "source": "nl0038",
      "target": "nl0041",
      "type": "dependency"
    },
    {
      "source": "nl0039",
      "target": "nl0038",
      "type": "dependency"
    },
    {
      "source": "nl0039",
      "target": "nl0040",
      "type": "dependency"
    },
    {
      "source": "nl0039",
      "target": "nl0041",
      "type": "dependency"
    },
    {
      "source": "nl0040",
      "target": "nl0038",
      "type": "dependency"
    },
    {
      "source": "nl0040",
      "target": "nl0039",
      "type": "dependency"
    },
    {
      "source": "nl0040",
      "target": "nl0041",
      "type": "dependency"
    },
    {
      "source": "nl0041",
      "target": "nl0038",
      "type": "dependency"
    },
    {
      "source": "nl0041",
      "target": "nl0039",
      "type": "dependency"
    },
    {
      "source": "nl0041",
      "target": "nl0040",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0043",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0044",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0045",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0046",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0042",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0044",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0045",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0046",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0042",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0043",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0045",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0046",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0042",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0043",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0044",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0046",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0042",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0043",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0044",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0045",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0042",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0043",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0044",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0045",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0046",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0048",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0042",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0043",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0044",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0045",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0046",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0047",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0011",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0049",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0050",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0051",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0052",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0053",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0054",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0055",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0056",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0058",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0061",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0062",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0063",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0065",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0066",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0068",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0060",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0062",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0063",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0065",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0066",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0068",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0060",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0061",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0063",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0065",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0066",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0068",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0060",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0061",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0062",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0065",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0066",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0068",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0060",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0061",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0062",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0063",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0065",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0066",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0068",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0060",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0061",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0062",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0063",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0066",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0068",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0060",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0061",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0062",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0063",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0068",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0060",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0062",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0063",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0065",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0066",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0068",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0060",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0061",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0062",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0063",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0065",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0066",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0071",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0072",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0073",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0074",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0075",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0077",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0078",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0069",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0071",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0072",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0073",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0074",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0075",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0077",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0078",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0069",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0072",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0073",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0074",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0075",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0077",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0078",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0069",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0071",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0073",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0074",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0075",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0077",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0078",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0069",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0071",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0072",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0074",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0075",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0077",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0078",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0069",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0071",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0072",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0073",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0075",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0077",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0078",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0069",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0071",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0072",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0073",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0074",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0077",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0078",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0069",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0071",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0072",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0073",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0074",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0075",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0077",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0078",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0069",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0071",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0072",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0073",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0074",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0075",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0078",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0069",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0071",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0072",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0073",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0074",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0075",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0077",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0082",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0085",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0084",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0081",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0083",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0086",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0087",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0090",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0091",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0093",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0094",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0096",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0097",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0098",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0099",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0106",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0105",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0107",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0108",
      "type": "dependency"
    },
    {
      "source": "nl0104",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0104",
      "target": "nl0105",
      "type": "dependency"
    },
    {
      "source": "nl0104",
      "target": "nl0107",
      "type": "dependency"
    },
    {
      "source": "nl0104",
      "target": "nl0108",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0106",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0107",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0108",
      "type": "dependency"
    },
    {
      "source": "nl0106",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0106",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0106",
      "target": "nl0107",
      "type": "dependency"
    },
    {
      "source": "nl0106",
      "target": "nl0108",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0106",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0105",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0108",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0106",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0105",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0107",
      "type": "dependency"
    },
    {
      "source": "nl0109",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0109",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0109",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0109",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0110",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0110",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0110",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0111",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0111",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0111",
      "target": "nl0112",
      "type": "dependency"
    },
    {
      "source": "nl0112",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0112",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0112",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0122",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0114",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0118",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0117",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0119",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0120",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0121",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0135",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0129",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0130",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0131",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0132",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0124",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0133",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0134",
      "type": "dependency"
    },
    {
      "source": "nl0136",
      "target": "nl0137",
      "type": "dependency"
    },
    {
      "source": "nl0136",
      "target": "nl0138",
      "type": "dependency"
    },
    {
      "source": "nl0136",
      "target": "nl0139",
      "type": "dependency"
    },
    {
      "source": "nl0136",
      "target": "nl0140",
      "type": "dependency"
    },
    {
      "source": "nl0136",
      "target": "nl0141",
      "type": "dependency"
    },
    {
      "source": "nl0136",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0136",
      "target": "nl0142",
      "type": "dependency"
    },
    {
      "source": "nl0137",
      "target": "nl0136",
      "type": "dependency"
    },
    {
      "source": "nl0137",
      "target": "nl0138",
      "type": "dependency"
    },
    {
      "source": "nl0137",
      "target": "nl0139",
      "type": "dependency"
    },
    {
      "source": "nl0137",
      "target": "nl0140",
      "type": "dependency"
    },
    {
      "source": "nl0137",
      "target": "nl0141",
      "type": "dependency"
    },
    {
      "source": "nl0137",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0137",
      "target": "nl0142",
      "type": "dependency"
    },
    {
      "source": "nl0138",
      "target": "nl0136",
      "type": "dependency"
    },
    {
      "source": "nl0138",
      "target": "nl0137",
      "type": "dependency"
    },
    {
      "source": "nl0138",
      "target": "nl0139",
      "type": "dependency"
    },
    {
      "source": "nl0138",
      "target": "nl0140",
      "type": "dependency"
    },
    {
      "source": "nl0138",
      "target": "nl0141",
      "type": "dependency"
    },
    {
      "source": "nl0138",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0138",
      "target": "nl0142",
      "type": "dependency"
    },
    {
      "source": "nl0139",
      "target": "nl0136",
      "type": "dependency"
    },
    {
      "source": "nl0139",
      "target": "nl0137",
      "type": "dependency"
    },
    {
      "source": "nl0139",
      "target": "nl0138",
      "type": "dependency"
    },
    {
      "source": "nl0139",
      "target": "nl0140",
      "type": "dependency"
    },
    {
      "source": "nl0139",
      "target": "nl0141",
      "type": "dependency"
    },
    {
      "source": "nl0139",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0139",
      "target": "nl0142",
      "type": "dependency"
    },
    {
      "source": "nl0140",
      "target": "nl0136",
      "type": "dependency"
    },
    {
      "source": "nl0140",
      "target": "nl0137",
      "type": "dependency"
    },
    {
      "source": "nl0140",
      "target": "nl0138",
      "type": "dependency"
    },
    {
      "source": "nl0140",
      "target": "nl0139",
      "type": "dependency"
    },
    {
      "source": "nl0140",
      "target": "nl0141",
      "type": "dependency"
    },
    {
      "source": "nl0140",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0140",
      "target": "nl0142",
      "type": "dependency"
    },
    {
      "source": "nl0141",
      "target": "nl0136",
      "type": "dependency"
    },
    {
      "source": "nl0141",
      "target": "nl0137",
      "type": "dependency"
    },
    {
      "source": "nl0141",
      "target": "nl0138",
      "type": "dependency"
    },
    {
      "source": "nl0141",
      "target": "nl0139",
      "type": "dependency"
    },
    {
      "source": "nl0141",
      "target": "nl0140",
      "type": "dependency"
    },
    {
      "source": "nl0141",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0141",
      "target": "nl0142",
      "type": "dependency"
    },
    {
      "source": "nl0142",
      "target": "nl0136",
      "type": "dependency"
    },
    {
      "source": "nl0142",
      "target": "nl0137",
      "type": "dependency"
    },
    {
      "source": "nl0142",
      "target": "nl0138",
      "type": "dependency"
    },
    {
      "source": "nl0142",
      "target": "nl0139",
      "type": "dependency"
    },
    {
      "source": "nl0142",
      "target": "nl0140",
      "type": "dependency"
    },
    {
      "source": "nl0142",
      "target": "nl0141",
      "type": "dependency"
    },
    {
      "source": "nl0142",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0146",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0147",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0149",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0148",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0146",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0147",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0149",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0148",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0146",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0147",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0149",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0148",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0147",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0149",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0148",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0146",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0149",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0146",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0149",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0148",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0146",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0147",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0166",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0163",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0151",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0152",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0153",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0155",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0156",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0157",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0158",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0161",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0162",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0164",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0165",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0001",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0002",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0002",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0003",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0003",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0004",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0004",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0005",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0005",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0006",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0006",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0007",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0007",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0008",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0008",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0009",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0009",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0010",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0010",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0011",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0011",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0012",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0012",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0013",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0013",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0014",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0014",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0015",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0015",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0042",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0042",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0043",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0043",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0044",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0044",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0045",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0045",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0046",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0046",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0047",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0047",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0048",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0048",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0113",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0114",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0115",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0116",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0117",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0118",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0119",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0120",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0121",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0122",
      "target": "ns0006",
      "type": "views"
    },
    {
      "source": "nl0001",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0001",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0002",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0003",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0004",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0005",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0006",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0007",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0008",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0009",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0010",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0011",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0012",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0013",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0014",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0015",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0016",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0017",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0018",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0019",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0020",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0021",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0022",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0023",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0024",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0025",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0026",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0027",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0028",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0029",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0030",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0031",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0032",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0033",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0034",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0035",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0036",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0037",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0038",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0038",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0038",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0038",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0038",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0038",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0039",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0039",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0039",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0039",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0039",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0039",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0040",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0040",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0040",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0040",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0040",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0040",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0041",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0041",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0041",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0041",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0041",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0041",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0042",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0043",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0044",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0045",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0046",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0047",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0048",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0049",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0050",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0051",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0052",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0053",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0054",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0055",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0056",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0057",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0058",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0059",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0060",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0061",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0062",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0063",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0064",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0065",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0066",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0067",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0068",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0069",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0070",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0071",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0072",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0073",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0074",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0075",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0076",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0077",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0078",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0079",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0080",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0081",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0082",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0083",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0084",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0085",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0086",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0087",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0088",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0089",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0090",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0091",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0092",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0093",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0094",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0095",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0096",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0097",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0098",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0099",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0100",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0101",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0102",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0491",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0490",
      "type": "dependency"
    },
    {
      "source": "nl0103",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0104",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0104",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0104",
      "target": "nl0491",
      "type": "dependency"
    },
    {
      "source": "nl0104",
      "target": "nl0490",
      "type": "dependency"
    },
    {
      "source": "nl0104",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0491",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0490",
      "type": "dependency"
    },
    {
      "source": "nl0105",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0106",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0106",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0106",
      "target": "nl0491",
      "type": "dependency"
    },
    {
      "source": "nl0106",
      "target": "nl0490",
      "type": "dependency"
    },
    {
      "source": "nl0106",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0491",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0490",
      "type": "dependency"
    },
    {
      "source": "nl0107",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0491",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0490",
      "type": "dependency"
    },
    {
      "source": "nl0108",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0109",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0109",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0109",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0109",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0109",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0110",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0110",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0110",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0110",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0110",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0111",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0111",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0111",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0111",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0111",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0112",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0112",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0112",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0112",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0112",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0113",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0114",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0115",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0116",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0117",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0118",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0119",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0120",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0121",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0122",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0123",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0124",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0125",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0126",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0127",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0128",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0129",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0130",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0131",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0132",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0133",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0134",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0135",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0136",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0137",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0138",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0139",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0140",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0141",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0142",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0372",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0373",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0143",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0372",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0373",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0144",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0372",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0373",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0145",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0372",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0373",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0146",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0372",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0373",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0147",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0372",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0373",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0148",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0372",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0373",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0149",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0150",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0151",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0152",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0153",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0154",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0155",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0156",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0157",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0158",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0159",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0160",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0161",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0162",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0163",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0164",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0165",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0166",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0215",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0216",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0217",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0218",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0219",
      "type": "dependency"
    },
    {
      "source": "nl0214",
      "target": "nl0220",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0214",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0216",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0217",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0218",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0219",
      "type": "dependency"
    },
    {
      "source": "nl0215",
      "target": "nl0220",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0214",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0215",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0217",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0218",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0219",
      "type": "dependency"
    },
    {
      "source": "nl0216",
      "target": "nl0220",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0214",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0215",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0216",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0218",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0219",
      "type": "dependency"
    },
    {
      "source": "nl0217",
      "target": "nl0220",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0214",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0215",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0216",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0217",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0219",
      "type": "dependency"
    },
    {
      "source": "nl0218",
      "target": "nl0220",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0214",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0215",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0216",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0217",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0218",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0219",
      "target": "nl0220",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0214",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0215",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0216",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0217",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0218",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0220",
      "target": "nl0219",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0221",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0222",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0223",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0224",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0225",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0226",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0227",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0228",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0229",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0230",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0231",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0232",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0233",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0234",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0235",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0236",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0237",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0238",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0239",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0240",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0241",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0242",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0243",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0244",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0245",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0246",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0247",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0248",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0249",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0250",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0251",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0252",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0253",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0254",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0256",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0255",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0248",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0221",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0115",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0222",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0249",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0250",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0223",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0224",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0225",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0251",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0227",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0067",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0228",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0229",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0252",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0230",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0231",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0253",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0254",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0255",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0232",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0233",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0234",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0235",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0236",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0245",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0246",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0240",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0241",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0242",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0243",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0247",
      "type": "dependency"
    },
    {
      "source": "nl0256",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0258",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0259",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0260",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0261",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0262",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0263",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0264",
      "type": "dependency"
    },
    {
      "source": "nl0257",
      "target": "nl0265",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0257",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0259",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0260",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0261",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0262",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0263",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0264",
      "type": "dependency"
    },
    {
      "source": "nl0258",
      "target": "nl0265",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0257",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0258",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0260",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0261",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0262",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0263",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0264",
      "type": "dependency"
    },
    {
      "source": "nl0259",
      "target": "nl0265",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0257",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0258",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0259",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0261",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0262",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0263",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0264",
      "type": "dependency"
    },
    {
      "source": "nl0260",
      "target": "nl0265",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0257",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0258",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0259",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0260",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0262",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0263",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0264",
      "type": "dependency"
    },
    {
      "source": "nl0261",
      "target": "nl0265",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0257",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0258",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0259",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0260",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0261",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0263",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0264",
      "type": "dependency"
    },
    {
      "source": "nl0262",
      "target": "nl0265",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0257",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0258",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0259",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0260",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0261",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0262",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0264",
      "type": "dependency"
    },
    {
      "source": "nl0263",
      "target": "nl0265",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0257",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0258",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0259",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0260",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0261",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0262",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0263",
      "type": "dependency"
    },
    {
      "source": "nl0264",
      "target": "nl0265",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0257",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0258",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0259",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0260",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0261",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0262",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0263",
      "type": "dependency"
    },
    {
      "source": "nl0265",
      "target": "nl0264",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0274",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0267",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0275",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0271",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0272",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0266",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0274",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0275",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0271",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0272",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0267",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0274",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0267",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0275",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0271",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0272",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0268",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0274",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0267",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0275",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0271",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0272",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0269",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0274",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0267",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0275",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0271",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0272",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0270",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0274",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0267",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0275",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0272",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0271",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0274",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0267",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0275",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0271",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0272",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0274",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0267",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0275",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0271",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0272",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0273",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0267",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0275",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0271",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0272",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0274",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0274",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0267",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0442",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0271",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0272",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0154",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0275",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0276",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0276",
      "target": "nl0277",
      "type": "dependency"
    },
    {
      "source": "nl0277",
      "target": "nl0276",
      "type": "dependency"
    },
    {
      "source": "nl0277",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0279",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0280",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0281",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0282",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0283",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0284",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0285",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0286",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0287",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0288",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0289",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0290",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0291",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0293",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0292",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0290",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0278",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0076",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0279",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0280",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0281",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0282",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0291",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0292",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0283",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0284",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0285",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0273",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0070",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0286",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0268",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0287",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0269",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0288",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0270",
      "type": "dependency"
    },
    {
      "source": "nl0293",
      "target": "nl0289",
      "type": "dependency"
    },
    {
      "source": "nl0294",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0295",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0295",
      "target": "nl0296",
      "type": "dependency"
    },
    {
      "source": "nl0295",
      "target": "nl0297",
      "type": "dependency"
    },
    {
      "source": "nl0295",
      "target": "nl0298",
      "type": "dependency"
    },
    {
      "source": "nl0295",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0295",
      "target": "nl0299",
      "type": "dependency"
    },
    {
      "source": "nl0295",
      "target": "nl0300",
      "type": "dependency"
    },
    {
      "source": "nl0295",
      "target": "nl0301",
      "type": "dependency"
    },
    {
      "source": "nl0296",
      "target": "nl0295",
      "type": "dependency"
    },
    {
      "source": "nl0296",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0296",
      "target": "nl0297",
      "type": "dependency"
    },
    {
      "source": "nl0296",
      "target": "nl0298",
      "type": "dependency"
    },
    {
      "source": "nl0296",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0296",
      "target": "nl0299",
      "type": "dependency"
    },
    {
      "source": "nl0296",
      "target": "nl0300",
      "type": "dependency"
    },
    {
      "source": "nl0296",
      "target": "nl0301",
      "type": "dependency"
    },
    {
      "source": "nl0297",
      "target": "nl0295",
      "type": "dependency"
    },
    {
      "source": "nl0297",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0297",
      "target": "nl0296",
      "type": "dependency"
    },
    {
      "source": "nl0297",
      "target": "nl0298",
      "type": "dependency"
    },
    {
      "source": "nl0297",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0297",
      "target": "nl0299",
      "type": "dependency"
    },
    {
      "source": "nl0297",
      "target": "nl0300",
      "type": "dependency"
    },
    {
      "source": "nl0297",
      "target": "nl0301",
      "type": "dependency"
    },
    {
      "source": "nl0298",
      "target": "nl0295",
      "type": "dependency"
    },
    {
      "source": "nl0298",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0298",
      "target": "nl0296",
      "type": "dependency"
    },
    {
      "source": "nl0298",
      "target": "nl0297",
      "type": "dependency"
    },
    {
      "source": "nl0298",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0298",
      "target": "nl0299",
      "type": "dependency"
    },
    {
      "source": "nl0298",
      "target": "nl0300",
      "type": "dependency"
    },
    {
      "source": "nl0298",
      "target": "nl0301",
      "type": "dependency"
    },
    {
      "source": "nl0299",
      "target": "nl0295",
      "type": "dependency"
    },
    {
      "source": "nl0299",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0299",
      "target": "nl0296",
      "type": "dependency"
    },
    {
      "source": "nl0299",
      "target": "nl0297",
      "type": "dependency"
    },
    {
      "source": "nl0299",
      "target": "nl0298",
      "type": "dependency"
    },
    {
      "source": "nl0299",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0299",
      "target": "nl0300",
      "type": "dependency"
    },
    {
      "source": "nl0299",
      "target": "nl0301",
      "type": "dependency"
    },
    {
      "source": "nl0300",
      "target": "nl0295",
      "type": "dependency"
    },
    {
      "source": "nl0300",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0300",
      "target": "nl0296",
      "type": "dependency"
    },
    {
      "source": "nl0300",
      "target": "nl0297",
      "type": "dependency"
    },
    {
      "source": "nl0300",
      "target": "nl0298",
      "type": "dependency"
    },
    {
      "source": "nl0300",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0300",
      "target": "nl0299",
      "type": "dependency"
    },
    {
      "source": "nl0300",
      "target": "nl0301",
      "type": "dependency"
    },
    {
      "source": "nl0301",
      "target": "nl0295",
      "type": "dependency"
    },
    {
      "source": "nl0301",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0301",
      "target": "nl0296",
      "type": "dependency"
    },
    {
      "source": "nl0301",
      "target": "nl0297",
      "type": "dependency"
    },
    {
      "source": "nl0301",
      "target": "nl0298",
      "type": "dependency"
    },
    {
      "source": "nl0301",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0301",
      "target": "nl0299",
      "type": "dependency"
    },
    {
      "source": "nl0301",
      "target": "nl0300",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0302",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0303",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0304",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0305",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0306",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0307",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0308",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0309",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0310",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0311",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0312",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0313",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0314",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0315",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0317",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0316",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0116",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0302",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0303",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0304",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0305",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0306",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0307",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0308",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0309",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0104",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0310",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0311",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0312",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0313",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0314",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0315",
      "type": "dependency"
    },
    {
      "source": "nl0317",
      "target": "nl0316",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0318",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0319",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0320",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0321",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0322",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0323",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0324",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0325",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0326",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0327",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0328",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0329",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0330",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0331",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0332",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0333",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0334",
      "target": "nl0335",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0321",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0322",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0323",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0326",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0330",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0331",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0332",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0335",
      "target": "nl0334",
      "type": "dependency"
    },
    {
      "source": "nl0336",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0336",
      "target": "nl0339",
      "type": "dependency"
    },
    {
      "source": "nl0336",
      "target": "nl0340",
      "type": "dependency"
    },
    {
      "source": "nl0336",
      "target": "nl0337",
      "type": "dependency"
    },
    {
      "source": "nl0336",
      "target": "nl0338",
      "type": "dependency"
    },
    {
      "source": "nl0336",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0337",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0337",
      "target": "nl0339",
      "type": "dependency"
    },
    {
      "source": "nl0337",
      "target": "nl0340",
      "type": "dependency"
    },
    {
      "source": "nl0337",
      "target": "nl0336",
      "type": "dependency"
    },
    {
      "source": "nl0337",
      "target": "nl0338",
      "type": "dependency"
    },
    {
      "source": "nl0337",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0338",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0338",
      "target": "nl0339",
      "type": "dependency"
    },
    {
      "source": "nl0338",
      "target": "nl0340",
      "type": "dependency"
    },
    {
      "source": "nl0338",
      "target": "nl0336",
      "type": "dependency"
    },
    {
      "source": "nl0338",
      "target": "nl0337",
      "type": "dependency"
    },
    {
      "source": "nl0338",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0339",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0339",
      "target": "nl0340",
      "type": "dependency"
    },
    {
      "source": "nl0339",
      "target": "nl0336",
      "type": "dependency"
    },
    {
      "source": "nl0339",
      "target": "nl0337",
      "type": "dependency"
    },
    {
      "source": "nl0339",
      "target": "nl0338",
      "type": "dependency"
    },
    {
      "source": "nl0339",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0340",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0340",
      "target": "nl0339",
      "type": "dependency"
    },
    {
      "source": "nl0340",
      "target": "nl0336",
      "type": "dependency"
    },
    {
      "source": "nl0340",
      "target": "nl0337",
      "type": "dependency"
    },
    {
      "source": "nl0340",
      "target": "nl0338",
      "type": "dependency"
    },
    {
      "source": "nl0340",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0342",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0344",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0345",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0346",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0347",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0341",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0341",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0344",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0345",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0346",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0347",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0342",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0341",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0342",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0344",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0345",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0346",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0347",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0343",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0341",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0342",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0345",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0346",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0347",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0344",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0341",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0342",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0344",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0346",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0347",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0345",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0341",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0342",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0344",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0345",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0347",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0346",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0341",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0342",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0344",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0345",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0346",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0347",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0341",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0342",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0344",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0345",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0346",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0347",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0348",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0341",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0342",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0343",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0344",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0320",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0345",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0346",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0347",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0080",
      "type": "dependency"
    },
    {
      "source": "nl0349",
      "target": "nl0089",
      "type": "dependency"
    },
    {
      "source": "nl0350",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0350",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0350",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0350",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0350",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0350",
      "target": "nl0351",
      "type": "dependency"
    },
    {
      "source": "nl0351",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0351",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0351",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0351",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0351",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0351",
      "target": "nl0350",
      "type": "dependency"
    },
    {
      "source": "nl0352",
      "target": "nl0353",
      "type": "dependency"
    },
    {
      "source": "nl0352",
      "target": "nl0354",
      "type": "dependency"
    },
    {
      "source": "nl0353",
      "target": "nl0352",
      "type": "dependency"
    },
    {
      "source": "nl0353",
      "target": "nl0354",
      "type": "dependency"
    },
    {
      "source": "nl0354",
      "target": "nl0352",
      "type": "dependency"
    },
    {
      "source": "nl0354",
      "target": "nl0353",
      "type": "dependency"
    },
    {
      "source": "nl0355",
      "target": "nl0357",
      "type": "dependency"
    },
    {
      "source": "nl0355",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0355",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0355",
      "target": "nl0356",
      "type": "dependency"
    },
    {
      "source": "nl0355",
      "target": "nl0358",
      "type": "dependency"
    },
    {
      "source": "nl0355",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0356",
      "target": "nl0357",
      "type": "dependency"
    },
    {
      "source": "nl0356",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0356",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0356",
      "target": "nl0355",
      "type": "dependency"
    },
    {
      "source": "nl0356",
      "target": "nl0358",
      "type": "dependency"
    },
    {
      "source": "nl0356",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0357",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0357",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0357",
      "target": "nl0355",
      "type": "dependency"
    },
    {
      "source": "nl0357",
      "target": "nl0356",
      "type": "dependency"
    },
    {
      "source": "nl0357",
      "target": "nl0358",
      "type": "dependency"
    },
    {
      "source": "nl0357",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0358",
      "target": "nl0357",
      "type": "dependency"
    },
    {
      "source": "nl0358",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0358",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0358",
      "target": "nl0355",
      "type": "dependency"
    },
    {
      "source": "nl0358",
      "target": "nl0356",
      "type": "dependency"
    },
    {
      "source": "nl0358",
      "target": "nl0145",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0359",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0360",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0361",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0362",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0363",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0364",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0365",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0366",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0367",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0368",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0363",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0364",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0369",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0370",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0370",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0370",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0370",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0370",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0370",
      "target": "nl0371",
      "type": "dependency"
    },
    {
      "source": "nl0370",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0370",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0370",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0371",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0371",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0371",
      "target": "nl0100",
      "type": "dependency"
    },
    {
      "source": "nl0371",
      "target": "nl0101",
      "type": "dependency"
    },
    {
      "source": "nl0371",
      "target": "nl0092",
      "type": "dependency"
    },
    {
      "source": "nl0371",
      "target": "nl0095",
      "type": "dependency"
    },
    {
      "source": "nl0371",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0371",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0371",
      "target": "nl0365",
      "type": "dependency"
    },
    {
      "source": "nl0372",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0372",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0372",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0372",
      "target": "nl0373",
      "type": "dependency"
    },
    {
      "source": "nl0372",
      "target": "nl0374",
      "type": "dependency"
    },
    {
      "source": "nl0373",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0373",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0373",
      "target": "nl0372",
      "type": "dependency"
    },
    {
      "source": "nl0373",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0373",
      "target": "nl0374",
      "type": "dependency"
    },
    {
      "source": "nl0374",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0374",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0374",
      "target": "nl0372",
      "type": "dependency"
    },
    {
      "source": "nl0374",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0374",
      "target": "nl0373",
      "type": "dependency"
    },
    {
      "source": "nl0375",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0375",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0375",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0375",
      "target": "nl0460",
      "type": "dependency"
    },
    {
      "source": "nl0376",
      "target": "nl0377",
      "type": "dependency"
    },
    {
      "source": "nl0377",
      "target": "nl0376",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0378",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0379",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0380",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0381",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0382",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0383",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0384",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0385",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0386",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0387",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0388",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0389",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0390",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0391",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0392",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0393",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0394",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0395",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0396",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0397",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0397",
      "target": "nl0398",
      "type": "dependency"
    },
    {
      "source": "nl0397",
      "target": "nl0399",
      "type": "dependency"
    },
    {
      "source": "nl0397",
      "target": "nl0400",
      "type": "dependency"
    },
    {
      "source": "nl0397",
      "target": "nl0401",
      "type": "dependency"
    },
    {
      "source": "nl0397",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0397",
      "target": "nl0402",
      "type": "dependency"
    },
    {
      "source": "nl0398",
      "target": "nl0397",
      "type": "dependency"
    },
    {
      "source": "nl0398",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0398",
      "target": "nl0399",
      "type": "dependency"
    },
    {
      "source": "nl0398",
      "target": "nl0400",
      "type": "dependency"
    },
    {
      "source": "nl0398",
      "target": "nl0401",
      "type": "dependency"
    },
    {
      "source": "nl0398",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0398",
      "target": "nl0402",
      "type": "dependency"
    },
    {
      "source": "nl0399",
      "target": "nl0397",
      "type": "dependency"
    },
    {
      "source": "nl0399",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0399",
      "target": "nl0398",
      "type": "dependency"
    },
    {
      "source": "nl0399",
      "target": "nl0400",
      "type": "dependency"
    },
    {
      "source": "nl0399",
      "target": "nl0401",
      "type": "dependency"
    },
    {
      "source": "nl0399",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0399",
      "target": "nl0402",
      "type": "dependency"
    },
    {
      "source": "nl0400",
      "target": "nl0397",
      "type": "dependency"
    },
    {
      "source": "nl0400",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0400",
      "target": "nl0398",
      "type": "dependency"
    },
    {
      "source": "nl0400",
      "target": "nl0399",
      "type": "dependency"
    },
    {
      "source": "nl0400",
      "target": "nl0401",
      "type": "dependency"
    },
    {
      "source": "nl0400",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0400",
      "target": "nl0402",
      "type": "dependency"
    },
    {
      "source": "nl0401",
      "target": "nl0397",
      "type": "dependency"
    },
    {
      "source": "nl0401",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0401",
      "target": "nl0398",
      "type": "dependency"
    },
    {
      "source": "nl0401",
      "target": "nl0399",
      "type": "dependency"
    },
    {
      "source": "nl0401",
      "target": "nl0400",
      "type": "dependency"
    },
    {
      "source": "nl0401",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0401",
      "target": "nl0402",
      "type": "dependency"
    },
    {
      "source": "nl0402",
      "target": "nl0397",
      "type": "dependency"
    },
    {
      "source": "nl0402",
      "target": "nl0266",
      "type": "dependency"
    },
    {
      "source": "nl0402",
      "target": "nl0398",
      "type": "dependency"
    },
    {
      "source": "nl0402",
      "target": "nl0399",
      "type": "dependency"
    },
    {
      "source": "nl0402",
      "target": "nl0400",
      "type": "dependency"
    },
    {
      "source": "nl0402",
      "target": "nl0401",
      "type": "dependency"
    },
    {
      "source": "nl0402",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0403",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0403",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0403",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0403",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0403",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0403",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0403",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0404",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0404",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0404",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0404",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0404",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0404",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0405",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0405",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0405",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0405",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0405",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0405",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0406",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0406",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0406",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0406",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0406",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0406",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0407",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0407",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0407",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0407",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0407",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0407",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0408",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0408",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0408",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0408",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0408",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0408",
      "target": "nl0409",
      "type": "dependency"
    },
    {
      "source": "nl0409",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0409",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0409",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0409",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0409",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0409",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0410",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0410",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0410",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0411",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0411",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0412",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0413",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0414",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0415",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0416",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0417",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0418",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0419",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0420",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0421",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0422",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0423",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0424",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0425",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0426",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0427",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0428",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0429",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0430",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0431",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0432",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0433",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0435",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0434",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0412",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0328",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0088",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0413",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0414",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0415",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0416",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0417",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0418",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0426",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0428",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0419",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0420",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0429",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0430",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0421",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0422",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0423",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0431",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0432",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0433",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0434",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0424",
      "type": "dependency"
    },
    {
      "source": "nl0435",
      "target": "nl0425",
      "type": "dependency"
    },
    {
      "source": "nl0436",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0436",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0436",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0436",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0436",
      "target": "nl0445",
      "type": "dependency"
    },
    {
      "source": "nl0436",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0436",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0438",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0438",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0438",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0438",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0438",
      "target": "nl0445",
      "type": "dependency"
    },
    {
      "source": "nl0438",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0438",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0439",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0439",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0439",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0439",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0439",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0439",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0439",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0439",
      "target": "nl0445",
      "type": "dependency"
    },
    {
      "source": "nl0441",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0441",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0441",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0441",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0441",
      "target": "nl0359",
      "type": "dependency"
    },
    {
      "source": "nl0441",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0441",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0441",
      "target": "nl0445",
      "type": "dependency"
    },
    {
      "source": "nl0442",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0443",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0443",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0443",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0443",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0443",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0443",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0443",
      "target": "nl0445",
      "type": "dependency"
    },
    {
      "source": "nl0445",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0445",
      "target": "nl0125",
      "type": "dependency"
    },
    {
      "source": "nl0445",
      "target": "nl0443",
      "type": "dependency"
    },
    {
      "source": "nl0445",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0445",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0445",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0445",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0446",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0446",
      "target": "nl0451",
      "type": "dependency"
    },
    {
      "source": "nl0447",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0447",
      "target": "nl0446",
      "type": "dependency"
    },
    {
      "source": "nl0447",
      "target": "nl0451",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0036",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0037",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0362",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0448",
      "target": "nl0327",
      "type": "dependency"
    },
    {
      "source": "nl0450",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0450",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0450",
      "target": "nl0451",
      "type": "dependency"
    },
    {
      "source": "nl0450",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0450",
      "target": "nl0452",
      "type": "dependency"
    },
    {
      "source": "nl0451",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0451",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0451",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0451",
      "target": "nl0452",
      "type": "dependency"
    },
    {
      "source": "nl0452",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0452",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0452",
      "target": "nl0451",
      "type": "dependency"
    },
    {
      "source": "nl0452",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0454",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0455",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0456",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0457",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0458",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0459",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0460",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0453",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0453",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0455",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0456",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0457",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0458",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0459",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0460",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0454",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0453",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0454",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0456",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0457",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0458",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0459",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0460",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0455",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0453",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0454",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0455",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0457",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0458",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0459",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0460",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0456",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0453",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0454",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0455",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0456",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0458",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0459",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0460",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0457",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0453",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0454",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0455",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0456",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0457",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0459",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0460",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0458",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0453",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0454",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0455",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0456",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0457",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0458",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0460",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0459",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0453",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0454",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0455",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0456",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0457",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0458",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0459",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0126",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0127",
      "type": "dependency"
    },
    {
      "source": "nl0460",
      "target": "nl0128",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0463",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0464",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0467",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0469",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0468",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0461",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0461",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0463",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0464",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0467",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0469",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0468",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0462",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0461",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0464",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0467",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0469",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0468",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0463",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0461",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0463",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0467",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0469",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0468",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0464",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0461",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0463",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0464",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0467",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0469",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0468",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0465",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0461",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0463",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0464",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0467",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0469",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0468",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0466",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0461",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0463",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0464",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0469",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0468",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0467",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0461",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0462",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0463",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0464",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0465",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0466",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0467",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0469",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0333",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0405",
      "type": "dependency"
    },
    {
      "source": "nl0468",
      "target": "nl0408",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0470",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0469",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0324",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0469",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0318",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0110",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0064",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0111",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0159",
      "type": "dependency"
    },
    {
      "source": "nl0470",
      "target": "nl0160",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0471",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0472",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0473",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0474",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0475",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0476",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0477",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0478",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0479",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0480",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0481",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0482",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0483",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0485",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0484",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0471",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0404",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0472",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0474",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0475",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0144",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0476",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0478",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0479",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0480",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0481",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0057",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0482",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0483",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0059",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0484",
      "type": "dependency"
    },
    {
      "source": "nl0485",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0486",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0486",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0486",
      "target": "nl0487",
      "type": "dependency"
    },
    {
      "source": "nl0486",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0486",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0487",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0487",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0487",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0487",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0487",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0488",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0488",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0488",
      "target": "nl0487",
      "type": "dependency"
    },
    {
      "source": "nl0488",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0488",
      "target": "nl0489",
      "type": "dependency"
    },
    {
      "source": "nl0489",
      "target": "nl0488",
      "type": "dependency"
    },
    {
      "source": "nl0489",
      "target": "nl0486",
      "type": "dependency"
    },
    {
      "source": "nl0489",
      "target": "nl0477",
      "type": "dependency"
    },
    {
      "source": "nl0489",
      "target": "nl0487",
      "type": "dependency"
    },
    {
      "source": "nl0489",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0490",
      "target": "nl0491",
      "type": "dependency"
    },
    {
      "source": "nl0490",
      "target": "nl0399",
      "type": "dependency"
    },
    {
      "source": "nl0491",
      "target": "nl0490",
      "type": "dependency"
    },
    {
      "source": "nl0491",
      "target": "nl0399",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0492",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0494",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0495",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0496",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0497",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0498",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0499",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0500",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0501",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0503",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0502",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0492",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0150",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0501",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0495",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0494",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0500",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0498",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0497",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0499",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0496",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0325",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0473",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0319",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0427",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0360",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0361",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0366",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0329",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0407",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0369",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0406",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0502",
      "type": "dependency"
    },
    {
      "source": "nl0503",
      "target": "nl0370",
      "type": "dependency"
    },
    {
      "source": "nl0278",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0278",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0279",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0279",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0280",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0280",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0281",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0281",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0282",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0282",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0283",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0283",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0284",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0284",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0285",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0285",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0286",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0286",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0287",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0287",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0288",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0288",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0289",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0289",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0290",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0290",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0291",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0291",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0292",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0292",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0293",
      "target": "ns0003",
      "type": "views"
    },
    {
      "source": "nl0293",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0302",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0303",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0304",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0305",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0306",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0307",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0308",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0309",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0310",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0311",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0312",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0313",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0314",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0315",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0316",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0317",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0492",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0494",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0495",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0496",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0497",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0498",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0499",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0500",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0501",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0502",
      "target": "ns0002",
      "type": "views"
    },
    {
      "source": "nl0503",
      "target": "ns0002",
      "type": "views"
    }
  ]
}